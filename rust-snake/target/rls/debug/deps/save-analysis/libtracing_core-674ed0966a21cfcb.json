{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24","program":"/home/vagrant/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing_core","--edition=2018","/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=674ed0966a21cfcb","-C","extra-filename=-674ed0966a21cfcb","--out-dir","/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps","-L","dependency=/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps","--extern","lazy_static=/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps/liblazy_static-74f189dfbff90b23.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vagrant/.rustup/toolchains/stable-aarch64-unknown-linux-gnu"],"output":"/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps/libtracing_core-674ed0966a21cfcb.rmeta"},"prelude":{"crate_id":{"name":"tracing_core","disambiguator":[18257735720685730590,0]},"crate_root":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src","external_crates":[{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16445510266835534892,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","num":2,"id":{"name":"core","disambiguator":[5715287577345846916,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2199189476072148838,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9754053951972344886,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8608258377683752015,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[11708387549564946430,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11871207697450564647,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2882403878542877674,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1632236844500716591,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2176439197024966323,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[18408288890896598870,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[15351315317909885583,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3890495817449864796,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[1301525367465190851,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[9159134502401529852,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17249337610897666069,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1193766655778347732,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[6285120501625389371,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[15349562571025913859,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","num":20,"id":{"name":"lazy_static","disambiguator":[15098207086390802664,0]}}],"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":0,"byte_end":9525,"line_start":1,"line_end":304,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":8513},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9074,"byte_end":9078,"line_start":278,"line_end":278,"column_start":23,"column_end":27},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9282,"byte_end":9290,"line_start":292,"line_end":292,"column_start":15,"column_end":23},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9308,"byte_end":9316,"line_start":293,"line_end":293,"column_start":17,"column_end":25},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":831},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9329,"byte_end":9334,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":839},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9347,"byte_end":9352,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1086},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9369,"byte_end":9374,"line_start":296,"line_end":296,"column_start":16,"column_end":21},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1104},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9376,"byte_end":9387,"line_start":296,"line_end":296,"column_start":23,"column_end":34},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":471},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9389,"byte_end":9397,"line_start":296,"line_end":296,"column_start":36,"column_end":44},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9416,"byte_end":9426,"line_start":297,"line_end":297,"column_start":17,"column_end":27},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9457,"byte_end":9461,"line_start":300,"line_end":300,"column_start":26,"column_end":30},"alias_span":null,"name":"Kind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9475,"byte_end":9483,"line_start":300,"line_end":300,"column_start":44,"column_end":52},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":0,"byte_end":9525,"line_start":1,"line_end":304,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":70},{"krate":0,"index":221},{"krate":0,"index":251},{"krate":0,"index":446},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796}],"decl_id":null,"docs":" Core primitives for `tracing`.","sig":null,"attributes":[{"value":"/ Core primitives for `tracing`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":35,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs to collect","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":39,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ structured, event-based diagnostic information. This crate defines the core","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":113,"byte_end":192,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ primitives of `tracing`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":193,"byte_end":221,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":222,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This crate provides:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":226,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":251,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * [`span::Id`] identifies a span within the execution of a program.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":255,"byte_end":326,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":327,"byte_end":330,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * [`Event`] represents a single event within a trace.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":331,"byte_end":388,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":389,"byte_end":392,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Subscriber`], the trait implemented to collect trace data.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":393,"byte_end":459,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":460,"byte_end":463,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * [`Metadata`] and [`Callsite`] provide information describing spans and","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":464,"byte_end":540,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   `Event`s.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":541,"byte_end":556,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":557,"byte_end":560,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * [`Field`], [`FieldSet`], [`Value`], and [`ValueSet`] represent the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":561,"byte_end":633,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/   structured data attached to a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":634,"byte_end":675,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":676,"byte_end":679,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * [`Dispatch`] allows spans and events to be dispatched to `Subscriber`s.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":680,"byte_end":757,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":758,"byte_end":761,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In addition, it defines the global callsite registry and per-thread current","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":762,"byte_end":841,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ dispatcher which other components of the tracing system rely on.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":842,"byte_end":910,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":911,"byte_end":914,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.49+][msrv]*","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":915,"byte_end":969,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":970,"byte_end":973,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":974,"byte_end":1010,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1011,"byte_end":1014,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1015,"byte_end":1027,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1028,"byte_end":1031,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Application authors will typically not use this crate directly. Instead,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1032,"byte_end":1108,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ they will use the [`tracing`] crate, which provides a much more","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1109,"byte_end":1176,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ fully-featured API. However, this crate's API will change very infrequently,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1177,"byte_end":1257,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ so it may be used when dependencies must be very stable.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1258,"byte_end":1318,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `Subscriber` implementations may depend on `tracing-core` rather than","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1323,"byte_end":1396,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ `tracing`, as the additional APIs provided by `tracing` are primarily useful","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1397,"byte_end":1477,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ for instrumenting libraries and applications, and are generally not","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1478,"byte_end":1549,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ necessary for `Subscriber` implementations.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1550,"byte_end":1597,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1598,"byte_end":1601,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The [`tokio-rs/tracing`] repository contains less stable crates designed to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1602,"byte_end":1681,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ be used with the `tracing` ecosystem. It includes a collection of","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1682,"byte_end":1751,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ `Subscriber` implementations, as well as utility and adapter crates.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1752,"byte_end":1824,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1825,"byte_end":1828,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1829,"byte_end":1855,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1856,"byte_end":1859,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The following crate [feature flags] are available:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1860,"byte_end":1914,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1915,"byte_end":1918,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1919,"byte_end":1989,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1990,"byte_end":1993,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":1994,"byte_end":2072,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2073,"byte_end":2076,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2077,"byte_end":2090,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2091,"byte_end":2111,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/   tracing-core = { version = \"0.1.22\", default-features = false }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2112,"byte_end":2181,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/   ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2182,"byte_end":2191,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2192,"byte_end":2195,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/   **Note**:`tracing-core`'s `no_std` support requires `liballoc`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2196,"byte_end":2265,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2266,"byte_end":2269,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### Unstable Features","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2270,"byte_end":2295,"line_start":61,"line_end":61,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2296,"byte_end":2299,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 0.1.x","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2300,"byte_end":2387,"line_start":63,"line_end":63,"column_start":1,"column_end":88}},{"value":"/ releases. To enable these features, the `--cfg tracing_unstable` must be passed to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2388,"byte_end":2474,"line_start":64,"line_end":64,"column_start":1,"column_end":87}},{"value":"/ `rustc` when compiling.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2475,"byte_end":2502,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2503,"byte_end":2506,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The following unstable feature flags are currently available:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2507,"byte_end":2572,"line_start":67,"line_end":67,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2573,"byte_end":2576,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ * `valuable`: Enables support for recording [field values] using the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2577,"byte_end":2649,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/   [`valuable`] crate.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2650,"byte_end":2675,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2676,"byte_end":2679,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ #### Enabling Unstable Features","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2680,"byte_end":2715,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2716,"byte_end":2719,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The easiest way to set the `tracing_unstable` cfg is to use the `RUSTFLAGS`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2720,"byte_end":2799,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ env variable when running `cargo` commands:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2800,"byte_end":2847,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2848,"byte_end":2851,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2852,"byte_end":2864,"line_start":77,"line_end":77,"column_start":1,"column_end":13}},{"value":"/ RUSTFLAGS=\"--cfg tracing_unstable\" cargo build","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2865,"byte_end":2915,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2916,"byte_end":2923,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ Alternatively, the following can be added to the `.cargo/config` file in a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":2924,"byte_end":3002,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ project to automatically enable the cfg flag for that project:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3003,"byte_end":3069,"line_start":81,"line_end":81,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3070,"byte_end":3073,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3074,"byte_end":3085,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3086,"byte_end":3097,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tracing_unstable\"]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3098,"byte_end":3143,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3144,"byte_end":3151,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3152,"byte_end":3155,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3156,"byte_end":3253,"line_start":88,"line_end":88,"column_start":1,"column_end":98}},{"value":"/ [field values]: crate::field","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3254,"byte_end":3286,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3287,"byte_end":3338,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3339,"byte_end":3342,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3343,"byte_end":3373,"line_start":92,"line_end":92,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3374,"byte_end":3377,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3378,"byte_end":3455,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ version is 1.49. The current Tracing version is not guaranteed to build on","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3456,"byte_end":3534,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3535,"byte_end":3596,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3597,"byte_end":3600,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3601,"byte_end":3680,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3681,"byte_end":3758,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3759,"byte_end":3835,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3836,"byte_end":3914,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3915,"byte_end":3990,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":3991,"byte_end":4067,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4068,"byte_end":4115,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4116,"byte_end":4119,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4120,"byte_end":4123,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [`span::Id`]: span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4124,"byte_end":4161,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/ [`Event`]: event/struct.Event.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4162,"byte_end":4200,"line_start":108,"line_end":108,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4201,"byte_end":4253,"line_start":109,"line_end":109,"column_start":1,"column_end":53}},{"value":"/ [`Metadata`]: metadata/struct.Metadata.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4254,"byte_end":4301,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/ [`Callsite`]: callsite/trait.Callsite.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4302,"byte_end":4348,"line_start":111,"line_end":111,"column_start":1,"column_end":47}},{"value":"/ [`Field`]: field/struct.Field.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4349,"byte_end":4387,"line_start":112,"line_end":112,"column_start":1,"column_end":39}},{"value":"/ [`FieldSet`]: field/struct.FieldSet.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4388,"byte_end":4432,"line_start":113,"line_end":113,"column_start":1,"column_end":45}},{"value":"/ [`Value`]: field/trait.Value.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4433,"byte_end":4470,"line_start":114,"line_end":114,"column_start":1,"column_end":38}},{"value":"/ [`ValueSet`]: field/struct.ValueSet.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4471,"byte_end":4515,"line_start":115,"line_end":115,"column_start":1,"column_end":45}},{"value":"/ [`Dispatch`]: dispatcher/struct.Dispatch.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4516,"byte_end":4565,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4566,"byte_end":4627,"line_start":117,"line_end":117,"column_start":1,"column_end":62}},{"value":"/ [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":4628,"byte_end":4677,"line_start":118,"line_end":118,"column_start":1,"column_end":50}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":5050,"byte_end":5512,"line_start":126,"line_end":147,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callsite","qualname":"::callsite","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":806},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":56},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67}],"decl_id":null,"docs":" Callsites represent the source locations from which spans or events\n originate.\n","sig":null,"attributes":[{"value":"/ Callsites represent the source locations from which spans or events","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":9527,"byte_end":9598,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ originate.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":9599,"byte_end":9613,"line_start":2,"line_end":2,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11903,"byte_end":11911,"line_start":77,"line_end":77,"column_start":11,"column_end":19},"name":"Callsite","qualname":"::callsite::Callsite","value":"Callsite: Sync","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Trait implemented by callsites.","sig":null,"attributes":[{"value":"/ Trait implemented by callsites.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11691,"byte_end":11726,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11727,"byte_end":11730,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ These functions are only intended to be called by the callsite registry, which","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11731,"byte_end":11813,"line_start":75,"line_end":75,"column_start":1,"column_end":83}},{"value":"/ correctly handles determining the common interest between all subscribers.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11814,"byte_end":11892,"line_start":76,"line_end":76,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12041,"byte_end":12053,"line_start":81,"line_end":81,"column_start":8,"column_end":20},"name":"set_interest","qualname":"::callsite::Callsite::set_interest","value":"pub fn set_interest(&Self, Interest)","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Sets the [`Interest`] for this callsite.","sig":null,"attributes":[{"value":"/ Sets the [`Interest`] for this callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11924,"byte_end":11968,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11973,"byte_end":11976,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: ../subscriber/struct.Interest.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11981,"byte_end":12033,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12212,"byte_end":12220,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"metadata","qualname":"::callsite::Callsite::metadata","value":"pub fn metadata(&Self) -> &Metadata","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Returns the [metadata] associated with the callsite.","sig":null,"attributes":[{"value":"/ Returns the [metadata] associated with the callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12087,"byte_end":12143,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12148,"byte_end":12151,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12156,"byte_end":12204,"line_start":85,"line_end":85,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":809},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12447,"byte_end":12457,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"Identifier","qualname":"::callsite::Identifier","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uniquely identifies a [`Callsite`]","sig":null,"attributes":[{"value":"/ Uniquely identifies a [`Callsite`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12249,"byte_end":12287,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12288,"byte_end":12291,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Two `Identifier`s are equal if they both refer to the same callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12292,"byte_end":12364,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12365,"byte_end":12368,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12369,"byte_end":12418,"line_start":93,"line_end":93,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13070,"byte_end":13095,"line_start":105,"line_end":105,"column_start":5,"column_end":30},"name":"0","qualname":"::callsite::Identifier::0","value":"&'static (dyn callsite::Callsite + 'static)","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":" **Warning**: The fields on this type are currently `pub` because it must\n be able to be constructed statically by macros. However, when `const\n fn`s are available on stable Rust, this will no longer be necessary.\n Thus, these fields are *not* considered stable public API, and they may\n change warning. Do not rely on any fields on `Identifier`. When\n constructing new `Identifier`s, use the `identify_callsite!` macro or\n the `Callsite::id` function instead.\n","sig":null,"attributes":[{"value":"/ **Warning**: The fields on this type are currently `pub` because it must","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12463,"byte_end":12539,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ be able to be constructed statically by macros. However, when `const","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12544,"byte_end":12616,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ fn`s are available on stable Rust, this will no longer be necessary.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12621,"byte_end":12693,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ Thus, these fields are *not* considered stable public API, and they may","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12698,"byte_end":12773,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ change warning. Do not rely on any fields on `Identifier`. When","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12778,"byte_end":12845,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ constructing new `Identifier`s, use the `identify_callsite!` macro or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12850,"byte_end":12923,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ the `Callsite::id` function instead.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":12928,"byte_end":12968,"line_start":102,"line_end":102,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14216,"byte_end":14238,"line_start":127,"line_end":127,"column_start":8,"column_end":30},"name":"rebuild_interest_cache","qualname":"::callsite::rebuild_interest_cache","value":"pub fn rebuild_interest_cache()","parent":null,"children":[],"decl_id":null,"docs":" Clear and reregister interest on every [`Callsite`]","sig":null,"attributes":[{"value":"/ Clear and reregister interest on every [`Callsite`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13101,"byte_end":13156,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13157,"byte_end":13160,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is intended for runtime reconfiguration of filters on traces","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13161,"byte_end":13239,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ when the filter recalculation is much less frequent than trace events are.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13240,"byte_end":13318,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ The alternative is to have the [`Subscriber`] that supports runtime","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13319,"byte_end":13390,"line_start":112,"line_end":112,"column_start":1,"column_end":72}},{"value":"/ reconfiguration of filters always return [`Interest::sometimes()`] so that","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13391,"byte_end":13469,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ [`enabled`] is evaluated for every event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13470,"byte_end":13515,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13516,"byte_end":13519,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will also re-compute the global maximum level as determined by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13520,"byte_end":13600,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ the [`max_level_hint`] method. If a [`Subscriber`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13601,"byte_end":13655,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ implementation changes the value returned by its `max_level_hint`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13656,"byte_end":13725,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ implementation at runtime, then it **must** call this function after that","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13726,"byte_end":13803,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ value changes, in order for the change to be reflected.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13804,"byte_end":13863,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13864,"byte_end":13867,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`max_level_hint`]: ../subscriber/trait.Subscriber.html#method.max_level_hint","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13868,"byte_end":13949,"line_start":122,"line_end":122,"column_start":1,"column_end":82}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":13950,"byte_end":13999,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ [`enabled`]: ../subscriber/trait.Subscriber.html#tymethod.enabled","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14000,"byte_end":14069,"line_start":124,"line_end":124,"column_start":1,"column_end":70}},{"value":"/ [`Interest::sometimes()`]: ../subscriber/struct.Interest.html#method.sometimes","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14070,"byte_end":14152,"line_start":125,"line_end":125,"column_start":1,"column_end":83}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14153,"byte_end":14208,"line_start":126,"line_end":126,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14484,"byte_end":14492,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"register","qualname":"::callsite::register","value":"pub fn register(&'static dyn Callsite)","parent":null,"children":[],"decl_id":null,"docs":" Register a new `Callsite` with the global registry.","sig":null,"attributes":[{"value":"/ Register a new `Callsite` with the global registry.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14328,"byte_end":14383,"line_start":132,"line_end":132,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14384,"byte_end":14387,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This should be called once per callsite after the callsite has been","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14388,"byte_end":14459,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ constructed.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14460,"byte_end":14476,"line_start":135,"line_end":135,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":205},{"krate":0,"index":210},{"krate":0,"index":215},{"krate":0,"index":218}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15444,"byte_end":15491,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15492,"byte_end":15495,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15496,"byte_end":15576,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15577,"byte_end":15655,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15656,"byte_end":15695,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15696,"byte_end":15699,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15700,"byte_end":15732,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15733,"byte_end":15736,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15737,"byte_end":15815,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15816,"byte_end":15891,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15892,"byte_end":15915,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15916,"byte_end":15919,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15920,"byte_end":15957,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15958,"byte_end":15961,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":15962,"byte_end":16037,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16038,"byte_end":16117,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16118,"byte_end":16178,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16179,"byte_end":16257,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16258,"byte_end":16335,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16336,"byte_end":16363,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16364,"byte_end":16367,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16368,"byte_end":16444,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16445,"byte_end":16518,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16519,"byte_end":16531,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16532,"byte_end":16543,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16544,"byte_end":16575,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16576,"byte_end":16601,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16602,"byte_end":16638,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16639,"byte_end":16677,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16678,"byte_end":16686,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16687,"byte_end":16742,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16743,"byte_end":16811,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16812,"byte_end":16859,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16860,"byte_end":16897,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16898,"byte_end":16954,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":16955,"byte_end":17012,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17013,"byte_end":17047,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17048,"byte_end":17081,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17082,"byte_end":17089,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17090,"byte_end":17153,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17154,"byte_end":17183,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17184,"byte_end":17187,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17188,"byte_end":17233,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17234,"byte_end":17285,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17286,"byte_end":17293,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17294,"byte_end":17372,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17373,"byte_end":17401,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17402,"byte_end":17413,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17414,"byte_end":17445,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17446,"byte_end":17471,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17472,"byte_end":17508,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17509,"byte_end":17547,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17548,"byte_end":17556,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17557,"byte_end":17612,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17613,"byte_end":17681,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17682,"byte_end":17729,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17730,"byte_end":17767,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17768,"byte_end":17824,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17825,"byte_end":17882,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17883,"byte_end":17917,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17918,"byte_end":17951,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17952,"byte_end":17959,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":17960,"byte_end":18023,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18024,"byte_end":18071,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18072,"byte_end":18137,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18138,"byte_end":18166,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18167,"byte_end":18170,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18171,"byte_end":18200,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18201,"byte_end":18248,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18249,"byte_end":18288,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18289,"byte_end":18296,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18297,"byte_end":18300,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18301,"byte_end":18335,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18336,"byte_end":18343,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18344,"byte_end":18421,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18422,"byte_end":18502,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18503,"byte_end":18576,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18577,"byte_end":18645,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18646,"byte_end":18649,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18650,"byte_end":18727,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18728,"byte_end":18804,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18805,"byte_end":18830,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18831,"byte_end":18842,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18843,"byte_end":18874,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18875,"byte_end":18900,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18901,"byte_end":18937,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18938,"byte_end":18976,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18977,"byte_end":18985,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":18986,"byte_end":19041,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19042,"byte_end":19110,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19111,"byte_end":19158,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19159,"byte_end":19196,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19197,"byte_end":19253,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19254,"byte_end":19311,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19312,"byte_end":19346,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19347,"byte_end":19380,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19381,"byte_end":19388,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19389,"byte_end":19452,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19453,"byte_end":19500,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19501,"byte_end":19566,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19567,"byte_end":19595,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19596,"byte_end":19599,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19600,"byte_end":19647,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19648,"byte_end":19722,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19723,"byte_end":19766,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19767,"byte_end":19818,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19819,"byte_end":19822,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19823,"byte_end":19864,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19865,"byte_end":19872,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19873,"byte_end":19876,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19877,"byte_end":19942,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>:the thread-local scoped dispatcher","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":19943,"byte_end":20007,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/     (<a href=\"#fn.with_default\"><code>with_default</code></a>) requires the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20008,"byte_end":20087,"line_start":113,"line_end":113,"column_start":1,"column_end":80}},{"value":"/     Rust standard library. <code>no_std</code> users should use","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20088,"byte_end":20155,"line_start":114,"line_end":114,"column_start":1,"column_end":68}},{"value":"/     <a href=\"#fn.set_global_default\"><code>set_global_default</code></a>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20156,"byte_end":20232,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/     instead.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20233,"byte_end":20249,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20250,"byte_end":20260,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20261,"byte_end":20264,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20265,"byte_end":20304,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20305,"byte_end":20308,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20309,"byte_end":20376,"line_start":121,"line_end":121,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20377,"byte_end":20455,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20456,"byte_end":20525,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20526,"byte_end":20546,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20547,"byte_end":20550,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: struct.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20551,"byte_end":20593,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/ [`with_default`]: fn.with_default.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20594,"byte_end":20636,"line_start":127,"line_end":127,"column_start":1,"column_end":43}},{"value":"/ [`set_global_default`]: fn.set_global_default.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20637,"byte_end":20691,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/ [`get_default`]: fn.get_default.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20692,"byte_end":20732,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"/ [`Dispatch`]: struct.Dispatch.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":20733,"byte_end":20771,"line_start":130,"line_end":130,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":814},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":21248,"byte_end":21256,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"Dispatch","qualname":"::dispatcher::Dispatch","value":"Dispatch {  }","parent":null,"children":[{"krate":0,"index":815}],"decl_id":null,"docs":" `Dispatch` trace data to a [`Subscriber`].","sig":null,"attributes":[{"value":"/ `Dispatch` trace data to a [`Subscriber`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":21127,"byte_end":21173,"line_start":152,"line_end":152,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":21174,"byte_end":21177,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":21178,"byte_end":21219,"line_start":154,"line_end":154,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":822},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":22848,"byte_end":22860,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"DefaultGuard","qualname":"::dispatcher::DefaultGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that resets the current default dispatcher to the prior\n default dispatcher when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that resets the current default dispatcher to the prior","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":22644,"byte_end":22711,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ default dispatcher when dropped.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":22712,"byte_end":22748,"line_start":199,"line_end":199,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":22749,"byte_end":22772,"line_start":200,"line_end":200,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23604,"byte_end":23616,"line_start":222,"line_end":222,"column_start":8,"column_end":20},"name":"with_default","qualname":"::dispatcher::with_default","value":"pub fn with_default<T, impl FnOnce() -> T: FnOnce() ->\n                    T>(&Dispatch, impl FnOnce() -> T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this dispatch as the default for the duration of a closure.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":22881,"byte_end":22949,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":22950,"byte_end":22953,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ The default dispatcher is used when creating a new [span] or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":22954,"byte_end":23018,"line_start":207,"line_end":207,"column_start":1,"column_end":65}},{"value":"/ [`Event`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23019,"byte_end":23033,"line_start":208,"line_end":208,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23034,"byte_end":23037,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23038,"byte_end":23103,"line_start":210,"line_end":210,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23104,"byte_end":23184,"line_start":211,"line_end":211,"column_start":1,"column_end":81}},{"value":"/     <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23185,"byte_end":23270,"line_start":212,"line_end":212,"column_start":1,"column_end":86}},{"value":"/     <code>set_global_default</code></a> instead.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23271,"byte_end":23323,"line_start":213,"line_end":213,"column_start":1,"column_end":53}},{"value":"/ </pre>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23324,"byte_end":23334,"line_start":214,"line_end":214,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23335,"byte_end":23338,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23339,"byte_end":23369,"line_start":216,"line_end":216,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23370,"byte_end":23425,"line_start":217,"line_end":217,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23426,"byte_end":23467,"line_start":218,"line_end":218,"column_start":1,"column_end":42}},{"value":"/ [`set_global_default`]: ../fn.set_global_default.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23468,"byte_end":23525,"line_start":219,"line_end":219,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23526,"byte_end":23549,"line_start":220,"line_end":220,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24590,"byte_end":24601,"line_start":244,"line_end":244,"column_start":8,"column_end":19},"name":"set_default","qualname":"::dispatcher::set_default","value":"pub fn set_default(&Dispatch) -> DefaultGuard","parent":null,"children":[],"decl_id":null,"docs":" Sets the dispatch as the default dispatch for the duration of the lifetime\n of the returned DefaultGuard","sig":null,"attributes":[{"value":"/ Sets the dispatch as the default dispatch for the duration of the lifetime","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":23974,"byte_end":24052,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ of the returned DefaultGuard","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24053,"byte_end":24085,"line_start":232,"line_end":232,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24086,"byte_end":24089,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24090,"byte_end":24155,"line_start":234,"line_end":234,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24156,"byte_end":24236,"line_start":235,"line_end":235,"column_start":1,"column_end":81}},{"value":"/     <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24237,"byte_end":24322,"line_start":236,"line_end":236,"column_start":1,"column_end":86}},{"value":"/     <code>set_global_default</code></a> instead.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24323,"byte_end":24375,"line_start":237,"line_end":237,"column_start":1,"column_end":53}},{"value":"/ </pre>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24376,"byte_end":24386,"line_start":238,"line_end":238,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24387,"byte_end":24390,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`set_global_default`]: ../fn.set_global_default.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24391,"byte_end":24448,"line_start":240,"line_end":240,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24449,"byte_end":24472,"line_start":241,"line_end":241,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the dispatcher.\"","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24520,"byte_end":24582,"line_start":243,"line_end":243,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25780,"byte_end":25798,"line_start":267,"line_end":267,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::dispatcher::set_global_default","value":"pub fn set_global_default(Dispatch) -> Result<(), SetGlobalDefaultError>","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local dispatch has been set in a thread\n (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this dispatch as the global default for the duration of the entire program.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24910,"byte_end":24994,"line_start":251,"line_end":251,"column_start":1,"column_end":85}},{"value":"/ Will be used as a fallback if no thread-local dispatch has been set in a thread","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":24995,"byte_end":25078,"line_start":252,"line_end":252,"column_start":1,"column_end":84}},{"value":"/ (using `with_default`.)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25079,"byte_end":25106,"line_start":253,"line_end":253,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25107,"byte_end":25110,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25111,"byte_end":25193,"line_start":255,"line_end":255,"column_start":1,"column_end":83}},{"value":"/ Returns `Err` if the global default has already been set.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25194,"byte_end":25255,"line_start":256,"line_end":256,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25256,"byte_end":25259,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25260,"byte_end":25386,"line_start":258,"line_end":258,"column_start":1,"column_end":127}},{"value":"/     <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25387,"byte_end":25467,"line_start":259,"line_end":259,"column_start":1,"column_end":81}},{"value":"/     <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25468,"byte_end":25545,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"/     executables that depend on the library try to set the default later.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25546,"byte_end":25622,"line_start":261,"line_end":261,"column_start":1,"column_end":77}},{"value":"/ </pre></div>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25623,"byte_end":25639,"line_start":262,"line_end":262,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25640,"byte_end":25643,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25644,"byte_end":25674,"line_start":264,"line_end":264,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25675,"byte_end":25730,"line_start":265,"line_end":265,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":25731,"byte_end":25772,"line_start":266,"line_end":266,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":153},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26713,"byte_end":26725,"line_start":296,"line_end":296,"column_start":8,"column_end":20},"name":"has_been_set","qualname":"::dispatcher::has_been_set","value":"pub fn has_been_set() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a `tracing` dispatcher has ever been set.","sig":null,"attributes":[{"value":"/ Returns true if a `tracing` dispatcher has ever been set.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26487,"byte_end":26548,"line_start":290,"line_end":290,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26549,"byte_end":26552,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This may be used to completely elide trace points if tracing is not in use","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26553,"byte_end":26631,"line_start":292,"line_end":292,"column_start":1,"column_end":79}},{"value":"/ at all or has yet to be initialized.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26632,"byte_end":26672,"line_start":293,"line_end":293,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26688,"byte_end":26705,"line_start":295,"line_end":295,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":827},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26857,"byte_end":26878,"line_start":302,"line_end":302,"column_start":12,"column_end":33},"name":"SetGlobalDefaultError","qualname":"::dispatcher::SetGlobalDefaultError","value":"SetGlobalDefaultError {  }","parent":null,"children":[{"krate":0,"index":828}],"decl_id":null,"docs":" Returned if setting the global dispatcher fails.\n","sig":null,"attributes":[{"value":"/ Returned if setting the global dispatcher fails.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26776,"byte_end":26828,"line_start":300,"line_end":300,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27615,"byte_end":27626,"line_start":324,"line_end":324,"column_start":8,"column_end":19},"name":"get_default","qualname":"::dispatcher::get_default","value":"pub fn get_default<T, F>(F) -> T where F: FnMut(&Dispatch) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27216,"byte_end":27294,"line_start":316,"line_end":316,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27295,"byte_end":27298,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27299,"byte_end":27377,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27378,"byte_end":27457,"line_start":319,"line_end":319,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27458,"byte_end":27526,"line_start":320,"line_end":320,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27527,"byte_end":27530,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: ../dispatcher/struct.Dispatch.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27531,"byte_end":27583,"line_start":322,"line_end":322,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27584,"byte_end":27607,"line_start":323,"line_end":323,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28373,"byte_end":28384,"line_start":349,"line_end":349,"column_start":8,"column_end":19},"name":"get_current","qualname":"::dispatcher::get_current","value":"pub fn get_current<T, impl FnOnce(&Dispatch) -> T: FnOnce(&Dispatch) ->\n                   T>(impl FnOnce(&Dispatch) -> T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27942,"byte_end":28020,"line_start":339,"line_end":339,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28021,"byte_end":28024,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28025,"byte_end":28103,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28104,"byte_end":28183,"line_start":342,"line_end":342,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28184,"byte_end":28252,"line_start":343,"line_end":343,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28253,"byte_end":28256,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: ../dispatcher/struct.Dispatch.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28257,"byte_end":28309,"line_start":345,"line_end":345,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28310,"byte_end":28333,"line_start":346,"line_end":346,"column_start":1,"column_end":24}},{"value":"inline(never)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":28349,"byte_end":28365,"line_start":348,"line_end":348,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":29838,"byte_end":29842,"line_start":401,"line_end":401,"column_start":12,"column_end":16},"name":"none","qualname":"<Dispatch>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Dispatch` that discards events and spans.\n","sig":null,"attributes":[{"value":"/ Returns a new `Dispatch` that discards events and spans.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":29752,"byte_end":29812,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":29817,"byte_end":29826,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30101,"byte_end":30104,"line_start":410,"line_end":410,"column_start":12,"column_end":15},"name":"new","qualname":"<Dispatch>::new","value":"pub fn new<S>(S) -> Self where S: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Dispatch` that forwards to the given [`Subscriber`].","sig":null,"attributes":[{"value":"/ Returns a `Dispatch` that forwards to the given [`Subscriber`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":29954,"byte_end":30021,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30026,"byte_end":30029,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30034,"byte_end":30089,"line_start":409,"line_end":409,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30914,"byte_end":30931,"line_start":434,"line_end":434,"column_start":12,"column_end":29},"name":"register_callsite","qualname":"<Dispatch>::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> subscriber::Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30452,"byte_end":30527,"line_start":425,"line_end":425,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30532,"byte_end":30602,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30607,"byte_end":30610,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This calls the [`register_callsite`] function on the [`Subscriber`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30615,"byte_end":30686,"line_start":428,"line_end":428,"column_start":5,"column_end":76}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30691,"byte_end":30728,"line_start":429,"line_end":429,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30733,"byte_end":30736,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30741,"byte_end":30796,"line_start":431,"line_end":431,"column_start":5,"column_end":60}},{"value":"/ [`register_callsite`]: ../subscriber/trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30801,"byte_end":30888,"line_start":432,"line_end":432,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":30893,"byte_end":30902,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32209,"byte_end":32217,"line_start":464,"line_end":464,"column_start":12,"column_end":20},"name":"new_span","qualname":"<Dispatch>::new_span","value":"pub fn new_span(&Self, &span::Attributes) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Record the construction of a new span, returning a new [ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Record the construction of a new span, returning a new [ID] for the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":31784,"byte_end":31855,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/ span being constructed.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":31860,"byte_end":31887,"line_start":455,"line_end":455,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":31892,"byte_end":31895,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ This calls the [`new_span`] function on the [`Subscriber`] that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":31900,"byte_end":31972,"line_start":457,"line_end":457,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":31977,"byte_end":32004,"line_start":458,"line_end":458,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32009,"byte_end":32012,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ [ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32017,"byte_end":32049,"line_start":460,"line_end":460,"column_start":5,"column_end":37}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32054,"byte_end":32109,"line_start":461,"line_end":461,"column_start":5,"column_end":60}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32114,"byte_end":32183,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32188,"byte_end":32197,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32634,"byte_end":32640,"line_start":476,"line_end":476,"column_start":12,"column_end":18},"name":"record","qualname":"<Dispatch>::record","value":"pub fn record(&Self, &span::Id, &span::Record)","parent":null,"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32318,"byte_end":32355,"line_start":468,"line_end":468,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32360,"byte_end":32363,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record`] function on the [`Subscriber`] that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32368,"byte_end":32438,"line_start":470,"line_end":470,"column_start":5,"column_end":75}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32443,"byte_end":32470,"line_start":471,"line_end":471,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32475,"byte_end":32478,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32483,"byte_end":32538,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/ [`record`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32543,"byte_end":32608,"line_start":474,"line_end":474,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32613,"byte_end":32622,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33155,"byte_end":33174,"line_start":489,"line_end":489,"column_start":12,"column_end":31},"name":"record_follows_from","qualname":"<Dispatch>::record_follows_from","value":"pub fn record_follows_from(&Self, &span::Id, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32750,"byte_end":32818,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32823,"byte_end":32837,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32842,"byte_end":32845,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record_follows_from`] function on the [`Subscriber`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32850,"byte_end":32923,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32928,"byte_end":32965,"line_start":484,"line_end":484,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32970,"byte_end":32973,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":32978,"byte_end":33033,"line_start":486,"line_end":486,"column_start":5,"column_end":60}},{"value":"/ [`record_follows_from`]: ../subscriber/trait.Subscriber.html#method.record_follows_from","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33038,"byte_end":33129,"line_start":487,"line_end":487,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33134,"byte_end":33143,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33709,"byte_end":33716,"line_start":503,"line_end":503,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Dispatch>::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a span with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span with the specified [metadata] would be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33291,"byte_end":33356,"line_start":493,"line_end":493,"column_start":5,"column_end":70}},{"value":"/ recorded.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33361,"byte_end":33374,"line_start":494,"line_end":494,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33379,"byte_end":33382,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enabled`] function on the [`Subscriber`] that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33387,"byte_end":33458,"line_start":496,"line_end":496,"column_start":5,"column_end":76}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33463,"byte_end":33490,"line_start":497,"line_end":497,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33495,"byte_end":33498,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33503,"byte_end":33551,"line_start":499,"line_end":499,"column_start":5,"column_end":53}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33556,"byte_end":33611,"line_start":500,"line_end":500,"column_start":5,"column_end":60}},{"value":"/ [`enabled`]: ../subscriber/trait.Subscriber.html#method.enabled","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33616,"byte_end":33683,"line_start":501,"line_end":501,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33688,"byte_end":33697,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34177,"byte_end":34182,"line_start":516,"line_end":516,"column_start":12,"column_end":17},"name":"event","qualname":"<Dispatch>::event","value":"pub fn event(&Self, &Event)","parent":null,"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33812,"byte_end":33855,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33860,"byte_end":33863,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ This calls the [`event`] function on the [`Subscriber`] that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33868,"byte_end":33937,"line_start":509,"line_end":509,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33942,"byte_end":33969,"line_start":510,"line_end":510,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33974,"byte_end":33977,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":33982,"byte_end":34023,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34028,"byte_end":34083,"line_start":513,"line_end":513,"column_start":5,"column_end":60}},{"value":"/ [`event`]: ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34088,"byte_end":34151,"line_start":514,"line_end":514,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34156,"byte_end":34165,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34564,"byte_end":34569,"line_start":527,"line_end":527,"column_start":12,"column_end":17},"name":"enter","qualname":"<Dispatch>::enter","value":"pub fn enter(&Self, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been can_enter.","sig":null,"attributes":[{"value":"/ Records that a span has been can_enter.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34259,"byte_end":34302,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34307,"byte_end":34310,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enter`] function on the [`Subscriber`] that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34315,"byte_end":34384,"line_start":522,"line_end":522,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34389,"byte_end":34416,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34421,"byte_end":34424,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34429,"byte_end":34484,"line_start":525,"line_end":525,"column_start":5,"column_end":60}},{"value":"/ [`enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34489,"byte_end":34552,"line_start":526,"line_end":526,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34943,"byte_end":34947,"line_start":538,"line_end":538,"column_start":12,"column_end":16},"name":"exit","qualname":"<Dispatch>::exit","value":"pub fn exit(&Self, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34644,"byte_end":34684,"line_start":531,"line_end":531,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34689,"byte_end":34692,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This calls the [`exit`] function on the [`Subscriber`] that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34697,"byte_end":34765,"line_start":533,"line_end":533,"column_start":5,"column_end":73}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34770,"byte_end":34797,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34802,"byte_end":34805,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34810,"byte_end":34865,"line_start":536,"line_end":536,"column_start":5,"column_end":60}},{"value":"/ [`exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":34870,"byte_end":34931,"line_start":537,"line_end":537,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35753,"byte_end":35763,"line_start":557,"line_end":557,"column_start":12,"column_end":22},"name":"clone_span","qualname":"<Dispatch>::clone_span","value":"pub fn clone_span(&Self, &span::Id) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35021,"byte_end":35082,"line_start":542,"line_end":542,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35087,"byte_end":35090,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35095,"byte_end":35168,"line_start":544,"line_end":544,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35173,"byte_end":35245,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35250,"byte_end":35326,"line_start":546,"line_end":546,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35331,"byte_end":35348,"line_start":547,"line_end":547,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35353,"byte_end":35356,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This calls the [`clone_span`] function on the `Subscriber` that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35361,"byte_end":35433,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35438,"byte_end":35465,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35470,"byte_end":35473,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35478,"byte_end":35515,"line_start":552,"line_end":552,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35520,"byte_end":35575,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/ [`clone_span`]: ../subscriber/trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35580,"byte_end":35653,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35658,"byte_end":35727,"line_start":555,"line_end":555,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35732,"byte_end":35741,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37071,"byte_end":37080,"line_start":585,"line_end":585,"column_start":12,"column_end":21},"name":"drop_span","qualname":"<Dispatch>::drop_span","value":"pub fn drop_span(&Self, span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35850,"byte_end":35912,"line_start":561,"line_end":561,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35917,"byte_end":35920,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":35925,"byte_end":35998,"line_start":563,"line_end":563,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36003,"byte_end":36075,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36080,"byte_end":36156,"line_start":565,"line_end":565,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36161,"byte_end":36178,"line_start":566,"line_end":566,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36183,"byte_end":36186,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ This calls the [`drop_span`] function on the [`Subscriber`] that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36191,"byte_end":36264,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36269,"byte_end":36296,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36301,"byte_end":36304,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36309,"byte_end":36380,"line_start":571,"line_end":571,"column_start":5,"column_end":76}},{"value":"/     <strong>Deprecated</strong>: The <a href=\"#method.try_close\"><code>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36385,"byte_end":36460,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/     try_close</code></a> method is functionally identical, but returns","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36465,"byte_end":36539,"line_start":573,"line_end":573,"column_start":5,"column_end":79}},{"value":"/     <code>true</code> if the span is now closed. It should be used","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36544,"byte_end":36614,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/     instead of this method.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36619,"byte_end":36650,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/ </pre>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36655,"byte_end":36665,"line_start":576,"line_end":576,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36670,"byte_end":36673,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36678,"byte_end":36715,"line_start":578,"line_end":578,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36720,"byte_end":36775,"line_start":579,"line_end":579,"column_start":5,"column_end":60}},{"value":"/ [`drop_span`]: ../subscriber/trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36780,"byte_end":36851,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36856,"byte_end":36925,"line_start":581,"line_end":581,"column_start":5,"column_end":74}},{"value":"/ [`try_close`]: #method.try_close","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36930,"byte_end":36966,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36971,"byte_end":36980,"line_start":583,"line_end":583,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Dispatch::try_close` instead\")","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":36985,"byte_end":37059,"line_start":584,"line_end":584,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37976,"byte_end":37985,"line_start":605,"line_end":605,"column_start":12,"column_end":21},"name":"try_close","qualname":"<Dispatch>::try_close","value":"pub fn try_close(&Self, span::Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped, and returns\n `true` if there are now 0 IDs referring to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped, and returns","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37183,"byte_end":37257,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ `true` if there are now 0 IDs referring to that span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37262,"byte_end":37319,"line_start":591,"line_end":591,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37324,"byte_end":37327,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37332,"byte_end":37405,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37410,"byte_end":37482,"line_start":594,"line_end":594,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37487,"byte_end":37563,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37568,"byte_end":37585,"line_start":596,"line_end":596,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37590,"byte_end":37593,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This calls the [`try_close`] function on the [`Subscriber`] that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37598,"byte_end":37671,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/  `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37676,"byte_end":37704,"line_start":599,"line_end":599,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37709,"byte_end":37712,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37717,"byte_end":37754,"line_start":601,"line_end":601,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37759,"byte_end":37814,"line_start":602,"line_end":602,"column_start":5,"column_end":60}},{"value":"/ [`try_close`]: ../subscriber/trait.Subscriber.html#method.try_close","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37819,"byte_end":37890,"line_start":603,"line_end":603,"column_start":5,"column_end":76}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":37895,"byte_end":37964,"line_start":604,"line_end":604,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38361,"byte_end":38373,"line_start":616,"line_end":616,"column_start":12,"column_end":24},"name":"current_span","qualname":"<Dispatch>::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":null,"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38066,"byte_end":38141,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38146,"byte_end":38149,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ This calls the [`current`] function on the `Subscriber` that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38154,"byte_end":38223,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38228,"byte_end":38255,"line_start":612,"line_end":612,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38260,"byte_end":38263,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ [`current`]: ../subscriber/trait.Subscriber.html#method.current","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38268,"byte_end":38335,"line_start":614,"line_end":614,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38340,"byte_end":38349,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38561,"byte_end":38563,"line_start":623,"line_end":623,"column_start":12,"column_end":14},"name":"is","qualname":"<Dispatch>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Dispatch` forwards to a `Subscriber` of type\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Dispatch` forwards to a `Subscriber` of type","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38450,"byte_end":38522,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38527,"byte_end":38535,"line_start":621,"line_end":621,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38540,"byte_end":38549,"line_start":622,"line_end":622,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38806,"byte_end":38818,"line_start":630,"line_end":630,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Dispatch>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to the `Subscriber` this `Dispatch` forwards to\n if it is of type `T`, or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to the `Subscriber` this `Dispatch` forwards to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38653,"byte_end":38727,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ if it is of type `T`, or `None` if it isn't.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38732,"byte_end":38780,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38785,"byte_end":38794,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":221},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":831},{"krate":0,"index":836},{"krate":0,"index":235}],"decl_id":null,"docs":" Events represent single points in time during the execution of a program.\n","sig":null,"attributes":[{"value":"/ Events represent single points in time during the execution of a program.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47019,"byte_end":47096,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48013,"byte_end":48018,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835}],"decl_id":null,"docs":" `Event`s represent single points in time where something occurred during the\n execution of a program.","sig":null,"attributes":[{"value":"/ `Event`s represent single points in time where something occurred during the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47176,"byte_end":47256,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ execution of a program.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47257,"byte_end":47284,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47285,"byte_end":47288,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ An `Event` can be compared to a log record in unstructured logging, but with","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47289,"byte_end":47369,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ two key differences:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47370,"byte_end":47394,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/ - `Event`s exist _within the context of a [span]_. Unlike log lines, they","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47395,"byte_end":47472,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/   may be located within the trace tree, allowing visibility into the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47473,"byte_end":47545,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/   _temporal_ context in which the event occurred, as well as the source","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47546,"byte_end":47621,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   code location.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47622,"byte_end":47642,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ - Like spans, `Event`s have structured key-value data known as _[fields]_,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47643,"byte_end":47721,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/   which may include textual message. In general, a majority of the data","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47722,"byte_end":47797,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/   associated with an event should be in the event's fields rather than in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47798,"byte_end":47875,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   the textual message, as the fields are more structured.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47876,"byte_end":47937,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47938,"byte_end":47941,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47942,"byte_end":47961,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [fields]: ../field","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":47962,"byte_end":47984,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48292,"byte_end":48300,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<Event>::dispatch","value":"pub fn dispatch(&'static Metadata, &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48152,"byte_end":48227,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48232,"byte_end":48280,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48660,"byte_end":48663,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` in the current span, with the specified metadata\n and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` in the current span, with the specified metadata","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48533,"byte_end":48607,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ and set of values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48612,"byte_end":48634,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48639,"byte_end":48648,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":49000,"byte_end":49012,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"new_child_of","qualname":"<Event>::new_child_of","value":"pub fn new_child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                             &'static Metadata,\n                                                             &'a field::ValueSet)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` as a child of the specified span, with the\n provided metadata and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` as a child of the specified span, with the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48861,"byte_end":48929,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ provided metadata and set of values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48934,"byte_end":48974,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48979,"byte_end":48988,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":49550,"byte_end":49558,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Event>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                         &'static Metadata,\n                                                         &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber and an explicit parent.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":49387,"byte_end":49462,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber and an explicit parent.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":49467,"byte_end":49538,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50019,"byte_end":50025,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"record","qualname":"<Event>::record","value":"pub fn record(&Self, &mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Visits all the fields on this `Event` with the specified [visitor].","sig":null,"attributes":[{"value":"/ Visits all the fields on this `Event` with the specified [visitor].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":49869,"byte_end":49940,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":49945,"byte_end":49948,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":49953,"byte_end":49993,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":49998,"byte_end":50007,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50190,"byte_end":50196,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"fields","qualname":"<Event>::fields","value":"pub fn fields(&Self) -> field::Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the set of values on this `Event`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the set of values on this `Event`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50115,"byte_end":50178,"line_start":90,"line_end":90,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50382,"byte_end":50390,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Event>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns [metadata] describing this `Event`.","sig":null,"attributes":[{"value":"/ Returns [metadata] describing this `Event`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50271,"byte_end":50318,"line_start":95,"line_end":95,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50323,"byte_end":50326,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../struct.Metadata.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50331,"byte_end":50370,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50526,"byte_end":50533,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Event>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new event should be a root.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50463,"byte_end":50514,"line_start":102,"line_end":102,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50991,"byte_end":51004,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Event>::is_contextual","value":"pub fn is_contextual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new event's parent should be determined based on the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50606,"byte_end":50682,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ current context.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50687,"byte_end":50707,"line_start":108,"line_end":108,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50712,"byte_end":50715,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50720,"byte_end":50795,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ that span should be the new event's parent. Otherwise, if the current","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50800,"byte_end":50873,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ thread is _not_ inside a span, then the new event will be the root of its","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50878,"byte_end":50955,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ own trace tree.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":50960,"byte_end":50979,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":51279,"byte_end":51285,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"parent","qualname":"<Event>::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new event's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new event's explicitly-specified parent, if there is one.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":51080,"byte_end":51153,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":51158,"byte_end":51161,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new event is a root or is a child of the current span),","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":51166,"byte_end":51243,"line_start":120,"line_end":120,"column_start":5,"column_end":82}},{"value":"/ returns `None`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":51248,"byte_end":51267,"line_start":121,"line_end":121,"column_start":5,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":251},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":285},{"krate":0,"index":293},{"krate":0,"index":859},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":412},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":433},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":445},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071}],"decl_id":null,"docs":" `Span` and `Event` key-value data.","sig":null,"attributes":[{"value":"/ `Span` and `Event` key-value data.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51428,"byte_end":51466,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51467,"byte_end":51470,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Spans and events may be annotated with key-value data, referred to as known","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51471,"byte_end":51550,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ as _fields_. These fields consist of a mapping from a key (corresponding to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51551,"byte_end":51630,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a `&str` but represented internally as an array index) to a [`Value`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51631,"byte_end":51705,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51706,"byte_end":51709,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Value`s and `Subscriber`s","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51710,"byte_end":51742,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51743,"byte_end":51746,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s consume `Value`s as fields attached to [span]s or [`Event`]s.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51747,"byte_end":51826,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ The set of field keys on a given span or is defined on its [`Metadata`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51827,"byte_end":51903,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ When a span is created, it provides [`Attributes`] to the `Subscriber`'s","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51904,"byte_end":51980,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`new_span`] method, containing any fields whose values were provided when","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":51981,"byte_end":52059,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ the span was created; and may call the `Subscriber`'s [`record`] method","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52060,"byte_end":52135,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ with additional [`Record`]s if values are added for more of its fields.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52136,"byte_end":52211,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ Similarly, the [`Event`] type passed to the subscriber's [`event`] method","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52212,"byte_end":52289,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ will contain any fields attached to each event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52290,"byte_end":52341,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52342,"byte_end":52345,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `tracing` represents values as either one of a set of Rust primitives","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52346,"byte_end":52419,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ (`i64`, `u64`, `f64`, `bool`, and `&str`) or using a `fmt::Display` or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52420,"byte_end":52494,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ `fmt::Debug` implementation. `Subscriber`s are provided these primitive","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52495,"byte_end":52570,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ value types as `dyn Value` trait objects.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52571,"byte_end":52616,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52617,"byte_end":52620,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These trait objects can be formatted using `fmt::Debug`, but may also be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52621,"byte_end":52697,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ recorded as typed data by calling the [`Value::record`] method on these","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52698,"byte_end":52773,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ trait objects with a _visitor_ implementing the [`Visit`] trait. This trait","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52774,"byte_end":52853,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ represents the behavior used to record values of various types. For example,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52854,"byte_end":52934,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ an implementation of `Visit` might record integers by incrementing counters","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":52935,"byte_end":53014,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ for their field names rather than printing them.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53015,"byte_end":53067,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53068,"byte_end":53071,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53072,"byte_end":53075,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Using `valuable`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53076,"byte_end":53098,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53099,"byte_end":53102,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `tracing`'s [`Value`] trait is intentionally minimalist: it supports only a small","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53103,"byte_end":53188,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ number of Rust primitives as typed values, and only permits recording","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53189,"byte_end":53262,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ user-defined types with their [`fmt::Debug`] or [`fmt::Display`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53263,"byte_end":53331,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ implementations. However, there are some cases where it may be useful to record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53332,"byte_end":53415,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ nested values (such as arrays, `Vec`s, or `HashMap`s containing values), or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53416,"byte_end":53495,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ user-defined `struct` and `enum` types without having to format them as","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53496,"byte_end":53571,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ unstructured text.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53572,"byte_end":53594,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53595,"byte_end":53598,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ To address `Value`'s limitations, `tracing` offers experimental support for","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53599,"byte_end":53678,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ the [`valuable`] crate, which provides object-safe inspection of structured","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53679,"byte_end":53758,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ values. User-defined types can implement the [`valuable::Valuable`] trait,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53759,"byte_end":53837,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ and be recorded as a `tracing` field by calling their [`as_value`] method.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53838,"byte_end":53916,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ If the [`Subscriber`] also supports the `valuable` crate, it can","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53917,"byte_end":53985,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ then visit those types fields as structured values using `valuable`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":53986,"byte_end":54058,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54059,"byte_end":54062,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54063,"byte_end":54128,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>valuable</code> support is an","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54129,"byte_end":54195,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/     <a href = \"../index.html#unstable-features\">unstable feature</a>. See","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54196,"byte_end":54273,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/     the documentation on unstable features for details on how to enable it.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54274,"byte_end":54353,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ </pre>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54354,"byte_end":54364,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54365,"byte_end":54368,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54369,"byte_end":54385,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54386,"byte_end":54399,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ // Derive `Valuable` for our types:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54400,"byte_end":54439,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/ use valuable::Valuable;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54440,"byte_end":54467,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54468,"byte_end":54471,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54472,"byte_end":54509,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ struct User {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54510,"byte_end":54527,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     name: String,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54528,"byte_end":54549,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     age: u32,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54550,"byte_end":54567,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     address: Address,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54568,"byte_end":54593,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54594,"byte_end":54599,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54600,"byte_end":54603,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54604,"byte_end":54641,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ struct Address {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54642,"byte_end":54662,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/     country: String,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54663,"byte_end":54687,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     city: String,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54688,"byte_end":54709,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     street: String,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54710,"byte_end":54733,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54734,"byte_end":54739,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54740,"byte_end":54743,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let user = User {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54744,"byte_end":54765,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     name: \"Arwen Undomiel\".to_string(),","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54766,"byte_end":54809,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/     age: 3000,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54810,"byte_end":54828,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/     address: Address {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54829,"byte_end":54855,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/         country: \"Middle Earth\".to_string(),","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54856,"byte_end":54904,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/         city: \"Rivendell\".to_string(),","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54905,"byte_end":54947,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/         street: \"leafy lane\".to_string(),","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54948,"byte_end":54993,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     },","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":54994,"byte_end":55004,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55005,"byte_end":55011,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55012,"byte_end":55015,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Recording `user` as a `valuable::Value` will allow the `tracing` subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55016,"byte_end":55098,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ // to traverse its fields as a nested, typed structure:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55099,"byte_end":55158,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ tracing::info!(current_user = user.as_value());","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55159,"byte_end":55210,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55211,"byte_end":55218,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55219,"byte_end":55222,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Alternatively, the [`valuable()`] function may be used to convert a type","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55223,"byte_end":55299,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ implementing [`Valuable`] into a `tracing` field value.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55300,"byte_end":55359,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55360,"byte_end":55363,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ When the `valuable` feature is enabled, the [`Visit`] trait will include an","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55364,"byte_end":55443,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ optional [`record_value`] method. `Visit` implementations that wish to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55444,"byte_end":55518,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ record `valuable` values can implement this method with custom behavior.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55519,"byte_end":55595,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ If a visitor does not implement `record_value`, the [`valuable::Value`] will","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55596,"byte_end":55676,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ be forwarded to the visitor's [`record_debug`] method.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55677,"byte_end":55735,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55736,"byte_end":55739,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55740,"byte_end":55791,"line_start":97,"line_end":97,"column_start":1,"column_end":52}},{"value":"/ [`as_value`]: valuable::Valuable::as_value","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55792,"byte_end":55838,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55839,"byte_end":55876,"line_start":99,"line_end":99,"column_start":1,"column_end":38}},{"value":"/ [`record_value`]: Visit::record_value","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55877,"byte_end":55918,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/ [`record_debug`]: Visit::record_debug","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55919,"byte_end":55960,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55961,"byte_end":55964,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`Value`]: trait.Value.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55965,"byte_end":55996,"line_start":103,"line_end":103,"column_start":1,"column_end":32}},{"value":"/ [span]: ../span/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":55997,"byte_end":56017,"line_start":104,"line_end":104,"column_start":1,"column_end":21}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56018,"byte_end":56059,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/ [`Metadata`]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56060,"byte_end":56110,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"/ [`Attributes`]:  ../span/struct.Attributes.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56111,"byte_end":56162,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ [`Record`]: ../span/struct.Record.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56163,"byte_end":56205,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56206,"byte_end":56275,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ [`record`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56276,"byte_end":56341,"line_start":110,"line_end":110,"column_start":1,"column_end":66}},{"value":"/ [`event`]:  ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56342,"byte_end":56406,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/ [`Value::record`]: trait.Value.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56407,"byte_end":56460,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/ [`Visit`]: trait.Visit.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56461,"byte_end":56492,"line_start":113,"line_end":113,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57132,"byte_end":57137,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841}],"decl_id":null,"docs":" An opaque key allowing _O_(1) access to a field in a `Span`'s key-value\n data.","sig":null,"attributes":[{"value":"/ An opaque key allowing _O_(1) access to a field in a `Span`'s key-value","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56649,"byte_end":56724,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56725,"byte_end":56734,"line_start":126,"line_end":126,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56735,"byte_end":56738,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ As keys are defined by the _metadata_ of a span, rather than by an","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56739,"byte_end":56809,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/ individual instance of a span, a key may be used to access the same field","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56810,"byte_end":56887,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ across all instances of a given span with the same metadata. Thus, when a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56888,"byte_end":56965,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ subscriber observes a new span, it need only access a field by name _once_,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":56966,"byte_end":57045,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ and use the key for that name for all other accesses.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57046,"byte_end":57103,"line_start":132,"line_end":132,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":844},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57428,"byte_end":57433,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"Empty","qualname":"::field::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty field.","sig":null,"attributes":[{"value":"/ An empty field.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57179,"byte_end":57198,"line_start":139,"line_end":139,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57199,"byte_end":57202,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This can be used to indicate that the value of a field is not currently","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57203,"byte_end":57278,"line_start":141,"line_end":141,"column_start":1,"column_end":76}},{"value":"/ present but will be recorded later.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57279,"byte_end":57318,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57319,"byte_end":57322,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ When a field's value is `Empty`. it will not be recorded.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57323,"byte_end":57384,"line_start":144,"line_end":144,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57491,"byte_end":57499,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"FieldSet","qualname":"::field::FieldSet","value":"FieldSet {  }","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280}],"decl_id":null,"docs":" Describes the fields present on a span.\n","sig":null,"attributes":[{"value":"/ Describes the fields present on a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57436,"byte_end":57479,"line_start":148,"line_end":148,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57744,"byte_end":57752,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"ValueSet","qualname":"::field::ValueSet","value":"ValueSet {  }","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" A set of fields and values for a span.\n","sig":null,"attributes":[{"value":"/ A set of fields and values for a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57690,"byte_end":57732,"line_start":156,"line_end":156,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":854},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57915,"byte_end":57919,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"Iter","qualname":"::field::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"decl_id":null,"docs":" An iterator over a set of fields.\n","sig":null,"attributes":[{"value":"/ An iterator over a set of fields.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57849,"byte_end":57886,"line_start":162,"line_end":162,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":285},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61788,"byte_end":61793,"line_start":259,"line_end":259,"column_start":11,"column_end":16},"name":"Visit","qualname":"::field::Visit","value":"Visit","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" Visits typed values.","sig":null,"attributes":[{"value":"/ Visits typed values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57971,"byte_end":57995,"line_start":169,"line_end":169,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":57996,"byte_end":57999,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ An instance of `Visit` (\"a visitor\") represents the logic necessary to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58000,"byte_end":58074,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ record field values of various types. When an implementor of [`Value`] is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58075,"byte_end":58152,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ [recorded], it calls the appropriate method on the provided visitor to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58153,"byte_end":58227,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ indicate the type that value should be recorded as.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58228,"byte_end":58283,"line_start":174,"line_end":174,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58284,"byte_end":58287,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ When a [`Subscriber`] implementation [records an `Event`] or a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58288,"byte_end":58354,"line_start":176,"line_end":176,"column_start":1,"column_end":67}},{"value":"/ [set of `Value`s added to a `Span`], it can pass an `&mut Visit` to the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58355,"byte_end":58430,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ `record` method on the provided [`ValueSet`] or [`Event`]. This visitor","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58431,"byte_end":58506,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ will then be used to record all the field-value pairs present on that","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58507,"byte_end":58580,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ `Event` or `ValueSet`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58581,"byte_end":58607,"line_start":180,"line_end":180,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58608,"byte_end":58611,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58612,"byte_end":58626,"line_start":182,"line_end":182,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58627,"byte_end":58630,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ A simple visitor that writes to a string might be implemented like so:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58631,"byte_end":58705,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58706,"byte_end":58713,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58714,"byte_end":58757,"line_start":186,"line_end":186,"column_start":1,"column_end":44}},{"value":"/ use std::fmt::{self, Write};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58758,"byte_end":58790,"line_start":187,"line_end":187,"column_start":1,"column_end":33}},{"value":"/ use tracing::field::{Value, Visit, Field};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58791,"byte_end":58837,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ pub struct StringVisitor<'a> {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58838,"byte_end":58872,"line_start":189,"line_end":189,"column_start":1,"column_end":35}},{"value":"/     string: &'a mut String,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58873,"byte_end":58904,"line_start":190,"line_end":190,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58905,"byte_end":58910,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58911,"byte_end":58914,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Visit for StringVisitor<'a> {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58915,"byte_end":58957,"line_start":193,"line_end":193,"column_start":1,"column_end":43}},{"value":"/     fn record_debug(&mut self, field: &Field, value: &dyn fmt::Debug) {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":58958,"byte_end":59033,"line_start":194,"line_end":194,"column_start":1,"column_end":76}},{"value":"/         write!(self.string, \"{} = {:?}; \", field.name(), value).unwrap();","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59034,"byte_end":59111,"line_start":195,"line_end":195,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59112,"byte_end":59121,"line_start":196,"line_end":196,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59122,"byte_end":59127,"line_start":197,"line_end":197,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59128,"byte_end":59135,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ This visitor will format each recorded value using `fmt::Debug`, and","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59136,"byte_end":59208,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ append the field name and formatted value to the provided string,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59209,"byte_end":59278,"line_start":200,"line_end":200,"column_start":1,"column_end":70}},{"value":"/ regardless of the type of the recorded value. When all the values have","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59279,"byte_end":59353,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"/ been recorded, the `StringVisitor` may be dropped, allowing the string","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59354,"byte_end":59428,"line_start":202,"line_end":202,"column_start":1,"column_end":75}},{"value":"/ to be printed or stored in some other data structure.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59429,"byte_end":59486,"line_start":203,"line_end":203,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59487,"byte_end":59490,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ The `Visit` trait provides default implementations for `record_i64`,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59491,"byte_end":59563,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ `record_u64`, `record_bool`, `record_str`, and `record_error`, which simply","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59564,"byte_end":59643,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ forward the recorded value to `record_debug`. Thus, `record_debug` is the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59644,"byte_end":59721,"line_start":207,"line_end":207,"column_start":1,"column_end":78}},{"value":"/ only method which a `Visit` implementation *must* implement. However,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59722,"byte_end":59795,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"/ visitors may override the default implementations of these functions in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59796,"byte_end":59871,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ order to implement type-specific behavior.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59872,"byte_end":59918,"line_start":210,"line_end":210,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59919,"byte_end":59922,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Additionally, when a visitor receives a value of a type it does not care","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":59923,"byte_end":59999,"line_start":212,"line_end":212,"column_start":1,"column_end":77}},{"value":"/ about, it is free to ignore those values completely. For example, a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60000,"byte_end":60071,"line_start":213,"line_end":213,"column_start":1,"column_end":72}},{"value":"/ visitor which only records numeric data might look like this:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60072,"byte_end":60137,"line_start":214,"line_end":214,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60138,"byte_end":60141,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60142,"byte_end":60149,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60150,"byte_end":60193,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"/ # use std::fmt::{self, Write};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60194,"byte_end":60228,"line_start":218,"line_end":218,"column_start":1,"column_end":35}},{"value":"/ # use tracing::field::{Value, Visit, Field};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60229,"byte_end":60277,"line_start":219,"line_end":219,"column_start":1,"column_end":49}},{"value":"/ pub struct SumVisitor {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60278,"byte_end":60305,"line_start":220,"line_end":220,"column_start":1,"column_end":28}},{"value":"/     sum: i64,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60306,"byte_end":60323,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60324,"byte_end":60329,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60330,"byte_end":60333,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ impl Visit for SumVisitor {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60334,"byte_end":60365,"line_start":224,"line_end":224,"column_start":1,"column_end":32}},{"value":"/     fn record_i64(&mut self, _field: &Field, value: i64) {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60366,"byte_end":60428,"line_start":225,"line_end":225,"column_start":1,"column_end":63}},{"value":"/        self.sum += value;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60429,"byte_end":60458,"line_start":226,"line_end":226,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60459,"byte_end":60468,"line_start":227,"line_end":227,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60469,"byte_end":60472,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/     fn record_u64(&mut self, _field: &Field, value: u64) {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60473,"byte_end":60535,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/         self.sum += value as i64;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60536,"byte_end":60573,"line_start":230,"line_end":230,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60574,"byte_end":60583,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60584,"byte_end":60587,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     fn record_debug(&mut self, _field: &Field, _value: &fmt::Debug) {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60588,"byte_end":60661,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/         // Do nothing","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60662,"byte_end":60687,"line_start":234,"line_end":234,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60688,"byte_end":60697,"line_start":235,"line_end":235,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60698,"byte_end":60703,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60704,"byte_end":60711,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60712,"byte_end":60715,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ This visitor (which is probably not particularly useful) keeps a running","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60716,"byte_end":60792,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ sum of all the numeric values it records, and ignores all other values. A","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60793,"byte_end":60870,"line_start":240,"line_end":240,"column_start":1,"column_end":78}},{"value":"/ more practical example of recording typed values is presented in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60871,"byte_end":60939,"line_start":241,"line_end":241,"column_start":1,"column_end":69}},{"value":"/ `examples/counters.rs`, which demonstrates a very simple metrics system","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":60940,"byte_end":61015,"line_start":242,"line_end":242,"column_start":1,"column_end":76}},{"value":"/ implemented using `tracing`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61016,"byte_end":61048,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61049,"byte_end":61052,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61053,"byte_end":61112,"line_start":245,"line_end":245,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61113,"byte_end":61178,"line_start":246,"line_end":246,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The <code>record_error</code> trait method is only","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61179,"byte_end":61256,"line_start":247,"line_end":247,"column_start":1,"column_end":78}},{"value":"/ available when the Rust standard library is present, as it requires the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61257,"byte_end":61332,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"/ <code>std::error::Error</code> trait.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61333,"byte_end":61374,"line_start":249,"line_end":249,"column_start":1,"column_end":42}},{"value":"/ </pre></div>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61375,"byte_end":61391,"line_start":250,"line_end":250,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61392,"byte_end":61395,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ [`Value`]: trait.Value.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61396,"byte_end":61427,"line_start":252,"line_end":252,"column_start":1,"column_end":32}},{"value":"/ [recorded]: trait.Value.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61428,"byte_end":61474,"line_start":253,"line_end":253,"column_start":1,"column_end":47}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61475,"byte_end":61530,"line_start":254,"line_end":254,"column_start":1,"column_end":56}},{"value":"/ [records an `Event`]: ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61531,"byte_end":61605,"line_start":255,"line_end":255,"column_start":1,"column_end":75}},{"value":"/ [set of `Value`s added to a `Span`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61606,"byte_end":61696,"line_start":256,"line_end":256,"column_start":1,"column_end":91}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61697,"byte_end":61738,"line_start":257,"line_end":257,"column_start":1,"column_end":42}},{"value":"/ [`ValueSet`]: struct.ValueSet.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":61739,"byte_end":61777,"line_start":258,"line_end":258,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62261,"byte_end":62271,"line_start":270,"line_end":270,"column_start":8,"column_end":18},"name":"record_f64","qualname":"::field::Visit::record_f64","value":"pub fn record_f64(&mut Self, &Field, f64)","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Visit a double-precision floating point value.\n","sig":null,"attributes":[{"value":"/ Visit a double-precision floating point value.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62203,"byte_end":62253,"line_start":269,"line_end":269,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62412,"byte_end":62422,"line_start":275,"line_end":275,"column_start":8,"column_end":18},"name":"record_i64","qualname":"::field::Visit::record_i64","value":"pub fn record_i64(&mut Self, &Field, i64)","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Visit a signed 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit a signed 64-bit integer value.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62364,"byte_end":62404,"line_start":274,"line_end":274,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62566,"byte_end":62576,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"record_u64","qualname":"::field::Visit::record_u64","value":"pub fn record_u64(&mut Self, &Field, u64)","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Visit an unsigned 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit an unsigned 64-bit integer value.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62515,"byte_end":62558,"line_start":279,"line_end":279,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62703,"byte_end":62714,"line_start":285,"line_end":285,"column_start":8,"column_end":19},"name":"record_bool","qualname":"::field::Visit::record_bool","value":"pub fn record_bool(&mut Self, &Field, bool)","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Visit a boolean value.\n","sig":null,"attributes":[{"value":"/ Visit a boolean value.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62669,"byte_end":62695,"line_start":284,"line_end":284,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62841,"byte_end":62851,"line_start":290,"line_end":290,"column_start":8,"column_end":18},"name":"record_str","qualname":"::field::Visit::record_str","value":"pub fn record_str(&mut Self, &Field, &str)","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Visit a string value.\n","sig":null,"attributes":[{"value":"/ Visit a string value.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62808,"byte_end":62833,"line_start":289,"line_end":289,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63332,"byte_end":63344,"line_start":303,"line_end":303,"column_start":8,"column_end":20},"name":"record_error","qualname":"::field::Visit::record_error","value":"pub fn record_error(&mut Self, &Field, &dyn std::error::Error + 'static)","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Records a type implementing `Error`.","sig":null,"attributes":[{"value":"/ Records a type implementing `Error`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62945,"byte_end":62985,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62990,"byte_end":62993,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":62998,"byte_end":63057,"line_start":296,"line_end":296,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63062,"byte_end":63127,"line_start":297,"line_end":297,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This is only enabled when the Rust standard library is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63132,"byte_end":63213,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ present.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63218,"byte_end":63230,"line_start":299,"line_end":299,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63235,"byte_end":63245,"line_start":300,"line_end":300,"column_start":5,"column_end":15}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63250,"byte_end":63273,"line_start":301,"line_end":301,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63534,"byte_end":63546,"line_start":308,"line_end":308,"column_start":8,"column_end":20},"name":"record_debug","qualname":"::field::Visit::record_debug","value":"pub fn record_debug(&mut Self, &Field, &dyn fmt::Debug)","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Visit a value implementing `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ Visit a value implementing `fmt::Debug`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63482,"byte_end":63526,"line_start":307,"line_end":307,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":293},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63878,"byte_end":63883,"line_start":318,"line_end":318,"column_start":11,"column_end":16},"name":"Value","qualname":"::field::Value","value":"Value: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":294}],"decl_id":null,"docs":" A field value of an erased type.","sig":null,"attributes":[{"value":"/ A field value of an erased type.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63601,"byte_end":63637,"line_start":311,"line_end":311,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63638,"byte_end":63641,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Implementors of `Value` may call the appropriate typed recording methods on","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63642,"byte_end":63721,"line_start":313,"line_end":313,"column_start":1,"column_end":80}},{"value":"/ the [visitor] passed to their `record` method in order to indicate how","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63722,"byte_end":63796,"line_start":314,"line_end":314,"column_start":1,"column_end":75}},{"value":"/ their data should be recorded.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63797,"byte_end":63831,"line_start":315,"line_end":315,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63832,"byte_end":63835,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ [visitor]: trait.Visit.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63836,"byte_end":63867,"line_start":317,"line_end":317,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63968,"byte_end":63974,"line_start":320,"line_end":320,"column_start":8,"column_end":14},"name":"record","qualname":"::field::Value::record","value":"pub fn record(&Self, &Field, &mut dyn Visit)","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Visits this value with the given `Visitor`.\n","sig":null,"attributes":[{"value":"/ Visits this value with the given `Visitor`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63913,"byte_end":63960,"line_start":319,"line_end":319,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":859},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64203,"byte_end":64215,"line_start":328,"line_end":328,"column_start":12,"column_end":24},"name":"DisplayValue","qualname":"::field::DisplayValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes using `fmt::Display`.","sig":null,"attributes":[{"value":"/ A `Value` which serializes using `fmt::Display`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64024,"byte_end":64076,"line_start":323,"line_end":323,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64077,"byte_end":64080,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Uses `record_debug` in the `Value` implementation to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64081,"byte_end":64137,"line_start":325,"line_end":325,"column_start":1,"column_end":57}},{"value":"/ avoid an unnecessary evaluation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64138,"byte_end":64174,"line_start":326,"line_end":326,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":866},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64329,"byte_end":64339,"line_start":332,"line_end":332,"column_start":12,"column_end":22},"name":"DebugValue","qualname":"::field::DebugValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes as a string using `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ A `Value` which serializes as a string using `fmt::Debug`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64238,"byte_end":64300,"line_start":330,"line_end":330,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":295},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64486,"byte_end":64493,"line_start":336,"line_end":336,"column_start":8,"column_end":15},"name":"display","qualname":"::field::display","value":"pub fn display<T>(T) -> DisplayValue<T> where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Display` as a `Value` that can be\n recorded using its `Display` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Display` as a `Value` that can be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64360,"byte_end":64429,"line_start":334,"line_end":334,"column_start":1,"column_end":70}},{"value":"/ recorded using its `Display` implementation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64430,"byte_end":64478,"line_start":335,"line_end":335,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64696,"byte_end":64701,"line_start":345,"line_end":345,"column_start":8,"column_end":13},"name":"debug","qualname":"::field::debug","value":"pub fn debug<T>(T) -> DebugValue<T> where T: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Debug` as a `Value` that can be\n recorded using its `Debug` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Debug` as a `Value` that can be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64574,"byte_end":64641,"line_start":343,"line_end":343,"column_start":1,"column_end":68}},{"value":"/ recorded using its `Debug` implementation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":64642,"byte_end":64688,"line_start":344,"line_end":344,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74023,"byte_end":74031,"line_start":686,"line_end":686,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Field>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n which defines this field.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73771,"byte_end":73842,"line_start":680,"line_end":680,"column_start":5,"column_end":76}},{"value":"/ which defines this field.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73847,"byte_end":73876,"line_start":681,"line_end":681,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73881,"byte_end":73884,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73889,"byte_end":73943,"line_start":683,"line_end":683,"column_start":5,"column_end":59}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73948,"byte_end":73997,"line_start":684,"line_end":684,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74002,"byte_end":74011,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74175,"byte_end":74179,"line_start":691,"line_end":691,"column_start":12,"column_end":16},"name":"name","qualname":"<Field>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representing the name of the field.\n","sig":null,"attributes":[{"value":"/ Returns a string representing the name of the field.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74107,"byte_end":74163,"line_start":690,"line_end":690,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":75195,"byte_end":75198,"line_start":742,"line_end":742,"column_start":18,"column_end":21},"name":"new","qualname":"<FieldSet>::new","value":"pub const fn new(&'static [&'static str], callsite::Identifier) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `FieldSet` with the given array of field names and callsite.\n","sig":null,"attributes":[{"value":"/ Constructs a new `FieldSet` with the given array of field names and callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":75096,"byte_end":75177,"line_start":741,"line_end":741,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":75804,"byte_end":75809,"line_start":758,"line_end":758,"column_start":12,"column_end":17},"name":"field","qualname":"<FieldSet>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<Field> where Q: Borrow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Field`] named `name`, or `None` if no such field exists.","sig":null,"attributes":[{"value":"/ Returns the [`Field`] named `name`, or `None` if no such field exists.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":75670,"byte_end":75744,"line_start":755,"line_end":755,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":75749,"byte_end":75752,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ [`Field`]: ../struct.Field.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":75757,"byte_end":75792,"line_start":757,"line_end":757,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76835,"byte_end":76843,"line_start":783,"line_end":783,"column_start":12,"column_end":20},"name":"contains","qualname":"<FieldSet>::contains","value":"pub fn contains(&Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains the given `field`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains the given `field`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76157,"byte_end":76213,"line_start":772,"line_end":772,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76218,"byte_end":76221,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76226,"byte_end":76285,"line_start":774,"line_end":774,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76290,"byte_end":76355,"line_start":775,"line_end":775,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: If <code>field</code> shares a name with a field","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76360,"byte_end":76435,"line_start":776,"line_end":776,"column_start":5,"column_end":80}},{"value":"/ in this <code>FieldSet</code>, but was created by a <code>FieldSet</code>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76440,"byte_end":76517,"line_start":777,"line_end":777,"column_start":5,"column_end":82}},{"value":"/ with a different callsite, this <code>FieldSet</code> does <em>not</em>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76522,"byte_end":76597,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/ contain it. This is so that if two separate span callsites define a field","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76602,"byte_end":76679,"line_start":779,"line_end":779,"column_start":5,"column_end":82}},{"value":"/ named \"foo\", the <code>Field</code> corresponding to \"foo\" for each","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76684,"byte_end":76755,"line_start":780,"line_end":780,"column_start":5,"column_end":76}},{"value":"/ of those callsites are not equivalent.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76760,"byte_end":76802,"line_start":781,"line_end":781,"column_start":5,"column_end":47}},{"value":"/ </pre></div>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76807,"byte_end":76823,"line_start":782,"line_end":782,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77029,"byte_end":77033,"line_start":788,"line_end":788,"column_start":12,"column_end":16},"name":"iter","qualname":"<FieldSet>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Field`s in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Field`s in this `FieldSet`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":76956,"byte_end":77017,"line_start":787,"line_end":787,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77468,"byte_end":77477,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"value_set","qualname":"<FieldSet>::value_set","value":"pub fn value_set<'v, V>(&'v Self, &'v V) -> ValueSet where V: ValidLen","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ValueSet` with entries for this `FieldSet`'s values.","sig":null,"attributes":[{"value":"/ Returns a new `ValueSet` with entries for this `FieldSet`'s values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77263,"byte_end":77334,"line_start":799,"line_end":799,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77339,"byte_end":77342,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Note that a `ValueSet` may not be constructed with arrays of over 32","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77347,"byte_end":77419,"line_start":801,"line_end":801,"column_start":5,"column_end":77}},{"value":"/ elements.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77424,"byte_end":77437,"line_start":802,"line_end":802,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77748,"byte_end":77751,"line_start":816,"line_end":816,"column_start":12,"column_end":15},"name":"len","qualname":"<FieldSet>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns the number of fields in this `FieldSet`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77670,"byte_end":77722,"line_start":814,"line_end":814,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77727,"byte_end":77736,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77886,"byte_end":77894,"line_start":822,"line_end":822,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FieldSet>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not this `FieldSet` has fields.\n","sig":null,"attributes":[{"value":"/ Returns whether or not this `FieldSet` has fields.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77806,"byte_end":77860,"line_start":820,"line_end":820,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":77865,"byte_end":77874,"line_start":821,"line_end":821,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79253,"byte_end":79261,"line_start":878,"line_end":878,"column_start":12,"column_end":20},"name":"callsite","qualname":"<ValueSet>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n defining the fields this `ValueSet` refers to.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78980,"byte_end":79051,"line_start":872,"line_end":872,"column_start":5,"column_end":76}},{"value":"/ defining the fields this `ValueSet` refers to.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79056,"byte_end":79106,"line_start":873,"line_end":873,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79111,"byte_end":79114,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79119,"byte_end":79173,"line_start":875,"line_end":875,"column_start":5,"column_end":59}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79178,"byte_end":79227,"line_start":876,"line_end":876,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79232,"byte_end":79241,"line_start":877,"line_end":877,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79455,"byte_end":79461,"line_start":885,"line_end":885,"column_start":12,"column_end":18},"name":"record","qualname":"<ValueSet>::record","value":"pub fn record(&Self, &mut dyn Visit)","parent":null,"children":[],"decl_id":null,"docs":" Visits all the fields in this `ValueSet` with the provided [visitor].","sig":null,"attributes":[{"value":"/ Visits all the fields in this `ValueSet` with the provided [visitor].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79337,"byte_end":79410,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79415,"byte_end":79418,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ [visitor]: Visit","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":79423,"byte_end":79443,"line_start":884,"line_end":884,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":443},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81765,"byte_end":81773,"line_start":960,"line_end":960,"column_start":15,"column_end":23},"name":"ValidLen","qualname":"::field::private::ValidLen","value":"ValidLen<'a>: Borrow<[(&'a Field, Option<&'a dyn Value + 'a>)]>","parent":null,"children":[],"decl_id":null,"docs":" Marker trait implemented by arrays which are of valid length to\n construct a `ValueSet`.","sig":null,"attributes":[{"value":"/ Marker trait implemented by arrays which are of valid length to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81326,"byte_end":81393,"line_start":953,"line_end":953,"column_start":5,"column_end":72}},{"value":"/ construct a `ValueSet`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81398,"byte_end":81425,"line_start":954,"line_end":954,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81430,"byte_end":81433,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ `ValueSet`s may only be constructed from arrays containing 32 or fewer","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81438,"byte_end":81512,"line_start":956,"line_end":956,"column_start":5,"column_end":79}},{"value":"/ elements, to ensure the array is small enough to always be allocated on the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81517,"byte_end":81596,"line_start":957,"line_end":957,"column_start":5,"column_end":84}},{"value":"/ stack. This trait is only implemented by arrays of an appropriate length,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81601,"byte_end":81678,"line_start":958,"line_end":958,"column_start":5,"column_end":82}},{"value":"/ ensuring that the correct size arrays are used at compile-time.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81683,"byte_end":81750,"line_start":959,"line_end":959,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":446},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":1127},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":590},{"krate":0,"index":592}],"decl_id":null,"docs":" Metadata describing trace data.\n","sig":null,"attributes":[{"value":"/ Metadata describing trace data.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":86983,"byte_end":87018,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89642,"byte_end":89650,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::metadata::Metadata","value":"Metadata {  }","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"decl_id":null,"docs":" Metadata describing a [span] or [event].","sig":null,"attributes":[{"value":"/ Metadata describing a [span] or [event].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87149,"byte_end":87193,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87194,"byte_end":87197,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All spans and events have the following metadata:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87198,"byte_end":87251,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ - A [name], represented as a static string.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87252,"byte_end":87299,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ - A [target], a string that categorizes part of the system where the span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87300,"byte_end":87377,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   or event occurred. The `tracing` macros default to using the module","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87378,"byte_end":87451,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/   path where the span or event originated as the target, but it may be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87452,"byte_end":87526,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/   overridden.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87527,"byte_end":87544,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ - A [verbosity level]. This determines how verbose a given span or event","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87545,"byte_end":87621,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   is, and allows enabling or disabling more verbose diagnostics","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87622,"byte_end":87689,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/   situationally. See the documentation for the [`Level`] type for details.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87690,"byte_end":87768,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ - The names of the [fields] defined by the span or event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87769,"byte_end":87830,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ - Whether the metadata corresponds to a span or event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87831,"byte_end":87889,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87890,"byte_end":87893,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In addition, the following optional metadata describing the source code","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87894,"byte_end":87969,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ location where the span or event originated _may_ be provided:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":87970,"byte_end":88036,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/ - The [file name]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88037,"byte_end":88058,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ - The [line number]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88059,"byte_end":88082,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ - The [module path]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88083,"byte_end":88106,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88107,"byte_end":88110,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Metadata is used by [`Subscriber`]s when filtering spans and events, and it","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88111,"byte_end":88190,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ may also be used as part of their data payload.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88191,"byte_end":88242,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88243,"byte_end":88246,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ When created by the `event!` or `span!` macro, the metadata describing a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88247,"byte_end":88323,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ particular event or span is constructed statically and exists as a single","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88324,"byte_end":88401,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ static instance. Thus, the overhead of creating the metadata is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88402,"byte_end":88469,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ _significantly_ lower than that of creating the actual span. Therefore,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88470,"byte_end":88545,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ filtering is based on metadata, rather than on the constructed span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88546,"byte_end":88618,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88619,"byte_end":88622,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88623,"byte_end":88688,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: Although instances of <code>Metadata</code>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88689,"byte_end":88763,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/     cannot be compared directly, they provide a method","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88764,"byte_end":88822,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     <a href=\"struct.Metadata.html#method.id\"><code>id</code></a>, returning","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88823,"byte_end":88902,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/     an opaque <a href=\"../callsite/struct.Identifier.html\">callsite","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88903,"byte_end":88974,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/     identifier</a>which uniquely identifies the callsite where the metadata","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":88975,"byte_end":89054,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/     originated. This can be used to determine if two <code>Metadata</code>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89055,"byte_end":89133,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/     correspond to the same callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89134,"byte_end":89174,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ </pre>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89175,"byte_end":89185,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89186,"byte_end":89189,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89190,"byte_end":89220,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/ [event]: ../event/index.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89221,"byte_end":89253,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/ [name]: #method.name","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89254,"byte_end":89278,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/ [target]: #method.target","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89279,"byte_end":89307,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ [fields]: #method.fields","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89308,"byte_end":89336,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ [verbosity level]: #method.level","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89337,"byte_end":89373,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/ [file name]: #method.file","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89374,"byte_end":89403,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/ [line number]: #method.line","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89404,"byte_end":89435,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ [module path]: #method.module","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89436,"byte_end":89469,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89470,"byte_end":89525,"line_start":57,"line_end":57,"column_start":1,"column_end":56}},{"value":"/ [`id`]: struct.Metadata.html#method.id","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89526,"byte_end":89568,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/ [callsite identifier]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":89569,"byte_end":89630,"line_start":59,"line_end":59,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90641,"byte_end":90645,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"Kind","qualname":"::metadata::Kind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the callsite is a span or event.\n","sig":null,"attributes":[{"value":"/ Indicates whether the callsite is a span or event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90543,"byte_end":90597,"line_start":91,"line_end":91,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1086},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95876,"byte_end":95881,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"Level","qualname":"::metadata::Level","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the level of verbosity of a span or event.","sig":null,"attributes":[{"value":"/ Describes the level of verbosity of a span or event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90652,"byte_end":90708,"line_start":95,"line_end":95,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90709,"byte_end":90712,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Comparing Levels","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90713,"byte_end":90735,"line_start":97,"line_end":97,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90736,"byte_end":90739,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ `Level` implements the [`PartialOrd`] and [`Ord`] traits, allowing two","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90740,"byte_end":90814,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ `Level`s to be compared to determine which is considered more or less","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90815,"byte_end":90888,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ verbose. Levels which are more verbose are considered \"greater than\" levels","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90889,"byte_end":90968,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ which are less verbose, with [`Level::ERROR`] considered the lowest, and","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":90969,"byte_end":91045,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ [`Level::TRACE`] considered the highest.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91046,"byte_end":91090,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91091,"byte_end":91094,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91095,"byte_end":91111,"line_start":105,"line_end":105,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91112,"byte_end":91119,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::Level;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91120,"byte_end":91148,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91149,"byte_end":91152,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert!(Level::TRACE > Level::DEBUG);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91153,"byte_end":91194,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ assert!(Level::ERROR < Level::WARN);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91195,"byte_end":91235,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/ assert!(Level::INFO <= Level::DEBUG);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91236,"byte_end":91277,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(Level::TRACE, Level::TRACE);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91278,"byte_end":91321,"line_start":112,"line_end":112,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91322,"byte_end":91329,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91330,"byte_end":91333,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ # Filtering","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91334,"byte_end":91349,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91350,"byte_end":91353,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ `Level`s are typically used to implement filtering that determines which","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91354,"byte_end":91430,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ spans and events are enabled. Depending on the use case, more or less","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91431,"byte_end":91504,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ verbose diagnostics may be desired. For example, when running in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91505,"byte_end":91573,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ development, [`DEBUG`]-level traces may be enabled by default. When running in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91574,"byte_end":91656,"line_start":120,"line_end":120,"column_start":1,"column_end":83}},{"value":"/ production, only [`INFO`]-level and lower traces might be enabled. Libraries","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91657,"byte_end":91737,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ may include very verbose diagnostics at the [`DEBUG`] and/or [`TRACE`] levels.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91738,"byte_end":91820,"line_start":122,"line_end":122,"column_start":1,"column_end":83}},{"value":"/ Applications using those libraries typically chose to ignore those traces. However, when","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91821,"byte_end":91913,"line_start":123,"line_end":123,"column_start":1,"column_end":93}},{"value":"/ debugging an issue involving said libraries, it may be useful to temporarily","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91914,"byte_end":91994,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ enable the more verbose traces.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":91995,"byte_end":92030,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92031,"byte_end":92034,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The [`LevelFilter`] type is provided to enable filtering traces by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92035,"byte_end":92105,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/ verbosity. `Level`s can be compared against [`LevelFilter`]s, and","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92106,"byte_end":92175,"line_start":128,"line_end":128,"column_start":1,"column_end":70}},{"value":"/ [`LevelFilter`] has a variant for each `Level`, which compares analogously","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92176,"byte_end":92254,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ to that level. In addition, [`LevelFilter`] adds a [`LevelFilter::OFF`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92255,"byte_end":92330,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ variant, which is considered \"less verbose\" than every other `Level`. This is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92331,"byte_end":92412,"line_start":131,"line_end":131,"column_start":1,"column_end":82}},{"value":"/ intended to allow filters to completely disable tracing in a particular context.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92413,"byte_end":92497,"line_start":132,"line_end":132,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92498,"byte_end":92501,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92502,"byte_end":92518,"line_start":134,"line_end":134,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92519,"byte_end":92526,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::{Level, LevelFilter};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92527,"byte_end":92570,"line_start":136,"line_end":136,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92571,"byte_end":92574,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ assert!(LevelFilter::OFF < Level::TRACE);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92575,"byte_end":92620,"line_start":138,"line_end":138,"column_start":1,"column_end":46}},{"value":"/ assert!(LevelFilter::TRACE > Level::DEBUG);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92621,"byte_end":92668,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/ assert!(LevelFilter::ERROR < Level::WARN);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92669,"byte_end":92715,"line_start":140,"line_end":140,"column_start":1,"column_end":47}},{"value":"/ assert!(LevelFilter::INFO <= Level::DEBUG);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92716,"byte_end":92763,"line_start":141,"line_end":141,"column_start":1,"column_end":48}},{"value":"/ assert!(LevelFilter::INFO >= Level::INFO);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92764,"byte_end":92810,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92811,"byte_end":92818,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92819,"byte_end":92822,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92823,"byte_end":92838,"line_start":145,"line_end":145,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92839,"byte_end":92842,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Below is a simple example of how a [`Subscriber`] could implement filtering through","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92843,"byte_end":92930,"line_start":147,"line_end":147,"column_start":1,"column_end":88}},{"value":"/ a [`LevelFilter`]. When a span or event is recorded, the [`Subscriber::enabled`] method","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":92931,"byte_end":93022,"line_start":148,"line_end":148,"column_start":1,"column_end":92}},{"value":"/ compares the span or event's `Level` against the configured [`LevelFilter`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93023,"byte_end":93103,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/ The optional [`Subscriber::max_level_hint`] method can also be implemented to allow spans","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93104,"byte_end":93197,"line_start":150,"line_end":150,"column_start":1,"column_end":94}},{"value":"/ and events above a maximum verbosity level to be skipped more efficiently,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93198,"byte_end":93276,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/ often improving performance in short-lived programs.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93277,"byte_end":93333,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93334,"byte_end":93337,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93338,"byte_end":93345,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ use tracing_core::{span, Event, Level, LevelFilter, Subscriber, Metadata};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93346,"byte_end":93424,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ # use tracing_core::span::{Id, Record, Current};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93425,"byte_end":93477,"line_start":156,"line_end":156,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93478,"byte_end":93481,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93482,"byte_end":93502,"line_start":158,"line_end":158,"column_start":1,"column_end":21}},{"value":"/ pub struct MySubscriber {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93503,"byte_end":93532,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/     /// The most verbose level that this subscriber will enable.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93533,"byte_end":93601,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/     max_level: LevelFilter,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93602,"byte_end":93633,"line_start":161,"line_end":161,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93634,"byte_end":93637,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93638,"byte_end":93652,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93653,"byte_end":93658,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93659,"byte_end":93662,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ impl MySubscriber {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93663,"byte_end":93686,"line_start":166,"line_end":166,"column_start":1,"column_end":24}},{"value":"/     /// Returns a new `MySubscriber` which will record spans and events up to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93687,"byte_end":93768,"line_start":167,"line_end":167,"column_start":1,"column_end":82}},{"value":"/     /// `max_level`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93769,"byte_end":93793,"line_start":168,"line_end":168,"column_start":1,"column_end":25}},{"value":"/     pub fn with_max_level(max_level: LevelFilter) -> Self {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93794,"byte_end":93857,"line_start":169,"line_end":169,"column_start":1,"column_end":64}},{"value":"/         Self {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93858,"byte_end":93876,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/             max_level,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93877,"byte_end":93903,"line_start":171,"line_end":171,"column_start":1,"column_end":27}},{"value":"/             // ...","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93904,"byte_end":93926,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93927,"byte_end":93940,"line_start":173,"line_end":173,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93941,"byte_end":93950,"line_start":174,"line_end":174,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93951,"byte_end":93956,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/ impl Subscriber for MySubscriber {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93957,"byte_end":93995,"line_start":176,"line_end":176,"column_start":1,"column_end":39}},{"value":"/     fn enabled(&self, meta: &Metadata<'_>) -> bool {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":93996,"byte_end":94052,"line_start":177,"line_end":177,"column_start":1,"column_end":57}},{"value":"/         // A span or event is enabled if it is at or below the configured","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94053,"byte_end":94130,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/         // maximum level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94131,"byte_end":94160,"line_start":179,"line_end":179,"column_start":1,"column_end":30}},{"value":"/         meta.level() <= &self.max_level","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94161,"byte_end":94204,"line_start":180,"line_end":180,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94205,"byte_end":94214,"line_start":181,"line_end":181,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94215,"byte_end":94218,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/     // This optional method returns the most verbose level that this","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94219,"byte_end":94291,"line_start":183,"line_end":183,"column_start":1,"column_end":73}},{"value":"/     // subscriber will enable. Although implementing this method is not","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94292,"byte_end":94367,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/     // *required*, it permits additional optimizations when it is provided,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94368,"byte_end":94447,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/     // allowing spans and events above the max level to be skipped","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94448,"byte_end":94518,"line_start":186,"line_end":186,"column_start":1,"column_end":71}},{"value":"/     // more efficiently.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94519,"byte_end":94547,"line_start":187,"line_end":187,"column_start":1,"column_end":29}},{"value":"/     fn max_level_hint(&self) -> Option<LevelFilter> {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94548,"byte_end":94605,"line_start":188,"line_end":188,"column_start":1,"column_end":58}},{"value":"/         Some(self.max_level)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94606,"byte_end":94638,"line_start":189,"line_end":189,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94639,"byte_end":94648,"line_start":190,"line_end":190,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94649,"byte_end":94652,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/     // Implement the rest of the subscriber...","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94653,"byte_end":94703,"line_start":192,"line_end":192,"column_start":1,"column_end":51}},{"value":"/     fn new_span(&self, span: &span::Attributes<'_>) -> span::Id {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94704,"byte_end":94773,"line_start":193,"line_end":193,"column_start":1,"column_end":70}},{"value":"/         // ...","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94774,"byte_end":94792,"line_start":194,"line_end":194,"column_start":1,"column_end":19}},{"value":"/         # drop(span); Id::from_u64(1)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94793,"byte_end":94834,"line_start":195,"line_end":195,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94835,"byte_end":94844,"line_start":196,"line_end":196,"column_start":1,"column_end":10}},{"value":"/     fn event(&self, event: &Event<'_>) {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94846,"byte_end":94890,"line_start":198,"line_end":198,"column_start":1,"column_end":45}},{"value":"/         // ...","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94891,"byte_end":94909,"line_start":199,"line_end":199,"column_start":1,"column_end":19}},{"value":"/         # drop(event);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94910,"byte_end":94936,"line_start":200,"line_end":200,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94937,"byte_end":94946,"line_start":201,"line_end":201,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94947,"byte_end":94950,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/     // ...","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94951,"byte_end":94965,"line_start":203,"line_end":203,"column_start":1,"column_end":15}},{"value":"/     # fn enter(&self, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":94966,"byte_end":95002,"line_start":204,"line_end":204,"column_start":1,"column_end":37}},{"value":"/     # fn exit(&self, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95003,"byte_end":95038,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"/     # fn record(&self, _: &Id, _: &Record<'_>) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95039,"byte_end":95092,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/     # fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95093,"byte_end":95151,"line_start":207,"line_end":207,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95152,"byte_end":95157,"line_start":208,"line_end":208,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95158,"byte_end":95165,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95166,"byte_end":95169,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ It is worth noting that the `tracing-subscriber` crate provides [additional","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95170,"byte_end":95249,"line_start":211,"line_end":211,"column_start":1,"column_end":80}},{"value":"/ APIs][envfilter] for performing more sophisticated filtering, such as","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95250,"byte_end":95323,"line_start":212,"line_end":212,"column_start":1,"column_end":74}},{"value":"/ enabling different levels based on which module or crate a span or event is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95324,"byte_end":95403,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/ recorded in.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95404,"byte_end":95420,"line_start":214,"line_end":214,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95421,"byte_end":95424,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [`DEBUG`]: Level::DEBUG","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95425,"byte_end":95452,"line_start":216,"line_end":216,"column_start":1,"column_end":28}},{"value":"/ [`INFO`]: Level::INFO","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95453,"byte_end":95478,"line_start":217,"line_end":217,"column_start":1,"column_end":26}},{"value":"/ [`TRACE`]: Level::TRACE","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95479,"byte_end":95506,"line_start":218,"line_end":218,"column_start":1,"column_end":28}},{"value":"/ [`Subscriber::enabled`]: crate::subscriber::Subscriber::enabled","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95507,"byte_end":95574,"line_start":219,"line_end":219,"column_start":1,"column_end":68}},{"value":"/ [`Subscriber::max_level_hint`]: crate::subscriber::Subscriber::max_level_hint","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95575,"byte_end":95656,"line_start":220,"line_end":220,"column_start":1,"column_end":82}},{"value":"/ [`Subscriber`]: crate::subscriber::Subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95657,"byte_end":95706,"line_start":221,"line_end":221,"column_start":1,"column_end":50}},{"value":"/ [envfilter]: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/filter/struct.EnvFilter.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95707,"byte_end":95813,"line_start":222,"line_end":222,"column_start":1,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":1104},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96560,"byte_end":96571,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"LevelFilter","qualname":"::metadata::LevelFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter comparable to a verbosity [`Level`].","sig":null,"attributes":[{"value":"/ A filter comparable to a verbosity [`Level`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95896,"byte_end":95945,"line_start":226,"line_end":226,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95946,"byte_end":95949,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ If a [`Level`] is considered less than a `LevelFilter`, it should be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":95950,"byte_end":96022,"line_start":228,"line_end":228,"column_start":1,"column_end":73}},{"value":"/ considered enabled; if greater than or equal to the `LevelFilter`,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96023,"byte_end":96093,"line_start":229,"line_end":229,"column_start":1,"column_end":71}},{"value":"/ that level is disabled. See [`LevelFilter::current`] for more","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96094,"byte_end":96159,"line_start":230,"line_end":230,"column_start":1,"column_end":66}},{"value":"/ details.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96160,"byte_end":96172,"line_start":231,"line_end":231,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96173,"byte_end":96176,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ Note that this is essentially identical to the `Level` type, but with the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96177,"byte_end":96254,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/ addition of an [`OFF`] level that completely disables all trace","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96255,"byte_end":96322,"line_start":234,"line_end":234,"column_start":1,"column_end":68}},{"value":"/ instrumentation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96323,"byte_end":96343,"line_start":235,"line_end":235,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96344,"byte_end":96347,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ See the documentation for the [`Level`] type to see how `Level`s","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96348,"byte_end":96416,"line_start":237,"line_end":237,"column_start":1,"column_end":69}},{"value":"/ and `LevelFilter`s interact.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96417,"byte_end":96449,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96450,"byte_end":96453,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`OFF`]: LevelFilter::OFF","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96454,"byte_end":96483,"line_start":240,"line_end":240,"column_start":1,"column_end":30}},{"value":"repr(transparent)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96484,"byte_end":96504,"line_start":241,"line_end":241,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96690,"byte_end":96711,"line_start":247,"line_end":247,"column_start":12,"column_end":33},"name":"ParseLevelFilterError","qualname":"::metadata::ParseLevelFilterError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that a string could not be parsed to a valid level.\n","sig":null,"attributes":[{"value":"/ Indicates that a string could not be parsed to a valid level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96589,"byte_end":96654,"line_start":245,"line_end":245,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97000,"byte_end":97003,"line_start":256,"line_end":256,"column_start":18,"column_end":21},"name":"new","qualname":"<Metadata>::new","value":"pub const fn new(&'static str, &'a str, Level, Option<&'a str>, Option<u32>,\n                 Option<&'a str>, field::FieldSet, Kind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct new metadata for a span or event, with a name, target, level, field\n names, and optional source code location.\n","sig":null,"attributes":[{"value":"/ Construct new metadata for a span or event, with a name, target, level, field","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96851,"byte_end":96932,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ names, and optional source code location.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96937,"byte_end":96982,"line_start":255,"line_end":255,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97520,"byte_end":97526,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"fields","qualname":"<Metadata>::fields","value":"pub fn fields(&Self) -> &field::FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the names of the fields on the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the names of the fields on the described span or event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97441,"byte_end":97508,"line_start":278,"line_end":278,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97666,"byte_end":97671,"line_start":284,"line_end":284,"column_start":12,"column_end":17},"name":"level","qualname":"<Metadata>::level","value":"pub fn level(&Self) -> &Level","parent":null,"children":[],"decl_id":null,"docs":" Returns the level of verbosity of the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the level of verbosity of the described span or event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97588,"byte_end":97654,"line_start":283,"line_end":283,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97767,"byte_end":97771,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"name","qualname":"<Metadata>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the span.\n","sig":null,"attributes":[{"value":"/ Returns the name of the span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97722,"byte_end":97755,"line_start":288,"line_end":288,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98094,"byte_end":98100,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"target","qualname":"<Metadata>::target","value":"pub fn target(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string describing the part of the system where the span or\n event that this metadata describes occurred.","sig":null,"attributes":[{"value":"/ Returns a string describing the part of the system where the span or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97826,"byte_end":97898,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ event that this metadata describes occurred.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97903,"byte_end":97951,"line_start":294,"line_end":294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97956,"byte_end":97959,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Typically, this is the module path, but alternate targets may be set","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":97964,"byte_end":98036,"line_start":296,"line_end":296,"column_start":5,"column_end":77}},{"value":"/ when spans or events are constructed.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98041,"byte_end":98082,"line_start":297,"line_end":297,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98277,"byte_end":98288,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"module_path","qualname":"<Metadata>::module_path","value":"pub fn module_path(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Rust module where the span occurred, or\n `None` if the module path is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Rust module where the span occurred, or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98152,"byte_end":98219,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/ `None` if the module path is unknown.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98224,"byte_end":98265,"line_start":303,"line_end":303,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98475,"byte_end":98479,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"file","qualname":"<Metadata>::file","value":"pub fn file(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the source code file where the span\n occurred, or `None` if the file is unknown\n","sig":null,"attributes":[{"value":"/ Returns the name of the source code file where the span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98353,"byte_end":98412,"line_start":308,"line_end":308,"column_start":5,"column_end":64}},{"value":"/ occurred, or `None` if the file is unknown","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98417,"byte_end":98463,"line_start":309,"line_end":309,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98674,"byte_end":98678,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"line","qualname":"<Metadata>::line","value":"pub fn line(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the line number in the source code file where the span\n occurred, or `None` if the line number is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the line number in the source code file where the span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98537,"byte_end":98603,"line_start":314,"line_end":314,"column_start":5,"column_end":71}},{"value":"/ occurred, or `None` if the line number is unknown.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98608,"byte_end":98662,"line_start":315,"line_end":315,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98871,"byte_end":98879,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Metadata>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque `Identifier` that uniquely identifies the callsite\n this `Metadata` originated from.\n","sig":null,"attributes":[{"value":"/ Returns an opaque `Identifier` that uniquely identifies the callsite","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98732,"byte_end":98804,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ this `Metadata` originated from.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98809,"byte_end":98845,"line_start":321,"line_end":321,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98850,"byte_end":98859,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":99016,"byte_end":99024,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Metadata>::is_event","value":"pub fn is_event(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the callsite kind is `Event`.\n","sig":null,"attributes":[{"value":"/ Returns true if the callsite kind is `Event`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":98955,"byte_end":99004,"line_start":327,"line_end":327,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":99141,"byte_end":99148,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Metadata>::is_span","value":"pub fn is_span(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`.\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":99082,"byte_end":99129,"line_start":332,"line_end":332,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":502},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100447,"byte_end":100452,"line_start":377,"line_end":377,"column_start":15,"column_end":20},"name":"EVENT","qualname":"::metadata::Kind::EVENT","value":"Kind","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" `Event` callsite\n","sig":null,"attributes":[{"value":"/ `Event` callsite","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100412,"byte_end":100432,"line_start":376,"line_end":376,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":503},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100523,"byte_end":100527,"line_start":380,"line_end":380,"column_start":15,"column_end":19},"name":"SPAN","qualname":"::metadata::Kind::SPAN","value":"Kind","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" `Span` callsite\n","sig":null,"attributes":[{"value":"/ `Span` callsite","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100489,"byte_end":100508,"line_start":379,"line_end":379,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":504},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100757,"byte_end":100761,"line_start":385,"line_end":385,"column_start":15,"column_end":19},"name":"HINT","qualname":"::metadata::Kind::HINT","value":"Kind","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" `enabled!` callsite. [`Subscriber`][`crate::subscriber::Subscriber`]s can assume\n this `Kind` means they will never recieve a\n full event with this [`Metadata`].\n","sig":null,"attributes":[{"value":"/ `enabled!` callsite. [`Subscriber`][`crate::subscriber::Subscriber`]s can assume","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100563,"byte_end":100647,"line_start":382,"line_end":382,"column_start":5,"column_end":89}},{"value":"/ this `Kind` means they will never recieve a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100652,"byte_end":100699,"line_start":383,"line_end":383,"column_start":5,"column_end":52}},{"value":"/ full event with this [`Metadata`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100704,"byte_end":100742,"line_start":384,"line_end":384,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100855,"byte_end":100862,"line_start":388,"line_end":388,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Kind>::is_span","value":"pub fn is_span(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100797,"byte_end":100843,"line_start":387,"line_end":387,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101000,"byte_end":101008,"line_start":393,"line_end":393,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Kind>::is_event","value":"pub fn is_event(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Event`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Event`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100941,"byte_end":100988,"line_start":392,"line_end":392,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101147,"byte_end":101154,"line_start":398,"line_end":398,"column_start":12,"column_end":19},"name":"is_hint","qualname":"<Kind>::is_hint","value":"pub fn is_hint(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Hint`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Hint`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101089,"byte_end":101135,"line_start":397,"line_end":397,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101467,"byte_end":101471,"line_start":406,"line_end":406,"column_start":18,"column_end":22},"name":"hint","qualname":"<Kind>::hint","value":"pub const fn hint(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets that this `Kind` is a [hint](Self::HINT).","sig":null,"attributes":[{"value":"/ Sets that this `Kind` is a [hint](Self::HINT).","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101233,"byte_end":101283,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101288,"byte_end":101291,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This can be called on [`SPAN`](Self::SPAN) and [`EVENT`](Self::EVENT)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101296,"byte_end":101369,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ kinds to construct a hint callsite that also counts as a span or event.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101374,"byte_end":101449,"line_start":405,"line_end":405,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":513},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102486,"byte_end":102491,"line_start":452,"line_end":452,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::Level::ERROR","value":"Level","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102401,"byte_end":102423,"line_start":449,"line_end":449,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102428,"byte_end":102431,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102436,"byte_end":102471,"line_start":451,"line_end":451,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":514},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102616,"byte_end":102620,"line_start":456,"line_end":456,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::Level::WARN","value":"Level","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102531,"byte_end":102552,"line_start":453,"line_end":453,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102557,"byte_end":102560,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102565,"byte_end":102601,"line_start":455,"line_end":455,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":515},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102742,"byte_end":102746,"line_start":460,"line_end":460,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::Level::INFO","value":"Level","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102659,"byte_end":102680,"line_start":457,"line_end":457,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102685,"byte_end":102688,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102693,"byte_end":102727,"line_start":459,"line_end":459,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":516},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102877,"byte_end":102882,"line_start":464,"line_end":464,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::Level::DEBUG","value":"Level","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102785,"byte_end":102807,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102812,"byte_end":102815,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102820,"byte_end":102862,"line_start":463,"line_end":463,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":517},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103043,"byte_end":103048,"line_start":468,"line_end":468,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::Level::TRACE","value":"Level","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102922,"byte_end":102944,"line_start":465,"line_end":465,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102949,"byte_end":102952,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102957,"byte_end":103028,"line_start":467,"line_end":467,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103237,"byte_end":103243,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Level>::as_str","value":"pub fn as_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the string representation of the `Level`.","sig":null,"attributes":[{"value":"/ Returns the string representation of the `Level`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103089,"byte_end":103142,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103147,"byte_end":103150,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This returns the same string as the `fmt::Display` implementation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103155,"byte_end":103225,"line_start":472,"line_end":472,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":535},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106088,"byte_end":106091,"line_start":576,"line_end":576,"column_start":15,"column_end":18},"name":"OFF","qualname":"::metadata::LevelFilter::OFF","value":"LevelFilter","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The \"off\" level.","sig":null,"attributes":[{"value":"/ The \"off\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105968,"byte_end":105988,"line_start":573,"line_end":573,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105993,"byte_end":105996,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Designates that trace instrumentation should be completely disabled.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106001,"byte_end":106073,"line_start":575,"line_end":575,"column_start":5,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":536},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106215,"byte_end":106220,"line_start":580,"line_end":580,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::LevelFilter::ERROR","value":"LevelFilter","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106130,"byte_end":106152,"line_start":577,"line_end":577,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106157,"byte_end":106160,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106165,"byte_end":106200,"line_start":579,"line_end":579,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":537},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106364,"byte_end":106368,"line_start":584,"line_end":584,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::LevelFilter::WARN","value":"LevelFilter","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106279,"byte_end":106300,"line_start":581,"line_end":581,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106305,"byte_end":106308,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106313,"byte_end":106349,"line_start":583,"line_end":583,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":538},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106509,"byte_end":106513,"line_start":588,"line_end":588,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::LevelFilter::INFO","value":"LevelFilter","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106426,"byte_end":106447,"line_start":585,"line_end":585,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106452,"byte_end":106455,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106460,"byte_end":106494,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":539},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106663,"byte_end":106668,"line_start":592,"line_end":592,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::LevelFilter::DEBUG","value":"LevelFilter","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106571,"byte_end":106593,"line_start":589,"line_end":589,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106598,"byte_end":106601,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106606,"byte_end":106648,"line_start":591,"line_end":591,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":540},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106848,"byte_end":106853,"line_start":596,"line_end":596,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::LevelFilter::TRACE","value":"LevelFilter","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106727,"byte_end":106749,"line_start":593,"line_end":593,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106754,"byte_end":106757,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106762,"byte_end":106833,"line_start":595,"line_end":595,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":107034,"byte_end":107044,"line_start":600,"line_end":600,"column_start":18,"column_end":28},"name":"from_level","qualname":"<LevelFilter>::from_level","value":"pub const fn from_level(Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that enables spans and events with verbosity up\n to and including `level`.\n","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that enables spans and events with verbosity up","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106907,"byte_end":106982,"line_start":598,"line_end":598,"column_start":5,"column_end":80}},{"value":"/ to and including `level`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":106987,"byte_end":107016,"line_start":599,"line_end":599,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":107313,"byte_end":107323,"line_start":609,"line_end":609,"column_start":18,"column_end":28},"name":"into_level","qualname":"<LevelFilter>::into_level","value":"pub const fn into_level(Self) -> Option<Level>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most verbose [`Level`] that this filter accepts, or `None`\n if it is [`OFF`].","sig":null,"attributes":[{"value":"/ Returns the most verbose [`Level`] that this filter accepts, or `None`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":107106,"byte_end":107180,"line_start":604,"line_end":604,"column_start":5,"column_end":79}},{"value":"/ if it is [`OFF`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":107185,"byte_end":107206,"line_start":605,"line_end":605,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":107211,"byte_end":107214,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: ../struct.Level.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":107219,"byte_end":107254,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/ [`OFF`]: #associatedconstant.OFF","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":107259,"byte_end":107295,"line_start":608,"line_end":608,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":109053,"byte_end":109060,"line_start":644,"line_end":644,"column_start":12,"column_end":19},"name":"current","qualname":"<LevelFilter>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that matches the most verbose [`Level`] that any\n currently active [`Subscriber`] will enable.","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that matches the most verbose [`Level`] that any","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108174,"byte_end":108250,"line_start":627,"line_end":627,"column_start":5,"column_end":81}},{"value":"/ currently active [`Subscriber`] will enable.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108255,"byte_end":108303,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108308,"byte_end":108311,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ User code should treat this as a *hint*. If a given span or event has a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108316,"byte_end":108391,"line_start":630,"line_end":630,"column_start":5,"column_end":80}},{"value":"/ level *higher* than the returned `LevelFilter`, it will not be enabled.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108396,"byte_end":108471,"line_start":631,"line_end":631,"column_start":5,"column_end":80}},{"value":"/ However, if the level is less than or equal to this value, the span or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108476,"byte_end":108550,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ event is *not* guaranteed to be enabled; the subscriber will still","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108555,"byte_end":108625,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ filter each callsite individually.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108630,"byte_end":108668,"line_start":634,"line_end":634,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108673,"byte_end":108676,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Therefore, comparing a given span or event's level to the returned","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108681,"byte_end":108751,"line_start":636,"line_end":636,"column_start":5,"column_end":75}},{"value":"/ `LevelFilter` **can** be used for determining if something is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108756,"byte_end":108821,"line_start":637,"line_end":637,"column_start":5,"column_end":70}},{"value":"/ *disabled*, but **should not** be used for determining if something is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108826,"byte_end":108900,"line_start":638,"line_end":638,"column_start":5,"column_end":79}},{"value":"/ *enabled*.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108905,"byte_end":108919,"line_start":639,"line_end":639,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108924,"byte_end":108927,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: ../struct.Level.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108932,"byte_end":108967,"line_start":641,"line_end":641,"column_start":5,"column_end":40}},{"value":"/ [`Subscriber`]: ../../trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":108972,"byte_end":109019,"line_start":642,"line_end":642,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":109024,"byte_end":109041,"line_start":643,"line_end":643,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1157},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":113764,"byte_end":113779,"line_start":753,"line_end":753,"column_start":12,"column_end":27},"name":"ParseLevelError","qualname":"::metadata::ParseLevelError","value":"ParseLevelError {  }","parent":null,"children":[{"krate":0,"index":1158}],"decl_id":null,"docs":" Returned if parsing a `Level` fails.\n","sig":null,"attributes":[{"value":"/ Returned if parsing a `Level` fails.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":113695,"byte_end":113735,"line_start":751,"line_end":751,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":602},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1214},{"krate":0,"index":619},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":641},{"krate":0,"index":647},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":663}],"decl_id":null,"docs":" Spans represent periods of time in the execution of a program.\n","sig":null,"attributes":[{"value":"/ Spans represent periods of time in the execution of a program.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125070,"byte_end":125136,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1171},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125705,"byte_end":125707,"line_start":16,"line_end":16,"column_start":12,"column_end":14},"name":"Id","qualname":"::span::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifies a span within the context of a subscriber.","sig":null,"attributes":[{"value":"/ Identifies a span within the context of a subscriber.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125259,"byte_end":125316,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125317,"byte_end":125320,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ They are generated by [`Subscriber`]s for each span as it is created, by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125321,"byte_end":125397,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ the [`new_span`] trait method. See the documentation for that method for","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125398,"byte_end":125474,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ more information on span ID generation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125475,"byte_end":125518,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125519,"byte_end":125522,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125523,"byte_end":125578,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125579,"byte_end":125648,"line_start":14,"line_end":14,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125838,"byte_end":125848,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::span::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" Attributes provided to a `Subscriber` describing a new span when it is\n created.\n","sig":null,"attributes":[{"value":"/ Attributes provided to a `Subscriber` describing a new span when it is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125722,"byte_end":125796,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ created.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125797,"byte_end":125809,"line_start":19,"line_end":19,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1196},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126025,"byte_end":126031,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Record","qualname":"::span::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":1198}],"decl_id":null,"docs":" A set of fields recorded by a span.\n","sig":null,"attributes":[{"value":"/ A set of fields recorded by a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":125957,"byte_end":125996,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126669,"byte_end":126676,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Current","qualname":"::span::Current","value":"Current {  }","parent":null,"children":[{"krate":0,"index":1203}],"decl_id":null,"docs":" Indicates what [the `Subscriber` considers] the \"current\" span.","sig":null,"attributes":[{"value":"/ Indicates what [the `Subscriber` considers] the \"current\" span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126078,"byte_end":126145,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126146,"byte_end":126149,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ As subscribers may not track a notion of a current span, this has three","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126150,"byte_end":126225,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ possible states:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126226,"byte_end":126246,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/ - \"unknown\", indicating that the subscriber does not track a current span,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126247,"byte_end":126325,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ - \"none\", indicating that the current context is known to not be in a span,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126326,"byte_end":126405,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ - \"some\", with the current span's [`Id`] and [`Metadata`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126406,"byte_end":126468,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126469,"byte_end":126472,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [the `Subscriber` considers]: ../subscriber/trait.Subscriber.html#method.current_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126473,"byte_end":126562,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/ [`Id`]: struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126563,"byte_end":126589,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [`Metadata`]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126590,"byte_end":126640,"line_start":43,"line_end":43,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127182,"byte_end":127190,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Id>::from_u64","value":"pub fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `u64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `u64`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126893,"byte_end":126943,"line_start":62,"line_end":62,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126948,"byte_end":126951,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126956,"byte_end":127021,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: Span IDs must be greater than zero.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127026,"byte_end":127092,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"/ </pre>","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127097,"byte_end":127107,"line_start":66,"line_end":66,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127112,"byte_end":127115,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127120,"byte_end":127132,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/ - If the provided `u64` is 0.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127137,"byte_end":127170,"line_start":69,"line_end":69,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127453,"byte_end":127470,"line_start":78,"line_end":78,"column_start":18,"column_end":35},"name":"from_non_zero_u64","qualname":"<Id>::from_non_zero_u64","value":"pub const fn from_non_zero_u64(NonZeroU64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `NonZeroU64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `NonZeroU64`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127282,"byte_end":127339,"line_start":74,"line_end":74,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127344,"byte_end":127347,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Id::from_u64`](#method.from_u64), this will never panic.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127352,"byte_end":127421,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127426,"byte_end":127435,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127683,"byte_end":127691,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"into_u64","qualname":"<Id>::into_u64","value":"pub fn into_u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `u64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127590,"byte_end":127629,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `u64`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127634,"byte_end":127671,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127927,"byte_end":127944,"line_start":93,"line_end":93,"column_start":18,"column_end":35},"name":"into_non_zero_u64","qualname":"<Id>::into_non_zero_u64","value":"pub const fn into_non_zero_u64(&Self) -> NonZeroU64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `NonZeroU64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127807,"byte_end":127846,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `NonZeroU64`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127851,"byte_end":127895,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":127900,"byte_end":127909,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128293,"byte_end":128296,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"pub fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the current span,\n with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the current span,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128161,"byte_end":128234,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ with the provided metadata and values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128239,"byte_end":128281,"line_start":108,"line_end":108,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128639,"byte_end":128647,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Attributes>::new_root","value":"pub fn new_root(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new span at the root of its own trace\n tree, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new span at the root of its own trace","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128499,"byte_end":128574,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ tree, with the provided metadata and values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128579,"byte_end":128627,"line_start":118,"line_end":118,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128988,"byte_end":128996,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Attributes>::child_of","value":"pub fn child_of(Id, &'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the specified\n parent span, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the specified","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128847,"byte_end":128916,"line_start":127,"line_end":127,"column_start":5,"column_end":74}},{"value":"/ parent span, with the provided metadata and values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128921,"byte_end":128976,"line_start":128,"line_end":128,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129314,"byte_end":129322,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Attributes>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the new span's metadata.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the new span's metadata.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129251,"byte_end":129302,"line_start":141,"line_end":141,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129507,"byte_end":129513,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"values","qualname":"<Attributes>::values","value":"pub fn values(&Self) -> &field::ValueSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `ValueSet` containing any values the new span\n was created with.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `ValueSet` containing any values the new span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129395,"byte_end":129469,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ was created with.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129474,"byte_end":129495,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129640,"byte_end":129647,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Attributes>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new span should be a root.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129578,"byte_end":129628,"line_start":152,"line_end":152,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130102,"byte_end":130115,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Attributes>::is_contextual","value":"pub fn is_contextual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new span's parent should be determined based on the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129720,"byte_end":129795,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ current context.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129800,"byte_end":129820,"line_start":158,"line_end":158,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129825,"byte_end":129828,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129833,"byte_end":129908,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ that span should be the new span's parent. Otherwise, if the current","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129913,"byte_end":129985,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ thread is _not_ inside a span, then the new span will be the root of its","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":129990,"byte_end":130066,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ own trace tree.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130071,"byte_end":130090,"line_start":163,"line_end":163,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130388,"byte_end":130394,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"parent","qualname":"<Attributes>::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new span's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new span's explicitly-specified parent, if there is one.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130191,"byte_end":130263,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130268,"byte_end":130271,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new span is a root or is a child of the current span),","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130276,"byte_end":130352,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ returns `None`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130357,"byte_end":130376,"line_start":171,"line_end":171,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130695,"byte_end":130701,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"record","qualname":"<Attributes>::record","value":"pub fn record(&Self, &mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this set of `Attributes` with the provided\n [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this set of `Attributes` with the provided","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130539,"byte_end":130611,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ [Visitor].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130616,"byte_end":130630,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130635,"byte_end":130638,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130643,"byte_end":130683,"line_start":182,"line_end":182,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130896,"byte_end":130904,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"contains","qualname":"<Attributes>::contains","value":"pub fn contains(&Self, &field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this set of `Attributes` contains a value for the\n given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this set of `Attributes` contains a value for the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130790,"byte_end":130861,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ given `Field`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130866,"byte_end":130884,"line_start":188,"line_end":188,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131069,"byte_end":131077,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Attributes>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set of `Attributes` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this set of `Attributes` contains _no_ values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":130991,"byte_end":131057,"line_start":193,"line_end":193,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131710,"byte_end":131716,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"fields","qualname":"<Attributes>::fields","value":"pub fn fields(&Self) -> &FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of all [fields] defined by this span's [`Metadata`].","sig":null,"attributes":[{"value":"/ Returns the set of all [fields] defined by this span's [`Metadata`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131137,"byte_end":131209,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131214,"byte_end":131217,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that the [`FieldSet`] returned by this method includes *all* the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131222,"byte_end":131295,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ fields declared by this span, not just those with values that are recorded","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131300,"byte_end":131378,"line_start":201,"line_end":201,"column_start":5,"column_end":83}},{"value":"/ as part of this set of `Attributes`. Other fields with values not present in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131383,"byte_end":131463,"line_start":202,"line_end":202,"column_start":5,"column_end":85}},{"value":"/ this `Attributes`' value set may [record] values later.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131468,"byte_end":131527,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131532,"byte_end":131535,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [fields]: crate::field","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131540,"byte_end":131566,"line_start":205,"line_end":205,"column_start":5,"column_end":31}},{"value":"/ [record]: Attributes::record()","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131571,"byte_end":131605,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ [`Metadata`]: crate::metadata::Metadata","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131610,"byte_end":131653,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/ [`FieldSet`]: crate::field::FieldSet","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131658,"byte_end":131698,"line_start":208,"line_end":208,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131894,"byte_end":131897,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<Record>::new","value":"pub fn new(&'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Record` from a `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Record` from a `ValueSet`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131834,"byte_end":131882,"line_start":217,"line_end":217,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132113,"byte_end":132119,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"record","qualname":"<Record>::record","value":"pub fn record(&Self, &mut dyn field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this `Record` with the provided [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this `Record` with the provided [Visitor].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131976,"byte_end":132048,"line_start":222,"line_end":222,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132053,"byte_end":132056,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132061,"byte_end":132101,"line_start":224,"line_end":224,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132295,"byte_end":132303,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"contains","qualname":"<Record>::contains","value":"pub fn contains(&Self, &field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Record` contains a value for the given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Record` contains a value for the given `Field`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132208,"byte_end":132283,"line_start":229,"line_end":229,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132457,"byte_end":132465,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Record>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Record` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Record` contains _no_ values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132390,"byte_end":132445,"line_start":234,"line_end":234,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132708,"byte_end":132711,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<Current>::new","value":"pub fn new(Id, &'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is a span\n with the given `metadata` and `metadata`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is a span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132571,"byte_end":132646,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ with the given `metadata` and `metadata`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132651,"byte_end":132696,"line_start":244,"line_end":244,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132968,"byte_end":132972,"line_start":253,"line_end":253,"column_start":12,"column_end":16},"name":"none","qualname":"<Current>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is *not*\n in a span.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is *not*","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132863,"byte_end":132937,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ in a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132942,"byte_end":132956,"line_start":252,"line_end":252,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133872,"byte_end":133880,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"is_known","qualname":"<Current>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Subscriber` that constructed this `Current` tracks a\n current span.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Subscriber` that constructed this `Current` tracks a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133278,"byte_end":133357,"line_start":267,"line_end":267,"column_start":5,"column_end":84}},{"value":"/ current span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133362,"byte_end":133379,"line_start":268,"line_end":268,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133384,"byte_end":133387,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If this returns `true` and [`id`], [`metadata`], or [`into_inner`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133392,"byte_end":133462,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ return `None`, that indicates that we are currently known to *not* be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133467,"byte_end":133540,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ inside a span. If this returns `false`, those methods will also return","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133545,"byte_end":133619,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ `None`, but in this case, that is because the subscriber does not keep","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133624,"byte_end":133698,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ track of the currently-entered span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133703,"byte_end":133743,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133748,"byte_end":133751,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`id`]: #method.id","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133756,"byte_end":133778,"line_start":276,"line_end":276,"column_start":5,"column_end":27}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133783,"byte_end":133817,"line_start":277,"line_end":277,"column_start":5,"column_end":39}},{"value":"/ [`into_inner`]: #method.into_inner","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133822,"byte_end":133860,"line_start":278,"line_end":278,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134091,"byte_end":134101,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Current>::into_inner","value":"pub fn into_inner(Self) -> Option<(Id, &'static Metadata)>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the span `Id` and `Metadata` of the current\n span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the span `Id` and `Metadata` of the current","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":133962,"byte_end":134037,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ span, if one exists and is known.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134042,"byte_end":134079,"line_start":284,"line_end":284,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134382,"byte_end":134384,"line_start":293,"line_end":293,"column_start":12,"column_end":14},"name":"id","qualname":"<Current>::id","value":"pub fn id(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Id` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Id` of the current span, if one exists and is known.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134301,"byte_end":134370,"line_start":292,"line_end":292,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134629,"byte_end":134637,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Current>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Metadata` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Metadata` of the current span, if one exists and is known.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134542,"byte_end":134617,"line_start":300,"line_end":300,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":668},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":711},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":716},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":724},{"krate":0,"index":733},{"krate":0,"index":748}],"decl_id":null,"docs":" Subscribers collect and record trace data.\n","sig":null,"attributes":[{"value":"/ Subscribers collect and record trace data.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":137869,"byte_end":137915,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":696},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141783,"byte_end":141793,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"Subscriber","qualname":"::subscriber::Subscriber","value":"Subscriber: 'static","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"decl_id":null,"docs":" Trait representing the functions required to collect trace data.","sig":null,"attributes":[{"value":"/ Trait representing the functions required to collect trace data.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138046,"byte_end":138114,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138115,"byte_end":138118,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Crates that provide implementations of methods for collecting or recording","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138119,"byte_end":138197,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ trace data should implement the `Subscriber` interface. This trait is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138198,"byte_end":138271,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ intended to represent fundamental primitives for collecting trace events and","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138272,"byte_end":138352,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ spans — other libraries may offer utility functions and types to make","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138353,"byte_end":138428,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ subscriber implementations more modular or improve the ergonomics of writing","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138429,"byte_end":138509,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ subscribers.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138510,"byte_end":138526,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138527,"byte_end":138530,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A subscriber is responsible for the following:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138531,"byte_end":138581,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ - Registering new spans as they are created, and providing them with span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138582,"byte_end":138659,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   IDs. Implicitly, this means the subscriber may determine the strategy for","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138660,"byte_end":138739,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   determining span equality.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138740,"byte_end":138772,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ - Recording the attachment of field values and follows-from annotations to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138773,"byte_end":138851,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   spans.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138852,"byte_end":138864,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ - Filtering spans and events, and determining when those filters must be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138865,"byte_end":138941,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/   invalidated.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138942,"byte_end":138960,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ - Observing spans as they are entered, exited, and closed, and events as","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":138961,"byte_end":139037,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/   they occur.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139038,"byte_end":139055,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139056,"byte_end":139059,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When a span is entered or exited, the subscriber is provided only with the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139060,"byte_end":139138,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ [ID] with which it tagged that span when it was created. This means","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139139,"byte_end":139210,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ that it is up to the subscriber to determine whether and how span _data_ —","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139211,"byte_end":139291,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the fields and metadata describing the span — should be stored. The","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139292,"byte_end":139365,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ [`new_span`] function is called when a new span is created, and at that","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139366,"byte_end":139441,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ point, the subscriber _may_ choose to store the associated data if it will","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139442,"byte_end":139520,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ be referenced again. However, if the data has already been recorded and will","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139521,"byte_end":139601,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ not be needed by the implementations of `enter` and `exit`, the subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139602,"byte_end":139680,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ may freely discard that data without allocating space to store it.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139681,"byte_end":139751,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139752,"byte_end":139755,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Overriding default impls","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139756,"byte_end":139787,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139788,"byte_end":139791,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Some trait methods on `Subscriber` have default implementations, either in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139792,"byte_end":139870,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ order to reduce the surface area of implementing `Subscriber`, or for","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139871,"byte_end":139944,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ backward-compatibility reasons. However, many subscribers will likely want","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":139945,"byte_end":140023,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ to override these default implementations.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140024,"byte_end":140070,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140071,"byte_end":140074,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The following methods are likely of interest:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140075,"byte_end":140124,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140125,"byte_end":140128,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - [`register_callsite`] is called once for each callsite from which a span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140129,"byte_end":140207,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/   event may originate, and returns an [`Interest`] value describing whether or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140208,"byte_end":140290,"line_start":50,"line_end":50,"column_start":1,"column_end":83}},{"value":"/   not the subscriber wishes to see events or spans from that callsite. By","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140291,"byte_end":140368,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/   default, it calls [`enabled`], and returns `Interest::always()` if","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140369,"byte_end":140441,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/   `enabled` returns true, or `Interest::never()` if enabled returns false.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140442,"byte_end":140520,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/   However, if the subscriber's interest can change dynamically at runtime,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140521,"byte_end":140599,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/   it may want to override this function to return `Interest::sometimes()`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140600,"byte_end":140678,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/   Additionally, subscribers which wish to perform a behaviour once for each","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140679,"byte_end":140758,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/   callsite, such as allocating storage for data related to that callsite,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140759,"byte_end":140836,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/   can perform it in `register_callsite`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140837,"byte_end":140881,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/ - [`clone_span`] is called every time a span ID is cloned, and [`try_close`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140882,"byte_end":140962,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/   is called when a span ID is dropped. By default, these functions do","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":140963,"byte_end":141036,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/   nothing. However, they can be used to implement reference counting for","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141037,"byte_end":141113,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/   spans, allowing subscribers to free storage for span data and to determine","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141114,"byte_end":141194,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/   when a span has _closed_ permanently (rather than being exited).","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141195,"byte_end":141265,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/   Subscribers which store per-span data or which need to track span closures","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141266,"byte_end":141346,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/   should override these functions together.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141347,"byte_end":141394,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141395,"byte_end":141398,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141399,"byte_end":141431,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ [`new_span`]: trait.Subscriber.html#method.new_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141432,"byte_end":141487,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ [`register_callsite`]: trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141488,"byte_end":141561,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141562,"byte_end":141600,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/ [`enabled`]: trait.Subscriber.html#method.enabled","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141601,"byte_end":141654,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [`clone_span`]: trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141655,"byte_end":141714,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141715,"byte_end":141772,"line_start":73,"line_end":73,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145829,"byte_end":145846,"line_start":144,"line_end":144,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"::subscriber::Subscriber::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141890,"byte_end":141965,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":141970,"byte_end":142040,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142045,"byte_end":142048,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ By default, this function assumes that the subscriber's [filter]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142053,"byte_end":142121,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ represents an unchanging view of its interest in the callsite. However,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142126,"byte_end":142201,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ if this is not the case, subscribers may override this function to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142206,"byte_end":142276,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ indicate different interests, or to implement behaviour that should run","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142281,"byte_end":142356,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ once for every callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142361,"byte_end":142389,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142394,"byte_end":142397,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to be called at least once per callsite on","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142402,"byte_end":142476,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ every active subscriber. The subscriber may store the keys to fields it","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142481,"byte_end":142556,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ cares about in order to reduce the cost of accessing fields by name,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142561,"byte_end":142633,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ preallocate storage for that callsite, or perform any other actions it","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142638,"byte_end":142712,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ wishes to perform once for each callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142717,"byte_end":142762,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142767,"byte_end":142770,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The subscriber should then return an [`Interest`], indicating","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142775,"byte_end":142840,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ whether it is interested in being notified about that callsite in the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142845,"byte_end":142918,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/ future. This may be `Always` indicating that the subscriber always","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142923,"byte_end":142993,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ wishes to be notified about the callsite, and its filter need not be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":142998,"byte_end":143070,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ re-evaluated; `Sometimes`, indicating that the subscriber may sometimes","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143075,"byte_end":143150,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ care about the callsite but not always (such as when sampling), or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143155,"byte_end":143225,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ `Never`, indicating that the subscriber never wishes to be notified about","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143230,"byte_end":143307,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ that callsite. If all active subscribers return `Never`, a callsite will","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143312,"byte_end":143388,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ never be enabled unless a new subscriber expresses interest in it.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143393,"byte_end":143463,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143468,"byte_end":143471,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s which require their filters to be run every time an event","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143476,"byte_end":143551,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ occurs or a span is entered/exited should return `Interest::sometimes`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143556,"byte_end":143631,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ If a subscriber returns `Interest::sometimes`, then its [`enabled`] method","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143636,"byte_end":143714,"line_start":104,"line_end":104,"column_start":5,"column_end":83}},{"value":"/ will be called every time an event or span is created from that callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143719,"byte_end":143796,"line_start":105,"line_end":105,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143801,"byte_end":143804,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ For example, suppose a sampling subscriber is implemented by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143809,"byte_end":143873,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ incrementing a counter every time `enabled` is called and only returning","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143878,"byte_end":143954,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ `true` when the counter is divisible by a specified sampling rate. If","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":143959,"byte_end":144032,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ that subscriber returns `Interest::always` from `register_callsite`, then","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144037,"byte_end":144114,"line_start":110,"line_end":110,"column_start":5,"column_end":82}},{"value":"/ the filter will not be re-evaluated once it has been applied to a given","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144119,"byte_end":144194,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ set of metadata. Thus, the counter will not be incremented, and the span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144199,"byte_end":144275,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ or event that corresponds to the metadata will never be `enabled`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144280,"byte_end":144350,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144355,"byte_end":144358,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s that need to change their filters occasionally should call","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144363,"byte_end":144439,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/ [`rebuild_interest_cache`] to re-evaluate `register_callsite` for all","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144444,"byte_end":144517,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ callsites.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144522,"byte_end":144536,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144541,"byte_end":144544,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Similarly, if a `Subscriber` has a filtering strategy that can be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144549,"byte_end":144618,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ changed dynamically at runtime, it would need to re-evaluate that filter","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144623,"byte_end":144699,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ if the cached results have changed.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144704,"byte_end":144743,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144748,"byte_end":144751,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ A subscriber which manages fanout to multiple other subscribers","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144756,"byte_end":144823,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ should proxy this decision to all of its child subscribers,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144828,"byte_end":144891,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ returning `Interest::never` only if _all_ such children return","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144896,"byte_end":144962,"line_start":125,"line_end":125,"column_start":5,"column_end":71}},{"value":"/ `Interest::never`. If the set of subscribers to which spans are","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":144967,"byte_end":145034,"line_start":126,"line_end":126,"column_start":5,"column_end":72}},{"value":"/ broadcast may change dynamically, the subscriber should also never","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145039,"byte_end":145109,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ return `Interest::Never`, as a new subscriber may be added that _is_","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145114,"byte_end":145186,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ interested.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145191,"byte_end":145206,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145211,"byte_end":145214,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145219,"byte_end":145230,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ This function may be called again when a new subscriber is created or","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145235,"byte_end":145308,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/ when the registry is invalidated.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145313,"byte_end":145350,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145355,"byte_end":145358,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If a subscriber returns `Interest::never` for a particular callsite, it","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145363,"byte_end":145438,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ _may_ still see spans and events originating from that callsite, if","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145443,"byte_end":145514,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ another subscriber expressed interest in it.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145519,"byte_end":145567,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145572,"byte_end":145575,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [filter]: #method.enabled","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145580,"byte_end":145609,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145614,"byte_end":145662,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145667,"byte_end":145705,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`enabled`]: #method.enabled","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145710,"byte_end":145742,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/ [`rebuild_interest_cache`]: ../callsite/fn.rebuild_interest_cache.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":145747,"byte_end":145821,"line_start":143,"line_end":143,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147220,"byte_end":147227,"line_start":172,"line_end":172,"column_start":8,"column_end":15},"name":"enabled","qualname":"::subscriber::Subscriber::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Returns true if a span or event with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span or event with the specified [metadata] would be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146041,"byte_end":146115,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ recorded.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146120,"byte_end":146133,"line_start":153,"line_end":153,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146138,"byte_end":146141,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ By default, it is assumed that this filter needs only be evaluated once","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146146,"byte_end":146221,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ for each callsite, so it is called by [`register_callsite`] when each","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146226,"byte_end":146299,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ callsite is registered. The result is used to determine if the subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146304,"byte_end":146381,"line_start":157,"line_end":157,"column_start":5,"column_end":82}},{"value":"/ is always [interested] or never interested in that callsite. This is intended","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146386,"byte_end":146467,"line_start":158,"line_end":158,"column_start":5,"column_end":86}},{"value":"/ primarily as an optimization, so that expensive filters (such as those","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146472,"byte_end":146546,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ involving string search, et cetera) need not be re-evaluated.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146551,"byte_end":146616,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146621,"byte_end":146624,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ However, if the subscriber's interest in a particular span or event may","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146629,"byte_end":146704,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ change, or depends on contexts only determined dynamically at runtime,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146709,"byte_end":146783,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ then the `register_callsite` method should be overridden to return","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146788,"byte_end":146858,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ [`Interest::sometimes`]. In that case, this function will be called every","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146863,"byte_end":146940,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ time that span or event occurs.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146945,"byte_end":146980,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146985,"byte_end":146988,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":146993,"byte_end":147041,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ [interested]: struct.Interest.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147046,"byte_end":147084,"line_start":169,"line_end":169,"column_start":5,"column_end":43}},{"value":"/ [`Interest::sometimes`]: struct.Interest.html#method.sometimes","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147089,"byte_end":147155,"line_start":170,"line_end":170,"column_start":5,"column_end":71}},{"value":"/ [`register_callsite`]: #method.register_callsite","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147160,"byte_end":147212,"line_start":171,"line_end":171,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148677,"byte_end":148691,"line_start":197,"line_end":197,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"::subscriber::Subscriber::max_level_hint","value":"pub fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Returns the highest [verbosity level][level] that this `Subscriber` will\n enable, or `None`, if the subscriber does not implement level-based\n filtering or chooses not to implement this method.","sig":null,"attributes":[{"value":"/ Returns the highest [verbosity level][level] that this `Subscriber` will","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147274,"byte_end":147350,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ enable, or `None`, if the subscriber does not implement level-based","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147355,"byte_end":147426,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ filtering or chooses not to implement this method.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147431,"byte_end":147485,"line_start":176,"line_end":176,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147490,"byte_end":147493,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ If this method returns a [`Level`][level], it will be used as a hint to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147498,"byte_end":147573,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ determine the most verbose level that will be enabled. This will allow","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147578,"byte_end":147652,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ spans and events which are more verbose than that level to be skipped","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147657,"byte_end":147730,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ more efficiently. Subscribers which perform filtering are strongly","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147735,"byte_end":147805,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ encouraged to provide an implementation of this method.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147810,"byte_end":147869,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147874,"byte_end":147877,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the maximum level the subscriber will enable can change over the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147882,"byte_end":147953,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ course of its lifetime, it is free to return a different value from","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":147958,"byte_end":148029,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ multiple invocations of this method. However, note that changes in the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148034,"byte_end":148108,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ maximum level will **only** be reflected after the callsite [`Interest`]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148113,"byte_end":148189,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ cache is rebuilt, by calling the [`callsite::rebuild_interest_cache`][rebuild]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148194,"byte_end":148276,"line_start":188,"line_end":188,"column_start":5,"column_end":87}},{"value":"/ function. Therefore, if the subscriber will change the value returned by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148281,"byte_end":148357,"line_start":189,"line_end":189,"column_start":5,"column_end":81}},{"value":"/ this method, it is responsible for ensuring that","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148362,"byte_end":148414,"line_start":190,"line_end":190,"column_start":5,"column_end":57}},{"value":"/ [`rebuild_interest_cache`][rebuild] is called after the value of the max","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148419,"byte_end":148495,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ level changes.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148500,"byte_end":148518,"line_start":192,"line_end":192,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148523,"byte_end":148526,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [level]: ../struct.Level.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148531,"byte_end":148564,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148569,"byte_end":148607,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/ [rebuild]: ../callsite/fn.rebuild_interest_cache.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148612,"byte_end":148669,"line_start":196,"line_end":196,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150134,"byte_end":150142,"line_start":225,"line_end":225,"column_start":8,"column_end":16},"name":"new_span","qualname":"::subscriber::Subscriber::new_span","value":"pub fn new_span(&Self, &span::Attributes) -> span::Id","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Visit the construction of a new span, returning a new [span ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Visit the construction of a new span, returning a new [span ID] for the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148748,"byte_end":148823,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ span being constructed.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148828,"byte_end":148855,"line_start":202,"line_end":202,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148860,"byte_end":148863,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The provided [`Attributes`] contains any field values that were provided","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148868,"byte_end":148944,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ when the span was created. The subscriber may pass a [visitor] to the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":148949,"byte_end":149022,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/ `Attributes`' [`record` method] to record these values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149027,"byte_end":149086,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149091,"byte_end":149094,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ IDs are used to uniquely identify spans and events within the context of a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149099,"byte_end":149177,"line_start":208,"line_end":208,"column_start":5,"column_end":83}},{"value":"/ subscriber, so span equality will be based on the returned ID. Thus, if","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149182,"byte_end":149257,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the subscriber wishes for all spans with the same metadata to be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149262,"byte_end":149330,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ considered equal, it should return the same ID every time it is given a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149335,"byte_end":149410,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ particular set of metadata. Similarly, if it wishes for two separate","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149415,"byte_end":149487,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ instances of a span with the same metadata to *not* be equal, it should","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149492,"byte_end":149567,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ return a distinct ID every time this function is called, regardless of","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149572,"byte_end":149646,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ the metadata.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149651,"byte_end":149668,"line_start":215,"line_end":215,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149673,"byte_end":149676,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that the subscriber is free to assign span IDs based on whatever","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149681,"byte_end":149754,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ scheme it sees fit. Any guarantees about uniqueness, ordering, or ID","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149759,"byte_end":149831,"line_start":218,"line_end":218,"column_start":5,"column_end":77}},{"value":"/ reuse are left up to the subscriber implementation to determine.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149836,"byte_end":149904,"line_start":219,"line_end":219,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149909,"byte_end":149912,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149917,"byte_end":149954,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/ [`Attributes`]: ../span/struct.Attributes.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":149959,"byte_end":150009,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150014,"byte_end":150054,"line_start":223,"line_end":223,"column_start":5,"column_end":45}},{"value":"/ [`record` method]: ../span/struct.Attributes.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150059,"byte_end":150126,"line_start":224,"line_end":224,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151757,"byte_end":151763,"line_start":265,"line_end":265,"column_start":8,"column_end":14},"name":"record","qualname":"::subscriber::Subscriber::record","value":"pub fn record(&Self, &span::Id, &span::Record)","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150278,"byte_end":150315,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150320,"byte_end":150323,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when value is recorded on a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150328,"byte_end":150393,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ Recording multiple values for the same field is possible,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150398,"byte_end":150459,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/ but the actual behaviour is defined by the subscriber implementation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150464,"byte_end":150537,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150542,"byte_end":150545,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Keep in mind that a span might not provide a value","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150550,"byte_end":150604,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/ for each field it declares.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150609,"byte_end":150640,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150645,"byte_end":150648,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The subscriber is expected to provide a [visitor] to the `Record`'s","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150653,"byte_end":150724,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ [`record` method] in order to record the added values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150729,"byte_end":150787,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150792,"byte_end":150795,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150800,"byte_end":150813,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/  \"foo = 3\" will be recorded when [`record`] is called on the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150818,"byte_end":150882,"line_start":242,"line_end":242,"column_start":5,"column_end":69}},{"value":"/ `Attributes` passed to `new_span`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150887,"byte_end":150925,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ Since values are not provided for the `bar` and `baz` fields,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":150930,"byte_end":150995,"line_start":244,"line_end":244,"column_start":5,"column_end":70}},{"value":"/ the span's `Metadata` will indicate that it _has_ those fields,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151000,"byte_end":151067,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/ but values for them won't be recorded at this time.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151072,"byte_end":151127,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151132,"byte_end":151135,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151140,"byte_end":151158,"line_start":248,"line_end":248,"column_start":5,"column_end":23}},{"value":"/ # use tracing::span;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151163,"byte_end":151187,"line_start":249,"line_end":249,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151192,"byte_end":151195,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let mut span = span!(\"my_span\", foo = 3, bar, baz);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151200,"byte_end":151255,"line_start":251,"line_end":251,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151260,"byte_end":151263,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151268,"byte_end":151326,"line_start":253,"line_end":253,"column_start":5,"column_end":63}},{"value":"/ // containing \"bar = false\"","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151331,"byte_end":151362,"line_start":254,"line_end":254,"column_start":5,"column_end":36}},{"value":"/ span.record(\"bar\", &false);","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151367,"byte_end":151398,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151403,"byte_end":151406,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151411,"byte_end":151469,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ // containing \"baz = \"a string\"\"","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151474,"byte_end":151510,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/ span.record(\"baz\", &\"a string\");","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151515,"byte_end":151551,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151556,"byte_end":151563,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151568,"byte_end":151571,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151576,"byte_end":151616,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ [`record`]: ../span/struct.Attributes.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151621,"byte_end":151681,"line_start":263,"line_end":263,"column_start":5,"column_end":65}},{"value":"/ [`record` method]: ../span/struct.Record.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151686,"byte_end":151749,"line_start":264,"line_end":264,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152997,"byte_end":153016,"line_start":285,"line_end":285,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"::subscriber::Subscriber::record_follows_from","value":"pub fn record_follows_from(&Self, &span::Id, &span::Id)","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151821,"byte_end":151889,"line_start":267,"line_end":267,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151894,"byte_end":151908,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151913,"byte_end":151916,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":151921,"byte_end":151997,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152002,"byte_end":152076,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152081,"byte_end":152152,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152157,"byte_end":152231,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152236,"byte_end":152302,"line_start":274,"line_end":274,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152307,"byte_end":152381,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152386,"byte_end":152458,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152463,"byte_end":152532,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152537,"byte_end":152540,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ If the subscriber has spans corresponding to the given IDs, it should","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152545,"byte_end":152618,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ record this relationship in whatever way it deems necessary. Otherwise,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152623,"byte_end":152698,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ if one or both of the given span IDs do not correspond to spans that the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152703,"byte_end":152779,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ subscriber knows about, or if a cyclical relationship would be created","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152784,"byte_end":152858,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/ (i.e., some span _a_ which proceeds some other span _b_ may not also","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152863,"byte_end":152935,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ follow from _b_), it may silently do nothing.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":152940,"byte_end":152989,"line_start":284,"line_end":284,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153987,"byte_end":153992,"line_start":305,"line_end":305,"column_start":8,"column_end":13},"name":"event","qualname":"::subscriber::Subscriber::event","value":"pub fn event(&Self, &Event)","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153067,"byte_end":153110,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153115,"byte_end":153118,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when an Event is constructed by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153123,"byte_end":153186,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/ the `Event`'s [`dispatch` method]. For example, this happens internally","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153191,"byte_end":153266,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ when an event macro from `tracing` is called.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153271,"byte_end":153320,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153325,"byte_end":153328,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The key difference between this method and `record` is that `record` is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153333,"byte_end":153408,"line_start":293,"line_end":293,"column_start":5,"column_end":80}},{"value":"/ called when a value is recorded for a field defined by a span,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153413,"byte_end":153479,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/ while `event` is called when a new event occurs.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153484,"byte_end":153536,"line_start":295,"line_end":295,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153541,"byte_end":153544,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ The provided `Event` struct contains any field values attached to the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153549,"byte_end":153622,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/ event. The subscriber may pass a [visitor] to the `Event`'s","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153627,"byte_end":153690,"line_start":298,"line_end":298,"column_start":5,"column_end":68}},{"value":"/ [`record` method] to record these values.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153695,"byte_end":153740,"line_start":299,"line_end":299,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153745,"byte_end":153748,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153753,"byte_end":153794,"line_start":301,"line_end":301,"column_start":5,"column_end":46}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153799,"byte_end":153839,"line_start":302,"line_end":302,"column_start":5,"column_end":45}},{"value":"/ [`record` method]: ../event/struct.Event.html#method.record","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153844,"byte_end":153907,"line_start":303,"line_end":303,"column_start":5,"column_end":68}},{"value":"/ [`dispatch` method]: ../event/struct.Event.html#method.dispatch","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":153912,"byte_end":153979,"line_start":304,"line_end":304,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154408,"byte_end":154413,"line_start":315,"line_end":315,"column_start":8,"column_end":13},"name":"enter","qualname":"::subscriber::Subscriber::enter","value":"pub fn enter(&Self, &span::Id)","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Records that a span has been entered.","sig":null,"attributes":[{"value":"/ Records that a span has been entered.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154025,"byte_end":154066,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154071,"byte_end":154074,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ When entering a span, this method is called to notify the subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154079,"byte_end":154151,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ that the span has been entered. The subscriber is provided with the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154156,"byte_end":154227,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ [span ID] of the entered span, and should update any internal state","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154232,"byte_end":154303,"line_start":311,"line_end":311,"column_start":5,"column_end":76}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154308,"byte_end":154350,"line_start":312,"line_end":312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154355,"byte_end":154358,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154363,"byte_end":154400,"line_start":314,"line_end":314,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154907,"byte_end":154911,"line_start":327,"line_end":327,"column_start":8,"column_end":12},"name":"exit","qualname":"::subscriber::Subscriber::exit","value":"pub fn exit(&Self, &span::Id)","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154444,"byte_end":154484,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154489,"byte_end":154492,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ When exiting a span, this method is called to notify the subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154497,"byte_end":154568,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/ that the span has been exited. The subscriber is provided with the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154573,"byte_end":154643,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/ [span ID] of the exited span, and should update any internal state","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154648,"byte_end":154718,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154723,"byte_end":154765,"line_start":322,"line_end":322,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154770,"byte_end":154773,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Exiting a span does not imply that the span will not be re-entered.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154778,"byte_end":154849,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154854,"byte_end":154857,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154862,"byte_end":154899,"line_start":326,"line_end":326,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156106,"byte_end":156116,"line_start":349,"line_end":349,"column_start":8,"column_end":18},"name":"clone_span","qualname":"::subscriber::Subscriber::clone_span","value":"pub fn clone_span(&Self, &span::Id) -> span::Id","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":154942,"byte_end":155003,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155008,"byte_end":155011,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155016,"byte_end":155089,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155094,"byte_end":155148,"line_start":332,"line_end":332,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155153,"byte_end":155156,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Note that the default implementation of this function this is just the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155161,"byte_end":155235,"line_start":334,"line_end":334,"column_start":5,"column_end":79}},{"value":"/ identity function, passing through the identifier. However, it can be","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155240,"byte_end":155313,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ used in conjunction with [`try_close`] to track the number of handles","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155318,"byte_end":155391,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/ capable of `enter`ing a span. When all the handles have been dropped","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155396,"byte_end":155468,"line_start":337,"line_end":337,"column_start":5,"column_end":77}},{"value":"/ (i.e., `try_close` has been called one more time than `clone_span` for a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155473,"byte_end":155549,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ given ID), the subscriber may assume that the span will not be entered","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155554,"byte_end":155628,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/ again. It is then free to deallocate storage for data associated with","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155633,"byte_end":155706,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ that span, write data from that span to IO, and so on.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155711,"byte_end":155769,"line_start":341,"line_end":341,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155774,"byte_end":155777,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ For more unsafe situations, however, if `id` is itself a pointer of some","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155782,"byte_end":155858,"line_start":343,"line_end":343,"column_start":5,"column_end":81}},{"value":"/ kind this can be used as a hook to \"clone\" the pointer, depending on","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155863,"byte_end":155935,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ what that means for the specified pointer.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155940,"byte_end":155986,"line_start":345,"line_end":345,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155991,"byte_end":155994,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":155999,"byte_end":156036,"line_start":347,"line_end":347,"column_start":5,"column_end":42}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156041,"byte_end":156098,"line_start":348,"line_end":348,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156640,"byte_end":156649,"line_start":363,"line_end":363,"column_start":8,"column_end":17},"name":"drop_span","qualname":"::subscriber::Subscriber::drop_span","value":"pub fn drop_span(&Self, span::Id)","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" **This method is deprecated.**","sig":null,"attributes":[{"value":"/ **This method is deprecated.**","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156183,"byte_end":156217,"line_start":353,"line_end":353,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156222,"byte_end":156225,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Using `drop_span` may result in subscribers composed using","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156230,"byte_end":156292,"line_start":355,"line_end":355,"column_start":5,"column_end":67}},{"value":"/ `tracing-subscriber` crate's `Layer` trait from observing close events.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156297,"byte_end":156372,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ Use [`try_close`] instead.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156377,"byte_end":156407,"line_start":357,"line_end":357,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156412,"byte_end":156415,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this function does nothing.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156420,"byte_end":156481,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156486,"byte_end":156489,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156494,"byte_end":156551,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Subscriber::try_close` instead\")","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156556,"byte_end":156632,"line_start":362,"line_end":362,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158842,"byte_end":158851,"line_start":401,"line_end":401,"column_start":8,"column_end":17},"name":"try_close","qualname":"::subscriber::Subscriber::try_close","value":"pub fn try_close(&Self, span::Id) -> bool","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped, and returns\n `true` if there are now 0 IDs that refer to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped, and returns","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156680,"byte_end":156754,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/ `true` if there are now 0 IDs that refer to that span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156759,"byte_end":156817,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156822,"byte_end":156825,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Higher-level libraries providing functionality for composing multiple","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156830,"byte_end":156903,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ subscriber implementations may use this return value to notify any","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156908,"byte_end":156978,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ \"layered\" subscribers that this subscriber considers the span closed.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":156983,"byte_end":157056,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157061,"byte_end":157064,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method calls the subscriber's","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157069,"byte_end":157137,"line_start":372,"line_end":372,"column_start":5,"column_end":73}},{"value":"/ [`drop_span`] method and returns `false`. This means that, unless the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157142,"byte_end":157215,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ subscriber overrides the default implementation, close notifications","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157220,"byte_end":157292,"line_start":374,"line_end":374,"column_start":5,"column_end":77}},{"value":"/ will never be sent to any layered subscribers. In general, if the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157297,"byte_end":157366,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ subscriber tracks reference counts, this method should be implemented,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157371,"byte_end":157445,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ rather than `drop_span`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157450,"byte_end":157478,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157483,"byte_end":157486,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157491,"byte_end":157564,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157569,"byte_end":157623,"line_start":380,"line_end":380,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157628,"byte_end":157631,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ It's guaranteed that if this function has been called once more than the","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157636,"byte_end":157712,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ number of times `clone_span` was called with the same `id`, then no more","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157717,"byte_end":157793,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ handles that can enter the span with that `id` exist. This means that it","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157798,"byte_end":157874,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ can be used in conjunction with [`clone_span`] to track the number of","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157879,"byte_end":157952,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ handles capable of `enter`ing a span. When all the handles have been","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":157957,"byte_end":158029,"line_start":386,"line_end":386,"column_start":5,"column_end":77}},{"value":"/ dropped (i.e., `try_close` has been called one more time than","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158034,"byte_end":158099,"line_start":387,"line_end":387,"column_start":5,"column_end":70}},{"value":"/ `clone_span` for a given ID), the subscriber may assume that the span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158104,"byte_end":158177,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/ will not be entered again, and should return `true`. It is then free to","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158182,"byte_end":158257,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ deallocate storage for data associated with that span, write data from","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158262,"byte_end":158336,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/ that span to IO, and so on.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158341,"byte_end":158372,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158377,"byte_end":158380,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ **Note**: since this function is called when spans are dropped,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158385,"byte_end":158452,"line_start":393,"line_end":393,"column_start":5,"column_end":72}},{"value":"/ implementations should ensure that they are unwind-safe. Panicking from","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158457,"byte_end":158532,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ inside of a `try_close` function may cause a double panic, if the span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158537,"byte_end":158611,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/ was dropped due to a thread unwinding.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158616,"byte_end":158658,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158663,"byte_end":158666,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158671,"byte_end":158708,"line_start":398,"line_end":398,"column_start":5,"column_end":42}},{"value":"/ [`clone_span`]: trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158713,"byte_end":158772,"line_start":399,"line_end":399,"column_start":5,"column_end":64}},{"value":"/ [`drop_span`]: trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158777,"byte_end":158834,"line_start":400,"line_end":400,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159679,"byte_end":159691,"line_start":420,"line_end":420,"column_start":8,"column_end":20},"name":"current_span","qualname":"::subscriber::Subscriber::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":158965,"byte_end":159040,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159045,"byte_end":159048,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ If subscribers track a current span, they should override this function","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159053,"byte_end":159128,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ to return [`Current::new`] if the thread from which this method is","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159133,"byte_end":159203,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ called is inside a span, or [`Current::none`] if the thread is not","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159208,"byte_end":159278,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ inside a span.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159283,"byte_end":159301,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159306,"byte_end":159309,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ By default, this returns a value indicating that the subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159314,"byte_end":159381,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/ does **not** track what span is current. If the subscriber does not","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159386,"byte_end":159457,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ implement a current span, it should not override this method.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159462,"byte_end":159527,"line_start":416,"line_end":416,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159532,"byte_end":159535,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ [`Current::new`]: ../span/struct.Current.html#tymethod.new","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159540,"byte_end":159602,"line_start":418,"line_end":418,"column_start":5,"column_end":67}},{"value":"/ [`Current::none`]: ../span/struct.Current.html#tymethod.none","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159607,"byte_end":159671,"line_start":419,"line_end":419,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161211,"byte_end":161223,"line_start":451,"line_end":451,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"::subscriber::Subscriber::downcast_raw","value":"pub unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" If `self` is the same type as the provided `TypeId`, returns an untyped\n `*const` pointer to that type. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"/ If `self` is the same type as the provided `TypeId`, returns an untyped","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159843,"byte_end":159918,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ `*const` pointer to that type. Otherwise, returns `None`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159923,"byte_end":159984,"line_start":427,"line_end":427,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159989,"byte_end":159992,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If you wish to downcast a `Subscriber`, it is strongly advised to use","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":159997,"byte_end":160070,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ the safe API provided by [`downcast_ref`] instead.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160075,"byte_end":160129,"line_start":430,"line_end":430,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160134,"byte_end":160137,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ This API is required for `downcast_raw` to be a trait method; a method","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160142,"byte_end":160216,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ signature like [`downcast_ref`] (with a generic type parameter) is not","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160221,"byte_end":160295,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ object-safe, and thus cannot be a trait method for `Subscriber`. This","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160300,"byte_end":160373,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ means that if we only exposed `downcast_ref`, `Subscriber`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160378,"byte_end":160440,"line_start":435,"line_end":435,"column_start":5,"column_end":67}},{"value":"/ implementations could not override the downcasting behavior","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160445,"byte_end":160508,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160513,"byte_end":160516,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This method may be overridden by \"fan out\" or \"chained\" subscriber","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160521,"byte_end":160591,"line_start":438,"line_end":438,"column_start":5,"column_end":75}},{"value":"/ implementations which consist of multiple composed types. Such","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160596,"byte_end":160662,"line_start":439,"line_end":439,"column_start":5,"column_end":71}},{"value":"/ subscribers might allow `downcast_raw` by returning references to those","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160667,"byte_end":160742,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ component if they contain components with the given `TypeId`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160747,"byte_end":160812,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160817,"byte_end":160820,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160825,"byte_end":160837,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160842,"byte_end":160845,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The [`downcast_ref`] method expects that the pointer returned by","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160850,"byte_end":160918,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/ `downcast_raw` is non-null and points to a valid instance of the type","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":160923,"byte_end":160996,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ with the provided `TypeId`. Failure to ensure this will result in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161001,"byte_end":161070,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ undefined behaviour, so implementing `downcast_raw` is unsafe.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161075,"byte_end":161141,"line_start":448,"line_end":448,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161146,"byte_end":161149,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`downcast_ref`]: #method.downcast_ref","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161154,"byte_end":161196,"line_start":450,"line_end":450,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161512,"byte_end":161514,"line_start":462,"line_end":462,"column_start":12,"column_end":14},"name":"is","qualname":"<dyn Subscriber>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Subscriber` is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Subscriber` is the same type as `T`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161436,"byte_end":161500,"line_start":461,"line_end":461,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161712,"byte_end":161724,"line_start":468,"line_end":468,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<dyn Subscriber>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this `Subscriber` value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this `Subscriber` value if it is of type `T`,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161594,"byte_end":161669,"line_start":466,"line_end":466,"column_start":5,"column_end":80}},{"value":"/ or `None` if it isn't.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161674,"byte_end":161700,"line_start":467,"line_end":467,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1216},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162370,"byte_end":162378,"line_start":488,"line_end":488,"column_start":12,"column_end":20},"name":"Interest","qualname":"::subscriber::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates a [`Subscriber`]'s interest in a particular callsite.","sig":null,"attributes":[{"value":"/ Indicates a [`Subscriber`]'s interest in a particular callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":161982,"byte_end":162049,"line_start":480,"line_end":480,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162050,"byte_end":162053,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s return an `Interest` from their [`register_callsite`] methods","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162054,"byte_end":162133,"line_start":482,"line_end":482,"column_start":1,"column_end":80}},{"value":"/ in order to determine whether that span should be enabled or disabled.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162134,"byte_end":162208,"line_start":483,"line_end":483,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162209,"byte_end":162212,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162213,"byte_end":162257,"line_start":485,"line_end":485,"column_start":1,"column_end":45}},{"value":"/ [`register_callsite`]: ../trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162258,"byte_end":162334,"line_start":486,"line_end":486,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162857,"byte_end":162862,"line_start":504,"line_end":504,"column_start":12,"column_end":17},"name":"never","qualname":"<Interest>::never","value":"pub fn never() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating that the subscriber is never interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating that the subscriber is never interested","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162550,"byte_end":162626,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ in being notified about a callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162631,"byte_end":162670,"line_start":499,"line_end":499,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162675,"byte_end":162678,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `never()` interested in a callsite, it will","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162683,"byte_end":162760,"line_start":501,"line_end":501,"column_start":5,"column_end":82}},{"value":"/ be completely disabled unless a new subscriber becomes active.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162765,"byte_end":162831,"line_start":502,"line_end":502,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162836,"byte_end":162845,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163391,"byte_end":163400,"line_start":516,"line_end":516,"column_start":12,"column_end":21},"name":"sometimes","qualname":"<Interest>::sometimes","value":"pub fn sometimes() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is sometimes interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is sometimes interested","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162924,"byte_end":162999,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ in being notified about a callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163004,"byte_end":163043,"line_start":509,"line_end":509,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163048,"byte_end":163051,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `sometimes` or `never` interested in a","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163056,"byte_end":163128,"line_start":511,"line_end":511,"column_start":5,"column_end":77}},{"value":"/ callsite, the currently active subscriber will be asked to filter that","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163133,"byte_end":163207,"line_start":512,"line_end":512,"column_start":5,"column_end":79}},{"value":"/ callsite every time it creates a span. This will be the case until a new","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163212,"byte_end":163288,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/ subscriber expresses that it is `always` interested in the callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163293,"byte_end":163365,"line_start":514,"line_end":514,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163370,"byte_end":163379,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163756,"byte_end":163762,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"always","qualname":"<Interest>::always","value":"pub fn always() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is always interested in\n being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is always interested in","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163466,"byte_end":163541,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ being notified about a callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163546,"byte_end":163582,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163587,"byte_end":163590,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ If any subscriber expresses that it is `always()` interested in a given","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163595,"byte_end":163670,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ callsite, then the callsite will always be enabled.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163675,"byte_end":163730,"line_start":524,"line_end":524,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163735,"byte_end":163744,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163954,"byte_end":163962,"line_start":533,"line_end":533,"column_start":12,"column_end":20},"name":"is_never","qualname":"<Interest>::is_never","value":"pub fn is_never(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is never interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is never interested in being notified","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163825,"byte_end":163899,"line_start":530,"line_end":530,"column_start":5,"column_end":79}},{"value":"/ about this callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163904,"byte_end":163928,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":163933,"byte_end":163942,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":164170,"byte_end":164182,"line_start":540,"line_end":540,"column_start":12,"column_end":24},"name":"is_sometimes","qualname":"<Interest>::is_sometimes","value":"pub fn is_sometimes(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is sometimes interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is sometimes interested in being notified","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":164037,"byte_end":164115,"line_start":537,"line_end":537,"column_start":5,"column_end":83}},{"value":"/ about this callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":164120,"byte_end":164144,"line_start":538,"line_end":538,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":164149,"byte_end":164158,"line_start":539,"line_end":539,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":164391,"byte_end":164400,"line_start":547,"line_end":547,"column_start":12,"column_end":21},"name":"is_always","qualname":"<Interest>::is_always","value":"pub fn is_always(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is always interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is always interested in being notified","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":164261,"byte_end":164336,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ about this callsite.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":164341,"byte_end":164365,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":164370,"byte_end":164379,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1248},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165247,"byte_end":165259,"line_start":571,"line_end":571,"column_start":12,"column_end":24},"name":"NoSubscriber","qualname":"::subscriber::NoSubscriber","value":"","parent":null,"children":[],"decl_id":null,"docs":" A no-op [`Subscriber`].","sig":null,"attributes":[{"value":"/ A no-op [`Subscriber`].","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165005,"byte_end":165032,"line_start":566,"line_end":566,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165033,"byte_end":165036,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ [`NoSubscriber`] implements the [`Subscriber`] trait by never being enabled,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165037,"byte_end":165117,"line_start":568,"line_end":568,"column_start":1,"column_end":81}},{"value":"/ never being interested in any callsite, and dropping all spans and events.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165118,"byte_end":165196,"line_start":569,"line_end":569,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":797},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9514,"byte_end":9520,"line_start":303,"line_end":303,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":10096,"byte_end":10104,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14913,"byte_end":14923,"line_start":150,"line_end":150,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":15118,"byte_end":15128,"line_start":159,"line_end":159,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":15153,"byte_end":15163,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":15298,"byte_end":15308,"line_start":167,"line_end":167,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26929,"byte_end":26950,"line_start":306,"line_end":306,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27190,"byte_end":27211,"line_start":314,"line_end":314,"column_start":23,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":29737,"byte_end":29745,"line_start":398,"line_end":398,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38934,"byte_end":38942,"line_start":635,"line_end":635,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":39095,"byte_end":39103,"line_start":642,"line_end":642,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":39313,"byte_end":39321,"line_start":650,"line_end":650,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":39472,"byte_end":39481,"line_start":660,"line_end":660,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":39875,"byte_end":39880,"line_start":676,"line_end":676,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":41071,"byte_end":41078,"line_start":713,"line_end":713,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":41397,"byte_end":41404,"line_start":724,"line_end":724,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":41567,"byte_end":41579,"line_start":734,"line_end":734,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48136,"byte_end":48141,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":65263,"byte_end":65274,"line_start":367,"line_end":367,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":65435,"byte_end":65443,"line_start":373,"line_end":373,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":65608,"byte_end":65609,"line_start":379,"line_end":379,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":68771,"byte_end":68779,"line_start":500,"line_end":500,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":68839,"byte_end":68847,"line_start":501,"line_end":501,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":70200,"byte_end":70209,"line_start":550,"line_end":550,"column_start":41,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":70242,"byte_end":70251,"line_start":552,"line_end":552,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":70720,"byte_end":70732,"line_start":564,"line_end":564,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":71611,"byte_end":71623,"line_start":595,"line_end":595,"column_start":49,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":71649,"byte_end":71661,"line_start":597,"line_end":597,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":71841,"byte_end":71853,"line_start":606,"line_end":606,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":72005,"byte_end":72017,"line_start":612,"line_end":612,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":72195,"byte_end":72205,"line_start":620,"line_end":620,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":72231,"byte_end":72241,"line_start":622,"line_end":622,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":72420,"byte_end":72430,"line_start":631,"line_end":631,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73384,"byte_end":73389,"line_start":661,"line_end":661,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73408,"byte_end":73413,"line_start":662,"line_end":662,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73528,"byte_end":73534,"line_start":667,"line_end":667,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73567,"byte_end":73573,"line_start":669,"line_end":669,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73759,"byte_end":73764,"line_start":679,"line_end":679,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74270,"byte_end":74275,"line_start":696,"line_end":696,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74397,"byte_end":74402,"line_start":702,"line_end":702,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74484,"byte_end":74489,"line_start":708,"line_end":708,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74619,"byte_end":74624,"line_start":714,"line_end":714,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74643,"byte_end":74648,"line_start":716,"line_end":716,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74812,"byte_end":74817,"line_start":726,"line_end":726,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":75081,"byte_end":75089,"line_start":740,"line_end":740,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78147,"byte_end":78155,"line_start":836,"line_end":836,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78397,"byte_end":78405,"line_start":845,"line_end":845,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78621,"byte_end":78625,"line_start":855,"line_end":855,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78961,"byte_end":78969,"line_start":871,"line_end":871,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":80493,"byte_end":80501,"line_start":919,"line_end":919,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":80920,"byte_end":80928,"line_start":934,"line_end":934,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96832,"byte_end":96840,"line_start":253,"line_end":253,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":99227,"byte_end":99235,"line_start":338,"line_end":338,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100300,"byte_end":100304,"line_start":371,"line_end":371,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101555,"byte_end":101559,"line_start":411,"line_end":411,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102389,"byte_end":102394,"line_start":448,"line_end":448,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103513,"byte_end":103518,"line_start":484,"line_end":484,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103949,"byte_end":103964,"line_start":498,"line_end":498,"column_start":38,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103986,"byte_end":103991,"line_start":500,"line_end":500,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105573,"byte_end":105584,"line_start":551,"line_end":551,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105707,"byte_end":105718,"line_start":558,"line_end":558,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105835,"byte_end":105841,"line_start":565,"line_end":565,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105950,"byte_end":105961,"line_start":572,"line_end":572,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":111577,"byte_end":111588,"line_start":697,"line_end":697,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":112007,"byte_end":112018,"line_start":710,"line_end":710,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":112512,"byte_end":112523,"line_start":723,"line_end":723,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":113819,"byte_end":113834,"line_start":757,"line_end":757,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":114092,"byte_end":114113,"line_start":766,"line_end":766,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":114415,"byte_end":114436,"line_start":776,"line_end":776,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":118773,"byte_end":118778,"line_start":851,"line_end":851,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":118933,"byte_end":118938,"line_start":858,"line_end":858,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":119557,"byte_end":119562,"line_start":885,"line_end":885,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":119731,"byte_end":119736,"line_start":892,"line_end":892,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":120629,"byte_end":120640,"line_start":927,"line_end":927,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":120789,"byte_end":120800,"line_start":934,"line_end":934,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":121505,"byte_end":121516,"line_start":961,"line_end":961,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":121693,"byte_end":121704,"line_start":968,"line_end":968,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126884,"byte_end":126886,"line_start":61,"line_end":61,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128018,"byte_end":128024,"line_start":98,"line_end":98,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128140,"byte_end":128150,"line_start":106,"line_end":106,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131817,"byte_end":131823,"line_start":216,"line_end":216,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132557,"byte_end":132564,"line_start":242,"line_end":242,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134855,"byte_end":134861,"line_start":309,"line_end":309,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134969,"byte_end":134975,"line_start":315,"line_end":315,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":135080,"byte_end":135086,"line_start":321,"line_end":321,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":135286,"byte_end":135292,"line_start":330,"line_end":330,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162535,"byte_end":162543,"line_start":497,"line_end":497,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165286,"byte_end":165298,"line_start":573,"line_end":573,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165919,"byte_end":165922,"line_start":598,"line_end":598,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":167745,"byte_end":167748,"line_start":675,"line_end":675,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9089,"byte_end":9097,"line_start":280,"line_end":280,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9107,"byte_end":9117,"line_start":281,"line_end":281,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":70}},{"kind":"Mod","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9127,"byte_end":9132,"line_start":282,"line_end":282,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":221}},{"kind":"Mod","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9142,"byte_end":9147,"line_start":283,"line_end":283,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":251}},{"kind":"Mod","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9157,"byte_end":9165,"line_start":284,"line_end":284,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":446}},{"kind":"Mod","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9187,"byte_end":9191,"line_start":286,"line_end":286,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":602}},{"kind":"Mod","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/lib.rs","byte_start":9224,"byte_end":9234,"line_start":288,"line_end":288,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":668}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":10096,"byte_end":10104,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":11913,"byte_end":11917,"line_start":77,"line_end":77,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":14913,"byte_end":14923,"line_start":150,"line_end":150,"column_start":20,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":809},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":15118,"byte_end":15128,"line_start":159,"line_end":159,"column_start":13,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":809},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":15153,"byte_end":15163,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":809},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/callsite.rs","byte_start":15298,"byte_end":15308,"line_start":167,"line_end":167,"column_start":15,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":809},"to":{"krate":2,"index":9551}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":26929,"byte_end":26950,"line_start":306,"line_end":306,"column_start":23,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":827},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":27190,"byte_end":27211,"line_start":314,"line_end":314,"column_start":23,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":827},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":29737,"byte_end":29745,"line_start":398,"line_end":398,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":38934,"byte_end":38942,"line_start":635,"line_end":635,"column_start":18,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":814},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":39095,"byte_end":39103,"line_start":642,"line_end":642,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":814},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":39313,"byte_end":39321,"line_start":650,"line_end":650,"column_start":21,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":814},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":39472,"byte_end":39481,"line_start":660,"line_end":660,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":39875,"byte_end":39880,"line_start":676,"line_end":676,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":41071,"byte_end":41078,"line_start":713,"line_end":713,"column_start":10,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":41397,"byte_end":41404,"line_start":724,"line_end":724,"column_start":19,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":144},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/dispatcher.rs","byte_start":41567,"byte_end":41579,"line_start":734,"line_end":734,"column_start":15,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":822},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/event.rs","byte_start":48136,"byte_end":48141,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":63900,"byte_end":63906,"line_start":318,"line_end":318,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":797},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":65263,"byte_end":65274,"line_start":367,"line_end":367,"column_start":29,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":9051},"to":{"krate":0,"index":285}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":65435,"byte_end":65443,"line_start":373,"line_end":373,"column_start":29,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":9132},"to":{"krate":0,"index":285}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":65608,"byte_end":65609,"line_start":379,"line_end":379,"column_start":19,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":308},"to":{"krate":0,"index":285}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":68771,"byte_end":68779,"line_start":500,"line_end":500,"column_start":58,"column_end":66},"kind":{"Impl":{"id":40}},"from":{"krate":2,"index":18378},"to":{"krate":0,"index":797}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":68839,"byte_end":68847,"line_start":501,"line_end":501,"column_start":54,"column_end":62},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":18378},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":70200,"byte_end":70209,"line_start":550,"line_end":550,"column_start":41,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":38020},"to":{"krate":0,"index":797}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":70242,"byte_end":70251,"line_start":552,"line_end":552,"column_start":25,"column_end":34},"kind":{"Impl":{"id":45}},"from":{"krate":2,"index":38020},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":70720,"byte_end":70732,"line_start":564,"line_end":564,"column_start":44,"column_end":56},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":346},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":71611,"byte_end":71623,"line_start":595,"line_end":595,"column_start":49,"column_end":61},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":859},"to":{"krate":0,"index":797}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":71649,"byte_end":71661,"line_start":597,"line_end":597,"column_start":19,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":859},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":71841,"byte_end":71853,"line_start":606,"line_end":606,"column_start":38,"column_end":50},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":72005,"byte_end":72017,"line_start":612,"line_end":612,"column_start":40,"column_end":52},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":72195,"byte_end":72205,"line_start":620,"line_end":620,"column_start":47,"column_end":57},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":797}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":72231,"byte_end":72241,"line_start":622,"line_end":622,"column_start":19,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":72420,"byte_end":72430,"line_start":631,"line_end":631,"column_start":36,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73384,"byte_end":73389,"line_start":661,"line_end":661,"column_start":32,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":844},"to":{"krate":0,"index":797}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73408,"byte_end":73413,"line_start":662,"line_end":662,"column_start":16,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":844},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73528,"byte_end":73534,"line_start":667,"line_end":667,"column_start":42,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":36906},"to":{"krate":0,"index":797}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73567,"byte_end":73573,"line_start":669,"line_end":669,"column_start":26,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":2,"index":36906},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":73759,"byte_end":73764,"line_start":679,"line_end":679,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74270,"byte_end":74275,"line_start":696,"line_end":696,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74397,"byte_end":74402,"line_start":702,"line_end":702,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74484,"byte_end":74489,"line_start":708,"line_end":708,"column_start":20,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74619,"byte_end":74624,"line_start":714,"line_end":714,"column_start":13,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74643,"byte_end":74648,"line_start":716,"line_end":716,"column_start":15,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":9551}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":74812,"byte_end":74817,"line_start":726,"line_end":726,"column_start":16,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":839},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":75081,"byte_end":75089,"line_start":740,"line_end":740,"column_start":6,"column_end":14},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78147,"byte_end":78155,"line_start":836,"line_end":836,"column_start":21,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78397,"byte_end":78405,"line_start":845,"line_end":845,"column_start":23,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78621,"byte_end":78625,"line_start":855,"line_end":855,"column_start":19,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":78961,"byte_end":78969,"line_start":871,"line_end":871,"column_start":10,"column_end":18},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":80493,"byte_end":80501,"line_start":919,"line_end":919,"column_start":25,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":80920,"byte_end":80928,"line_start":934,"line_end":934,"column_start":27,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/field.rs","byte_start":81779,"byte_end":81785,"line_start":960,"line_end":960,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2603},"to":{"krate":0,"index":443}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":96832,"byte_end":96840,"line_start":253,"line_end":253,"column_start":10,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":99227,"byte_end":99235,"line_start":338,"line_end":338,"column_start":25,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":100300,"byte_end":100304,"line_start":371,"line_end":371,"column_start":6,"column_end":10},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":101555,"byte_end":101559,"line_start":411,"line_end":411,"column_start":21,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":102389,"byte_end":102394,"line_start":448,"line_end":448,"column_start":6,"column_end":11},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103513,"byte_end":103518,"line_start":484,"line_end":484,"column_start":23,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103949,"byte_end":103964,"line_start":498,"line_end":498,"column_start":38,"column_end":53},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1157},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":103986,"byte_end":103991,"line_start":500,"line_end":500,"column_start":18,"column_end":23},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":11872}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105573,"byte_end":105584,"line_start":551,"line_end":551,"column_start":22,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105707,"byte_end":105718,"line_start":558,"line_end":558,"column_start":30,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105835,"byte_end":105841,"line_start":565,"line_end":565,"column_start":28,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":2,"index":36906},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":105950,"byte_end":105961,"line_start":572,"line_end":572,"column_start":6,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":111577,"byte_end":111588,"line_start":697,"line_end":697,"column_start":23,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":112007,"byte_end":112018,"line_start":710,"line_end":710,"column_start":21,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":112512,"byte_end":112523,"line_start":723,"line_end":723,"column_start":18,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":11872}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":113819,"byte_end":113834,"line_start":757,"line_end":757,"column_start":23,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1157},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":114092,"byte_end":114113,"line_start":766,"line_end":766,"column_start":23,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":114415,"byte_end":114436,"line_start":776,"line_end":776,"column_start":28,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1120},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":118773,"byte_end":118778,"line_start":851,"line_end":851,"column_start":33,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":118933,"byte_end":118938,"line_start":858,"line_end":858,"column_start":21,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":119557,"byte_end":119562,"line_start":885,"line_end":885,"column_start":14,"column_end":19},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":119731,"byte_end":119736,"line_start":892,"line_end":892,"column_start":34,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":120629,"byte_end":120640,"line_start":927,"line_end":927,"column_start":27,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":120789,"byte_end":120800,"line_start":934,"line_end":934,"column_start":21,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":121505,"byte_end":121516,"line_start":961,"line_end":961,"column_start":14,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/metadata.rs","byte_start":121693,"byte_end":121704,"line_start":968,"line_end":968,"column_start":28,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":126884,"byte_end":126886,"line_start":61,"line_end":61,"column_start":6,"column_end":8},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128018,"byte_end":128024,"line_start":98,"line_end":98,"column_start":27,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":2,"index":36906},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":128140,"byte_end":128150,"line_start":106,"line_end":106,"column_start":10,"column_end":20},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":131817,"byte_end":131823,"line_start":216,"line_end":216,"column_start":10,"column_end":16},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":132557,"byte_end":132564,"line_start":242,"line_end":242,"column_start":6,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134855,"byte_end":134861,"line_start":309,"line_end":309,"column_start":32,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":2,"index":36906},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":134969,"byte_end":134975,"line_start":315,"line_end":315,"column_start":32,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":2,"index":36906},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":135080,"byte_end":135086,"line_start":321,"line_end":321,"column_start":24,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":2,"index":36906},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/span.rs","byte_start":135286,"byte_end":135292,"line_start":330,"line_end":330,"column_start":32,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":2,"index":36906},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":162535,"byte_end":162543,"line_start":497,"line_end":497,"column_start":6,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165286,"byte_end":165298,"line_start":573,"line_end":573,"column_start":21,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1248},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":165919,"byte_end":165922,"line_start":598,"line_end":598,"column_start":21,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.24/src/subscriber.rs","byte_start":167745,"byte_end":167748,"line_start":675,"line_end":675,"column_start":21,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":5,"index":5953},"to":{"krate":0,"index":696}}]}