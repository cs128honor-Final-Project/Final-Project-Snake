{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0","program":"/home/vagrant/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bytemuck_derive","--edition=2018","/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e30db9f6bf7e72cf","-C","extra-filename=-e30db9f6bf7e72cf","--out-dir","/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps","-L","dependency=/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps","--extern","proc_macro2=/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps/libproc_macro2-ec43e5db047ba285.rlib","--extern","quote=/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps/libquote-7f93e0040cfcdd75.rlib","--extern","syn=/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps/libsyn-e90c622d39212e5a.rlib","--extern","proc_macro","--cap-lints","allow","--error-format=json","--sysroot","/home/vagrant/.rustup/toolchains/stable-aarch64-unknown-linux-gnu"],"output":"/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps/libbytemuck_derive-e30db9f6bf7e72cf.so"},"prelude":{"crate_id":{"name":"bytemuck_derive","disambiguator":[13553433942993826987,0]},"crate_root":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src","external_crates":[{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16445510266835534892,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5715287577345846916,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2199189476072148838,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9754053951972344886,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8608258377683752015,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[11708387549564946430,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11871207697450564647,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2882403878542877674,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1632236844500716591,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2176439197024966323,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[18408288890896598870,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[15351315317909885583,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3890495817449864796,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[1301525367465190851,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[9159134502401529852,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17249337610897666069,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1193766655778347732,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[6285120501625389371,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[15349562571025913859,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","num":20,"id":{"name":"proc_macro","disambiguator":[4058737489035576149,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","num":21,"id":{"name":"proc_macro2","disambiguator":[7220575970315733232,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","num":22,"id":{"name":"unicode_xid","disambiguator":[436493502069382712,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","num":23,"id":{"name":"quote","disambiguator":[3129842347652878071,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","num":24,"id":{"name":"syn","disambiguator":[961616483916688191,0]}}],"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":0,"byte_end":7867,"line_start":1,"line_end":265,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":0,"byte_end":7867,"line_start":1,"line_end":265,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":241}],"decl_id":null,"docs":" Derive macros for [bytemuck](https://docs.rs/bytemuck) traits.\n","sig":null,"attributes":[{"value":"/ Derive macros for [bytemuck](https://docs.rs/bytemuck) traits.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1043,"byte_end":1053,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"derive_pod","qualname":"::derive_pod","value":"pub fn derive_pod(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Pod` trait for a struct","sig":null,"attributes":[{"value":"/ Derive the `Pod` trait for a struct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":363,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the struct follows all the the safety requirements","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":407,"byte_end":484,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ for the `Pod` trait.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":485,"byte_end":509,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":510,"byte_end":513,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":514,"byte_end":589,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":590,"byte_end":593,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - All fields in the struct must implement `Pod`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":594,"byte_end":645,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ - The struct must be `#[repr(C)]` or `#[repr(transparent)]`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":646,"byte_end":709,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ - The struct must not contain any padding bytes","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":710,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ - The struct contains no generic parameters","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":762,"byte_end":809,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":810,"byte_end":813,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":814,"byte_end":828,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":829,"byte_end":832,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":833,"byte_end":844,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ # use bytemuck_derive::{Pod, Zeroable};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":845,"byte_end":888,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":889,"byte_end":892,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, Pod, Zeroable)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":893,"byte_end":934,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":935,"byte_end":949,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/ struct Test {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":950,"byte_end":967,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/   a: u16,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":968,"byte_end":981,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/   b: u16,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":982,"byte_end":995,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":996,"byte_end":1001,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1002,"byte_end":1009,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"proc_macro_derive(Pod)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1010,"byte_end":1035,"line_start":39,"line_end":39,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":225},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1612,"byte_end":1632,"line_start":56,"line_end":56,"column_start":8,"column_end":28},"name":"derive_anybitpattern","qualname":"::derive_anybitpattern","value":"pub fn derive_anybitpattern(proc_macro::TokenStream)\n-> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `AnyBitPattern` trait for a struct","sig":null,"attributes":[{"value":"/ Derive the `AnyBitPattern` trait for a struct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1252,"byte_end":1301,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1302,"byte_end":1305,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the struct follows all the the safety requirements","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1306,"byte_end":1383,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ for the `AnyBitPattern` trait.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1384,"byte_end":1418,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1419,"byte_end":1422,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1423,"byte_end":1498,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1499,"byte_end":1502,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ - All fields ind the struct must to implement `AnyBitPattern`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1503,"byte_end":1568,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"proc_macro_derive(AnyBitPattern)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1569,"byte_end":1604,"line_start":55,"line_end":55,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2376,"byte_end":2391,"line_start":87,"line_end":87,"column_start":8,"column_end":23},"name":"derive_zeroable","qualname":"::derive_zeroable","value":"pub fn derive_zeroable(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Zeroable` trait for a struct","sig":null,"attributes":[{"value":"/ Derive the `Zeroable` trait for a struct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1846,"byte_end":1890,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1891,"byte_end":1894,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the struct follows all the the safety requirements","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1895,"byte_end":1972,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ for the `Zeroable` trait.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":1973,"byte_end":2002,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2003,"byte_end":2006,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2007,"byte_end":2082,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2083,"byte_end":2086,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ - All fields ind the struct must to implement `Zeroable`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2087,"byte_end":2147,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2148,"byte_end":2151,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2152,"byte_end":2166,"line_start":74,"line_end":74,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2167,"byte_end":2170,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2171,"byte_end":2182,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ # use bytemuck_derive::{Zeroable};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2183,"byte_end":2221,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2222,"byte_end":2225,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, Zeroable)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2226,"byte_end":2262,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/ #[repr(C)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2263,"byte_end":2277,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/ struct Test {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2278,"byte_end":2295,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/   a: u16,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2296,"byte_end":2309,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/   b: u16,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2310,"byte_end":2323,"line_start":83,"line_end":83,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2324,"byte_end":2329,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2330,"byte_end":2337,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"proc_macro_derive(Zeroable)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2338,"byte_end":2368,"line_start":86,"line_end":86,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":227},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3439,"byte_end":3455,"line_start":116,"line_end":116,"column_start":8,"column_end":24},"name":"derive_no_uninit","qualname":"::derive_no_uninit","value":"pub fn derive_no_uninit(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `NoUninit` trait for a struct or enum","sig":null,"attributes":[{"value":"/ Derive the `NoUninit` trait for a struct or enum","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2600,"byte_end":2652,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2653,"byte_end":2656,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the type follows all the the safety requirements","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2657,"byte_end":2732,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ for the `NoUninit` trait.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2733,"byte_end":2762,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2763,"byte_end":2766,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2767,"byte_end":2842,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ (the rest of the constraints are guaranteed by the `NoUninit` subtrait bounds,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2843,"byte_end":2925,"line_start":102,"line_end":102,"column_start":1,"column_end":83}},{"value":"/ i.e. the type must be `Sized + Copy + 'static`):","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2926,"byte_end":2978,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2979,"byte_end":2982,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ If applied to a struct:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":2983,"byte_end":3010,"line_start":105,"line_end":105,"column_start":1,"column_end":28}},{"value":"/ - All fields in the struct must implement `NoUninit`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3011,"byte_end":3067,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ - The struct must be `#[repr(C)]` or `#[repr(transparent)]`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3068,"byte_end":3131,"line_start":107,"line_end":107,"column_start":1,"column_end":64}},{"value":"/ - The struct must not contain any padding bytes","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3132,"byte_end":3183,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ - The struct must contain no generic parameters","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3184,"byte_end":3235,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3236,"byte_end":3239,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ If applied to an enum:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3240,"byte_end":3266,"line_start":111,"line_end":111,"column_start":1,"column_end":27}},{"value":"/ - The enum must be explicit `#[repr(Int)]`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3267,"byte_end":3313,"line_start":112,"line_end":112,"column_start":1,"column_end":47}},{"value":"/ - All variants must be fieldless","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3314,"byte_end":3350,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ - The enum must contain no generic parameters","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3351,"byte_end":3400,"line_start":114,"line_end":114,"column_start":1,"column_end":50}},{"value":"proc_macro_derive(NoUninit)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3401,"byte_end":3431,"line_start":115,"line_end":115,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4485,"byte_end":4501,"line_start":142,"line_end":142,"column_start":8,"column_end":24},"name":"derive_maybe_pod","qualname":"::derive_maybe_pod","value":"pub fn derive_maybe_pod(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `CheckedBitPattern` trait for a struct or enum.","sig":null,"attributes":[{"value":"/ Derive the `CheckedBitPattern` trait for a struct or enum.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3664,"byte_end":3726,"line_start":125,"line_end":125,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3727,"byte_end":3730,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the type follows all the the safety requirements","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3731,"byte_end":3806,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ for the `CheckedBitPattern` trait and derives the required `Bits` type","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3807,"byte_end":3881,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/ definition and `is_valid_bit_pattern` method for the type automatically.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3882,"byte_end":3958,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3959,"byte_end":3962,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":3963,"byte_end":4038,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/ (the rest of the constraints are guaranteed by the `CheckedBitPattern` subtrait bounds,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4039,"byte_end":4130,"line_start":132,"line_end":132,"column_start":1,"column_end":92}},{"value":"/ i.e. are guaranteed by the requirements of the `NoUninit` trait which `CheckedBitPattern`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4131,"byte_end":4224,"line_start":133,"line_end":133,"column_start":1,"column_end":94}},{"value":"/ is a subtrait of):","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4225,"byte_end":4247,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4248,"byte_end":4251,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ If applied to a struct:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4252,"byte_end":4279,"line_start":136,"line_end":136,"column_start":1,"column_end":28}},{"value":"/ - All fields must implement `CheckedBitPattern`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4280,"byte_end":4331,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4332,"byte_end":4335,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ If applied to an enum:","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4336,"byte_end":4362,"line_start":139,"line_end":139,"column_start":1,"column_end":27}},{"value":"/ - All requirements already checked by `NoUninit`, just impls the trait","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4363,"byte_end":4437,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"proc_macro_derive(CheckedBitPattern)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4438,"byte_end":4477,"line_start":141,"line_end":141,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5674,"byte_end":5692,"line_start":180,"line_end":180,"column_start":8,"column_end":26},"name":"derive_transparent","qualname":"::derive_transparent","value":"pub fn derive_transparent(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `TransparentWrapper` trait for a struct","sig":null,"attributes":[{"value":"/ Derive the `TransparentWrapper` trait for a struct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4719,"byte_end":4773,"line_start":151,"line_end":151,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4774,"byte_end":4777,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the struct follows all the the safety requirements","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4778,"byte_end":4855,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ for the `TransparentWrapper` trait.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4856,"byte_end":4895,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4896,"byte_end":4899,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4900,"byte_end":4975,"line_start":156,"line_end":156,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4976,"byte_end":4979,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ - The struct must be `#[repr(transparent)]`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":4980,"byte_end":5027,"line_start":158,"line_end":158,"column_start":1,"column_end":48}},{"value":"/ - The struct must contain the `Wrapped` type","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5028,"byte_end":5076,"line_start":159,"line_end":159,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5077,"byte_end":5080,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ If the struct only contains a single field, the `Wrapped` type will","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5081,"byte_end":5152,"line_start":161,"line_end":161,"column_start":1,"column_end":72}},{"value":"/ automatically be determined if there is more then one field in the struct,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5153,"byte_end":5231,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ you need to specify the `Wrapped` type using `#[transparent(T)]`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5232,"byte_end":5300,"line_start":163,"line_end":163,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5301,"byte_end":5304,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5305,"byte_end":5319,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5320,"byte_end":5323,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5324,"byte_end":5335,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/ # use bytemuck_derive::TransparentWrapper;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5336,"byte_end":5382,"line_start":168,"line_end":168,"column_start":1,"column_end":47}},{"value":"/ # use std::marker::PhantomData;","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5383,"byte_end":5418,"line_start":169,"line_end":169,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5419,"byte_end":5422,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, TransparentWrapper)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5423,"byte_end":5469,"line_start":171,"line_end":171,"column_start":1,"column_end":47}},{"value":"/ #[repr(transparent)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5470,"byte_end":5494,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/ #[transparent(u16)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5495,"byte_end":5518,"line_start":173,"line_end":173,"column_start":1,"column_end":24}},{"value":"/ struct Test<T> {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5519,"byte_end":5539,"line_start":174,"line_end":174,"column_start":1,"column_end":21}},{"value":"/   inner: u16,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5540,"byte_end":5557,"line_start":175,"line_end":175,"column_start":1,"column_end":18}},{"value":"/   extra: PhantomData<T>,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5558,"byte_end":5586,"line_start":176,"line_end":176,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5587,"byte_end":5592,"line_start":177,"line_end":177,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5593,"byte_end":5600,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"proc_macro_derive(TransparentWrapper, attributes(transparent))","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5601,"byte_end":5666,"line_start":179,"line_end":179,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":230},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6530,"byte_end":6547,"line_start":215,"line_end":215,"column_start":8,"column_end":25},"name":"derive_contiguous","qualname":"::derive_contiguous","value":"pub fn derive_contiguous(proc_macro::TokenStream) -> proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Contiguous` trait for an enum","sig":null,"attributes":[{"value":"/ Derive the `Contiguous` trait for an enum","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5915,"byte_end":5960,"line_start":190,"line_end":190,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5961,"byte_end":5964,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ The macro ensures that the enum follows all the the safety requirements","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":5965,"byte_end":6040,"line_start":192,"line_end":192,"column_start":1,"column_end":76}},{"value":"/ for the `Contiguous` trait.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6041,"byte_end":6072,"line_start":193,"line_end":193,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6073,"byte_end":6076,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following constraints need to be satisfied for the macro to succeed","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6077,"byte_end":6152,"line_start":195,"line_end":195,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6153,"byte_end":6156,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ - The enum must be `#[repr(Int)]`","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6157,"byte_end":6194,"line_start":197,"line_end":197,"column_start":1,"column_end":38}},{"value":"/ - The enum must be fieldless","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6195,"byte_end":6227,"line_start":198,"line_end":198,"column_start":1,"column_end":33}},{"value":"/ - The enum discriminants must form a contiguous range","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6228,"byte_end":6285,"line_start":199,"line_end":199,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6286,"byte_end":6289,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6290,"byte_end":6304,"line_start":201,"line_end":201,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6305,"byte_end":6308,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6309,"byte_end":6320,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/ # use bytemuck_derive::{Contiguous};","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6321,"byte_end":6361,"line_start":204,"line_end":204,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6362,"byte_end":6365,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ #[derive(Copy, Clone, Contiguous)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6366,"byte_end":6404,"line_start":206,"line_end":206,"column_start":1,"column_end":39}},{"value":"/ #[repr(u8)]","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6405,"byte_end":6420,"line_start":207,"line_end":207,"column_start":1,"column_end":16}},{"value":"/ enum Test {","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6421,"byte_end":6436,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/   A = 0,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6437,"byte_end":6449,"line_start":209,"line_end":209,"column_start":1,"column_end":13}},{"value":"/   B = 1,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6450,"byte_end":6462,"line_start":210,"line_end":210,"column_start":1,"column_end":13}},{"value":"/   C = 2,","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6463,"byte_end":6475,"line_start":211,"line_end":211,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6476,"byte_end":6481,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6482,"byte_end":6489,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"proc_macro_derive(Contiguous)","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/lib.rs","byte_start":6490,"byte_end":6522,"line_start":214,"line_end":214,"column_start":1,"column_end":33}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":9005,"byte_end":9008,"line_start":34,"line_end":34,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":10241,"byte_end":10254,"line_start":76,"line_end":76,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":10801,"byte_end":10809,"line_start":96,"line_end":96,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":11251,"byte_end":11259,"line_start":112,"line_end":112,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":13212,"byte_end":13229,"line_start":171,"line_end":171,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":15233,"byte_end":15251,"line_start":226,"line_end":226,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":15813,"byte_end":15831,"line_start":244,"line_end":244,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":17415,"byte_end":17425,"line_start":291,"line_end":291,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":25230,"byte_end":25257,"line_start":556,"line_end":556,"column_start":3,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":25423,"byte_end":25450,"line_start":564,"line_end":564,"column_start":7,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":9005,"byte_end":9008,"line_start":34,"line_end":34,"column_start":20,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":84},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":10241,"byte_end":10254,"line_start":76,"line_end":76,"column_start":20,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":91},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":10801,"byte_end":10809,"line_start":96,"line_end":96,"column_start":20,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":97},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":11251,"byte_end":11259,"line_start":112,"line_end":112,"column_start":20,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":102},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":13212,"byte_end":13229,"line_start":171,"line_end":171,"column_start":20,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":111},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":15233,"byte_end":15251,"line_start":226,"line_end":226,"column_start":6,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":15813,"byte_end":15831,"line_start":244,"line_end":244,"column_start":20,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":119},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":17415,"byte_end":17425,"line_start":291,"line_end":291,"column_start":20,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":134},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":25230,"byte_end":25257,"line_start":556,"line_end":556,"column_start":3,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck_derive-1.1.0/src/traits.rs","byte_start":25423,"byte_end":25450,"line_start":564,"line_end":564,"column_start":7,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":7600}}]}