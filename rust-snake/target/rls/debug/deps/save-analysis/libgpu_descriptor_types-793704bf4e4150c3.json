{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1","program":"/home/vagrant/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","gpu_descriptor_types","--edition=2018","/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=793704bf4e4150c3","-C","extra-filename=-793704bf4e4150c3","--out-dir","/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps","-L","dependency=/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps","--extern","bitflags=/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps/libbitflags-84087b4c9830543c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/vagrant/.rustup/toolchains/stable-aarch64-unknown-linux-gnu"],"output":"/home/vagrant/src/cs128honor/Final-Project/rust-snake/target/rls/debug/deps/libgpu_descriptor_types-793704bf4e4150c3.rmeta"},"prelude":{"crate_id":{"name":"gpu_descriptor_types","disambiguator":[6298551474005990517,0]},"crate_root":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src","external_crates":[{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5715287577345846916,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2199189476072148838,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9754053951972344886,0]}},{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","num":4,"id":{"name":"bitflags","disambiguator":[627658104046499823,0]}}],"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","byte_start":0,"byte_end":72,"line_start":1,"line_end":6,"column_start":1,"column_end":37}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","byte_start":59,"byte_end":60,"line_start":6,"line_end":6,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","byte_start":69,"byte_end":70,"line_start":6,"line_end":6,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","byte_start":0,"byte_end":72,"line_start":1,"line_end":6,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":30},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":259,"byte_end":276,"line_start":7,"line_end":7,"column_start":5,"column_end":22},"name":"OutOfDeviceMemory","qualname":"::device::CreatePoolError::OutOfDeviceMemory","value":"CreatePoolError::OutOfDeviceMemory","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Device memory exhausted.\n","sig":null,"attributes":[{"value":"/ Device memory exhausted.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":226,"byte_end":254,"line_start":6,"line_end":6,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":32},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":314,"byte_end":329,"line_start":10,"line_end":10,"column_start":5,"column_end":20},"name":"OutOfHostMemory","qualname":"::device::CreatePoolError::OutOfHostMemory","value":"CreatePoolError::OutOfHostMemory","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Host memory exhausted.\n","sig":null,"attributes":[{"value":"/ Host memory exhausted.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":283,"byte_end":309,"line_start":9,"line_end":9,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":34},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":404,"byte_end":417,"line_start":13,"line_end":13,"column_start":5,"column_end":18},"name":"Fragmentation","qualname":"::device::CreatePoolError::Fragmentation","value":"CreatePoolError::Fragmentation","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" A descriptor pool creation has failed due to fragmentation.\n","sig":null,"attributes":[{"value":"/ A descriptor pool creation has failed due to fragmentation.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":336,"byte_end":399,"line_start":12,"line_end":12,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":29},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":204,"byte_end":219,"line_start":5,"line_end":5,"column_start":10,"column_end":25},"name":"CreatePoolError","qualname":"::device::CreatePoolError","value":"pub enum CreatePoolError {\n    OutOfDeviceMemory,\n    OutOfHostMemory,\n    Fragmentation,\n}","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34}],"decl_id":null,"docs":" Memory exhausted error.\n","sig":null,"attributes":[{"value":"/ Memory exhausted error.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":150,"byte_end":177,"line_start":3,"line_end":3,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":39},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":537,"byte_end":554,"line_start":20,"line_end":20,"column_start":5,"column_end":22},"name":"OutOfDeviceMemory","qualname":"::device::DeviceAllocationError::OutOfDeviceMemory","value":"DeviceAllocationError::OutOfDeviceMemory","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Device memory exhausted.\n","sig":null,"attributes":[{"value":"/ Device memory exhausted.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":504,"byte_end":532,"line_start":19,"line_end":19,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":41},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":592,"byte_end":607,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"OutOfHostMemory","qualname":"::device::DeviceAllocationError::OutOfHostMemory","value":"DeviceAllocationError::OutOfHostMemory","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Host memory exhausted.\n","sig":null,"attributes":[{"value":"/ Host memory exhausted.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":561,"byte_end":587,"line_start":22,"line_end":22,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":43},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":659,"byte_end":674,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"name":"OutOfPoolMemory","qualname":"::device::DeviceAllocationError::OutOfPoolMemory","value":"DeviceAllocationError::OutOfPoolMemory","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Failed to allocate memory from pool.\n","sig":null,"attributes":[{"value":"/ Failed to allocate memory from pool.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":614,"byte_end":654,"line_start":25,"line_end":25,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":45},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":751,"byte_end":765,"line_start":29,"line_end":29,"column_start":5,"column_end":19},"name":"FragmentedPool","qualname":"::device::DeviceAllocationError::FragmentedPool","value":"DeviceAllocationError::FragmentedPool","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Pool allocation failed due to fragmentation of pool's memory.\n","sig":null,"attributes":[{"value":"/ Pool allocation failed due to fragmentation of pool's memory.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":681,"byte_end":746,"line_start":28,"line_end":28,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":38},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":476,"byte_end":497,"line_start":18,"line_end":18,"column_start":10,"column_end":31},"name":"DeviceAllocationError","qualname":"::device::DeviceAllocationError","value":"pub enum DeviceAllocationError {\n    OutOfDeviceMemory,\n    OutOfHostMemory,\n    OutOfPoolMemory,\n    FragmentedPool,\n}","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45}],"decl_id":null,"docs":" Memory exhausted error.\n","sig":null,"attributes":[{"value":"/ Memory exhausted error.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":422,"byte_end":449,"line_start":16,"line_end":16,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":873,"byte_end":889,"line_start":33,"line_end":33,"column_start":11,"column_end":27},"name":"DescriptorDevice","qualname":"::device::DescriptorDevice","value":"DescriptorDevice<L, P, S>","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":22}],"decl_id":null,"docs":" Abstract device that can create pools of type `P` and allocate sets `S` with layout `L`.\n","sig":null,"attributes":[{"value":"/ Abstract device that can create pools of type `P` and allocate sets `S` with layout `L`.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":770,"byte_end":862,"line_start":32,"line_end":32,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":915,"byte_end":937,"line_start":34,"line_end":34,"column_start":15,"column_end":37},"name":"create_descriptor_pool","qualname":"::device::DescriptorDevice::create_descriptor_pool","value":"pub unsafe fn create_descriptor_pool(&Self, &DescriptorTotalCount, u32,\n                                     DescriptorPoolCreateFlags)\n-> Result<P, CreatePoolError>","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":1120,"byte_end":1143,"line_start":41,"line_end":41,"column_start":15,"column_end":38},"name":"destroy_descriptor_pool","qualname":"::device::DescriptorDevice::destroy_descriptor_pool","value":"pub unsafe fn destroy_descriptor_pool(&Self, P)","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":1176,"byte_end":1197,"line_start":43,"line_end":43,"column_start":15,"column_end":36},"name":"alloc_descriptor_sets","qualname":"::device::DescriptorDevice::alloc_descriptor_sets","value":"pub unsafe fn alloc_descriptor_sets<'a,\n                                    impl ExactSizeIterator<Item = &'a L>: ExactSizeIterator<Item\n                                    = &'a L>,\n                                    impl Extend<S>: Extend<S>>(&Self, &mut P,\n                                                               impl ExactSizeIterator<Item = &'a L>,\n                                                               &mut impl Extend<S>)\n-> Result<(), DeviceAllocationError> where L: 'a","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/device.rs","byte_start":1413,"byte_end":1436,"line_start":52,"line_end":52,"column_start":15,"column_end":38},"name":"dealloc_descriptor_sets","qualname":"::device::DescriptorDevice::dealloc_descriptor_sets","value":"pub unsafe fn dealloc_descriptor_sets<'a,\n                                      impl Iterator<Item = S>: Iterator<Item =\n                                      S>>(&Self, &mut P,\n                                          impl Iterator<Item = S>)","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":1690,"byte_end":1715,"line_start":5,"line_end":5,"column_start":16,"column_end":41},"name":"DescriptorPoolCreateFlags","qualname":"::types::DescriptorPoolCreateFlags","value":"DescriptorPoolCreateFlags {  }","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Flags to augment descriptor pool creation.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":83},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":1781,"byte_end":1800,"line_start":7,"line_end":7,"column_start":15,"column_end":34},"name":"FREE_DESCRIPTOR_SET","qualname":"::types::DescriptorPoolCreateFlags::FREE_DESCRIPTOR_SET","value":"Self","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Allows freeing individial sets.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":84},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":1915,"byte_end":1932,"line_start":10,"line_end":10,"column_start":15,"column_end":32},"name":"UPDATE_AFTER_BIND","qualname":"::types::DescriptorPoolCreateFlags::UPDATE_AFTER_BIND","value":"Self","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Allows allocating sets with layout created with matching backend-specific flag.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2132,"byte_end":2152,"line_start":18,"line_end":18,"column_start":12,"column_end":32},"name":"DescriptorTotalCount","qualname":"::types::DescriptorTotalCount","value":"DescriptorTotalCount { sampler, combined_image_sampler, sampled_image, storage_image, uniform_texel_buffer, storage_texel_buffer, uniform_buffer, storage_buffer, uniform_buffer_dynamic, storage_buffer_dynamic, input_attachment, acceleration_structure, inline_uniform_block_bytes, inline_uniform_block_bindings }","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":" Number of descriptors of each type.","sig":null,"attributes":[{"value":"/ Number of descriptors of each type.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":1949,"byte_end":1988,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":1989,"byte_end":1992,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ For `InlineUniformBlock` this value is number of bytes instead.","span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":1993,"byte_end":2060,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2163,"byte_end":2170,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"sampler","qualname":"::types::DescriptorTotalCount::sampler","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":143},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2185,"byte_end":2207,"line_start":20,"line_end":20,"column_start":9,"column_end":31},"name":"combined_image_sampler","qualname":"::types::DescriptorTotalCount::combined_image_sampler","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":144},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2222,"byte_end":2235,"line_start":21,"line_end":21,"column_start":9,"column_end":22},"name":"sampled_image","qualname":"::types::DescriptorTotalCount::sampled_image","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2250,"byte_end":2263,"line_start":22,"line_end":22,"column_start":9,"column_end":22},"name":"storage_image","qualname":"::types::DescriptorTotalCount::storage_image","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2278,"byte_end":2298,"line_start":23,"line_end":23,"column_start":9,"column_end":29},"name":"uniform_texel_buffer","qualname":"::types::DescriptorTotalCount::uniform_texel_buffer","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":147},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2313,"byte_end":2333,"line_start":24,"line_end":24,"column_start":9,"column_end":29},"name":"storage_texel_buffer","qualname":"::types::DescriptorTotalCount::storage_texel_buffer","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":148},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2348,"byte_end":2362,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"name":"uniform_buffer","qualname":"::types::DescriptorTotalCount::uniform_buffer","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":149},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2377,"byte_end":2391,"line_start":26,"line_end":26,"column_start":9,"column_end":23},"name":"storage_buffer","qualname":"::types::DescriptorTotalCount::storage_buffer","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":150},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2406,"byte_end":2428,"line_start":27,"line_end":27,"column_start":9,"column_end":31},"name":"uniform_buffer_dynamic","qualname":"::types::DescriptorTotalCount::uniform_buffer_dynamic","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":151},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2443,"byte_end":2465,"line_start":28,"line_end":28,"column_start":9,"column_end":31},"name":"storage_buffer_dynamic","qualname":"::types::DescriptorTotalCount::storage_buffer_dynamic","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":152},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2480,"byte_end":2496,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"input_attachment","qualname":"::types::DescriptorTotalCount::input_attachment","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":153},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2511,"byte_end":2533,"line_start":30,"line_end":30,"column_start":9,"column_end":31},"name":"acceleration_structure","qualname":"::types::DescriptorTotalCount::acceleration_structure","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":154},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2548,"byte_end":2574,"line_start":31,"line_end":31,"column_start":9,"column_end":35},"name":"inline_uniform_block_bytes","qualname":"::types::DescriptorTotalCount::inline_uniform_block_bytes","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":155},"span":{"file_name":"/home/vagrant/.cargo/registry/src/github.com-1ecc6299db9ec823/gpu-descriptor-types-0.1.1/src/types.rs","byte_start":2589,"byte_end":2618,"line_start":32,"line_end":32,"column_start":9,"column_end":38},"name":"inline_uniform_block_bindings","qualname":"::types::DescriptorTotalCount::inline_uniform_block_bindings","value":"u32","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}